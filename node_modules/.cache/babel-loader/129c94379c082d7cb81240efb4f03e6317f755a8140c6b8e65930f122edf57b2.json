{"ast":null,"code":"var _jsxFileName = \"/Users/jasonding/Desktop/RAG-example/src/components/WikiSearchDemo.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction WikiSearchDemo() {\n  _s();\n  const [question, setQuestion] = useState('');\n  const [responseData, setResponseData] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const callApi = async () => {\n    if (!question.trim()) {\n      alert('Please enter a question.');\n      return;\n    }\n    const normalizeQuery = str => str.trim().replace(/[?.!]+$/, '');\n    // const normalizedQuestion = normalizeQuery(question);\n    const normalizedQuestion = \"what is openai\";\n    console.log('Normalized query:', normalizedQuestion);\n    setLoading(true);\n    setError(null);\n    setResponseData(null);\n    try {\n      const response = await fetch('/api/wikipedia', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          query: [normalizedQuestion],\n          // query: [\"What is OpenAI\"],\n          rerank: true,\n          num_blocks_to_rerank: 10,\n          num_blocks: 1,\n          search_filters: [{\n            field_name: 'language',\n            filter_type: 'eq',\n            field_value: 'en'\n          }]\n        })\n      });\n      if (!response.ok) {\n        throw new Error(`Error: ${response.status} ${response.statusText}`);\n      }\n      const data = await response.json();\n      setResponseData(data);\n    } catch (err) {\n      setError(err.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: '2rem'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Wikipedia Search API Demo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: '1rem'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: question,\n        onChange: e => setQuestion(e.target.value),\n        placeholder: \"Enter your question...\",\n        style: {\n          padding: '0.5rem',\n          width: '300px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: callApi,\n        disabled: loading,\n        style: {\n          marginLeft: '0.5rem'\n        },\n        children: loading ? 'Searching...' : 'Search'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 17\n    }, this), responseData && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Response:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n        style: {\n          background: '#f4f4f4',\n          padding: '1rem'\n        },\n        children: JSON.stringify(responseData, null, 2)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }, this), responseData[0] && responseData[0].results && responseData[0].results.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: '1rem'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Reply Content:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: responseData[0].results[0].content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n}\n_s(WikiSearchDemo, \"SJX0Nfe1h/HTYpYrmkJkWUzk0KU=\");\n_c = WikiSearchDemo;\nexport default WikiSearchDemo;\nvar _c;\n$RefreshReg$(_c, \"WikiSearchDemo\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","WikiSearchDemo","_s","question","setQuestion","responseData","setResponseData","loading","setLoading","error","setError","callApi","trim","alert","normalizeQuery","str","replace","normalizedQuestion","console","log","response","fetch","method","headers","body","JSON","stringify","query","rerank","num_blocks_to_rerank","num_blocks","search_filters","field_name","filter_type","field_value","ok","Error","status","statusText","data","json","err","message","style","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","marginBottom","type","value","onChange","e","target","placeholder","width","onClick","disabled","marginLeft","color","background","results","length","marginTop","content","_c","$RefreshReg$"],"sources":["/Users/jasonding/Desktop/RAG-example/src/components/WikiSearchDemo.jsx"],"sourcesContent":["import React, { useState } from 'react';\n\nfunction WikiSearchDemo() {\n  const [question, setQuestion] = useState('');\n  const [responseData, setResponseData] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const callApi = async () => {\n    if (!question.trim()) {\n      alert('Please enter a question.');\n      return;\n    }\n\n    const normalizeQuery = (str) => str.trim().replace(/[?.!]+$/, '');\n    // const normalizedQuestion = normalizeQuery(question);\n    const normalizedQuestion = \"what is openai\";\n    console.log('Normalized query:', normalizedQuestion);\n\n    setLoading(true);\n    setError(null);\n    setResponseData(null);\n\n    try {\n      const response = await fetch('/api/wikipedia', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({\n          query: [normalizedQuestion],\n          // query: [\"What is OpenAI\"],\n          rerank: true,\n          num_blocks_to_rerank: 10,\n          num_blocks: 1,\n          search_filters: [\n            {\n              field_name: 'language',\n              filter_type: 'eq',\n              field_value: 'en'\n            }\n          ]\n        })\n      });\n\n      if (!response.ok) {\n        throw new Error(`Error: ${response.status} ${response.statusText}`);\n      }\n\n      const data = await response.json();\n      setResponseData(data);\n    } catch (err) {\n      setError(err.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div style={{ padding: '2rem' }}>\n      <h1>Wikipedia Search API Demo</h1>\n      <div style={{ marginBottom: '1rem' }}>\n        <input\n          type=\"text\"\n          value={question}\n          onChange={(e) => setQuestion(e.target.value)}\n          placeholder=\"Enter your question...\"\n          style={{ padding: '0.5rem', width: '300px' }}\n        />\n        <button onClick={callApi} disabled={loading} style={{ marginLeft: '0.5rem' }}>\n          {loading ? 'Searching...' : 'Search'}\n        </button>\n      </div>\n      {error && <p style={{ color: 'red' }}>Error: {error}</p>}\n      {responseData && (\n        <div>\n          <h2>Response:</h2>\n          <pre style={{ background: '#f4f4f4', padding: '1rem' }}>\n            {JSON.stringify(responseData, null, 2)}\n          </pre>\n          {responseData[0] &&\n            responseData[0].results &&\n            responseData[0].results.length > 0 && (\n              <div style={{ marginTop: '1rem' }}>\n                <h3>Reply Content:</h3>\n                <p>{responseData[0].results[0].content}</p>\n              </div>\n            )}\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default WikiSearchDemo;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}