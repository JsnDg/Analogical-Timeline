{"ast":null,"code":"var _jsxFileName = \"/Users/jasonding/Desktop/Robot2025/src/components/Showcase.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$(),\n  _s4 = $RefreshSig$(),\n  _s5 = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\n\n/** 生成随机 ID 的小工具函数，用于给新添加的事件分配稳定的 event.id */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction generateUniqueId() {\n  return Math.random().toString(36).substr(2, 9);\n}\n\n/** \n * Helper function to generate a curved path (cubic Bezier curve example)\n */\nfunction generateCurvePath(x1, y1, x2, y2) {\n  const cx = (x1 + x2) / 2;\n  return `M ${x1},${y1} C ${cx},${y1} ${cx},${y2} ${x2},${y2}`;\n}\n\n/**\n * Modal Component for adding new events\n */\nfunction AddEventModal({\n  isOpen,\n  onClose,\n  onSubmit\n}) {\n  _s();\n  const [date, setDate] = useState('');\n  const [title, setTitle] = useState('');\n  const [detail, setDetail] = useState('');\n  if (!isOpen) return null;\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (date && title) {\n      onSubmit({\n        date,\n        title,\n        detail\n      });\n      onClose();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      position: 'fixed',\n      top: 0,\n      left: 0,\n      right: 0,\n      bottom: 0,\n      backgroundColor: 'rgba(0, 0, 0, 0.5)',\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      zIndex: 1000\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        backgroundColor: 'white',\n        padding: '20px',\n        borderRadius: '8px',\n        width: '400px',\n        boxShadow: '0 4px 8px rgba(0,0,0,0.2)'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        style: {\n          marginTop: 0\n        },\n        children: \"Add New Event\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginBottom: '15px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            style: {\n              display: 'block',\n              marginBottom: '5px'\n            },\n            children: \"Date (YYYY-MM-DD):\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"date\",\n            value: date,\n            onChange: e => setDate(e.target.value),\n            style: {\n              width: '100%',\n              padding: '8px',\n              borderRadius: '4px',\n              border: '1px solid #ddd'\n            },\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginBottom: '15px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            style: {\n              display: 'block',\n              marginBottom: '5px'\n            },\n            children: \"Title:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: title,\n            onChange: e => setTitle(e.target.value),\n            style: {\n              width: '100%',\n              padding: '8px',\n              borderRadius: '4px',\n              border: '1px solid #ddd'\n            },\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginBottom: '15px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            style: {\n              display: 'block',\n              marginBottom: '5px'\n            },\n            children: \"Details:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            value: detail,\n            onChange: e => setDetail(e.target.value),\n            style: {\n              width: '100%',\n              padding: '8px',\n              borderRadius: '4px',\n              border: '1px solid #ddd',\n              minHeight: '100px'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            justifyContent: 'flex-end',\n            gap: '10px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: onClose,\n            style: {\n              padding: '8px 16px',\n              border: '1px solid #ddd',\n              borderRadius: '4px',\n              backgroundColor: '#f1f1f1',\n              cursor: 'pointer'\n            },\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            style: {\n              padding: '8px 16px',\n              border: 'none',\n              borderRadius: '4px',\n              backgroundColor: '#007BFF',\n              color: 'white',\n              cursor: 'pointer'\n            },\n            children: \"Add Event\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n\n/**\n * ConnectionLine 组件：绘制正式的红色连接线，\n * hover 时加粗并增加 glow 效果，点击时弹出确认后删除该连接。\n */\n_s(AddEventModal, \"4VA6FwmwkOYZPhDx0sMynZpeWtk=\");\n_c = AddEventModal;\nfunction ConnectionLine({\n  fromPos,\n  toPos,\n  reason,\n  onDelete\n}) {\n  _s2();\n  const [hovered, setHovered] = useState(false);\n  const strokeColor = hovered ? 'rgba(220,20,60,0.9)' : 'rgba(255,0,0,0.4)';\n  const strokeWidth = hovered ? 3 : 2;\n  const pathData = generateCurvePath(fromPos.x, fromPos.y, toPos.x, toPos.y);\n  return /*#__PURE__*/_jsxDEV(\"g\", {\n    onMouseEnter: () => setHovered(true),\n    onMouseLeave: () => setHovered(false),\n    onClick: e => {\n      e.stopPropagation();\n      if (window.confirm('Delete this connection?')) {\n        onDelete();\n      }\n    },\n    style: {\n      cursor: 'pointer'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"path\", {\n      d: pathData,\n      stroke: strokeColor,\n      strokeWidth: strokeWidth,\n      fill: \"none\",\n      style: {\n        pointerEvents: 'all',\n        filter: hovered ? 'drop-shadow(0 0 3px rgba(255,0,0,0.3))' : 'none'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n      x: (fromPos.x + toPos.x) / 2,\n      y: (fromPos.y + toPos.y) / 2 - 5,\n      fill: strokeColor,\n      fontSize: hovered ? 14 : 12,\n      fontWeight: hovered ? 'bold' : 'normal',\n      textAnchor: \"middle\",\n      style: {\n        pointerEvents: 'none',\n        filter: hovered ? 'drop-shadow(0 1px 2px rgba(255,255,255,0.8))' : 'none'\n      },\n      children: reason\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 145,\n    columnNumber: 5\n  }, this);\n}\n\n/** \n * 生成一个上下交错的偏移数组。例如：\n * count=1 => [0]\n * count=2 => [-40, 40]\n * count=3 => [-80, 0, 80]\n * ...\n * gap 用于控制卡片间的垂直间距\n */\n_s2(ConnectionLine, \"V8YbV+gTZxGliGj1g0fftBlvsq4=\");\n_c2 = ConnectionLine;\nfunction getOffsets(count, gap = 80) {\n  const offsets = [];\n  const half = Math.floor(count / 2);\n  for (let i = 0; i < count; i++) {\n    offsets.push((i - half) * gap);\n  }\n  // 偶数个让它们对称\n  if (count % 2 === 0) {\n    offsets.forEach((val, idx) => {\n      offsets[idx] = val + gap / 2;\n    });\n  }\n  return offsets;\n}\n\n/**\n * 全局悬浮弹框组件：接收当前 hoveredEvent（包含 rect、title、detail 等信息），在页面最顶层显示\n */\nfunction GlobalTooltip({\n  hoveredEvent\n}) {\n  if (!hoveredEvent) return null;\n  const {\n    rect,\n    title,\n    detail\n  } = hoveredEvent;\n  if (!rect) return null;\n\n  // 让弹框中心对准卡片的中点，并稍微往下移动\n  const left = rect.left + rect.width / 2 - 100; // 让宽度 200 px 居中\n  const top = rect.bottom + 8; // 往下 8px\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      position: 'fixed',\n      top,\n      left,\n      width: '200px',\n      backgroundColor: '#fff',\n      border: '1px solid #ddd',\n      borderRadius: '6px',\n      boxShadow: '0 4px 8px rgba(0,0,0,0.15)',\n      padding: '8px',\n      fontSize: '12px',\n      zIndex: 9999,\n      // 保证在最顶层\n      pointerEvents: 'none' // 让鼠标可穿透\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        fontWeight: 'bold',\n        marginBottom: '4px'\n      },\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: detail\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 220,\n    columnNumber: 5\n  }, this);\n}\n\n/**\n * EventGroup 组件：\n * - 同一组（<= 3 个月间隔）的事件在同一个纵向位置 groupTop（由 Timeline 计算好的）\n * - 每个事件卡片上下错落排布（避免标题互相遮挡）\n * - Hover 时在全局显示弹出框\n */\n_c3 = GlobalTooltip;\nfunction EventGroup({\n  events,\n  registerPosition,\n  onEventClick,\n  onDelete,\n  scrollPos,\n  groupTop,\n  setHoveredEvent\n}) {\n  _s3();\n  const sortedEvents = [...events].sort((a, b) => new Date(a.date) - new Date(b.date));\n  const cardRefs = useRef([]);\n\n  // 这里可调 gap 来增加/减少组内事件间的垂直距离\n  const offsets = getOffsets(sortedEvents.length, 80);\n\n  // 将卡片 DOM 中心点注册给全局，用于画连接线\n  useEffect(() => {\n    sortedEvents.forEach((ev, i) => {\n      if (cardRefs.current[i]) {\n        const rect = cardRefs.current[i].getBoundingClientRect();\n        const centerPos = {\n          x: rect.left + rect.width / 2,\n          y: rect.top + rect.height / 2\n        };\n        registerPosition(ev.id, centerPos);\n      }\n    });\n  }, [sortedEvents, registerPosition, scrollPos]);\n\n  // Hover 时调用 setHoveredEvent\n  const handleMouseEnter = (ev, i) => {\n    if (!ev.detail) return; // 如果没有详情，不弹框\n    const rect = cardRefs.current[i].getBoundingClientRect();\n    setHoveredEvent({\n      rect,\n      title: ev.title,\n      detail: ev.detail\n    });\n  };\n  const handleMouseLeave = () => {\n    setHoveredEvent(null);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      position: 'absolute',\n      top: groupTop,\n      left: 0,\n      width: '280px',\n      zIndex: 500\n    },\n    children: sortedEvents.map((ev, i) => {\n      const offsetTop = offsets[i];\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: el => cardRefs.current[i] = el,\n        style: {\n          position: 'absolute',\n          left: '10px',\n          // 调整卡片与时间线的横向距离\n          top: offsetTop + 'px',\n          width: '180px',\n          height: '60px',\n          padding: '10px',\n          border: '2px solid #ddd',\n          borderRadius: '8px',\n          backgroundColor: '#fff',\n          boxShadow: '0 2px 4px rgba(0,0,0,0.08)',\n          cursor: 'pointer',\n          transition: 'all 0.2s ease'\n        },\n        onClick: () => onEventClick(ev.id),\n        onMouseEnter: () => handleMouseEnter(ev, i),\n        onMouseLeave: handleMouseLeave,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            fontWeight: 'bold',\n            marginBottom: '4px',\n            fontSize: '14px',\n            color: '#007BFF'\n          },\n          children: ev.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 318,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            fontSize: '13px',\n            marginBottom: '6px',\n            color: '#555'\n          },\n          children: ev.date\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 327,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: e => {\n            e.stopPropagation();\n            onDelete(ev.id);\n          },\n          style: {\n            position: 'absolute',\n            top: '6px',\n            right: '6px',\n            background: 'transparent',\n            border: 'none',\n            color: 'rgba(255,0,0,0.6)',\n            fontSize: '14px',\n            cursor: 'pointer',\n            transition: 'color 0.2s ease'\n          },\n          children: \"\\xD7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 336,\n          columnNumber: 13\n        }, this)]\n      }, ev.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 284,\n    columnNumber: 5\n  }, this);\n}\n\n/**\n * Timeline 组件：一条时间轴 + 波次标题 + 事件分组\n * 在这里我们对每个分组做「防重叠处理」：若相邻分组位置过近，就往下推。\n */\n_s3(EventGroup, \"nyqydayDKU2pC+rTCyb4pjAG0+4=\");\n_c4 = EventGroup;\nfunction Timeline({\n  wave,\n  registerPosition,\n  onEventClick,\n  onAddEvent,\n  onDeleteEvent,\n  scrollPos,\n  setHoveredEvent\n}) {\n  const timelineHeight = 1600;\n\n  // 根据 wave.events 里最早的日期，确定本时间轴的起点\n  const timestamps = wave.events.map(e => new Date(e.date).getTime());\n  const firstEventTime = timestamps.length > 0 ? Math.min(...timestamps) : Date.now();\n  const firstEventDate = new Date(firstEventTime);\n  const timelineStart = new Date(firstEventDate.getFullYear(), 0, 1).getTime();\n\n  // 这里可自定义时间跨度，比如 8 年\n  const eightYearsInMs = 8 * 365.25 * 24 * 60 * 60 * 1000;\n  const timelineEndTime = timelineStart + eightYearsInMs;\n  const safeTimeSpan = timelineEndTime - timelineStart;\n\n  // 按日期排序\n  const sortedEvents = [...wave.events].sort((a, b) => new Date(a.date) - new Date(b.date));\n\n  // 将事件按照“相距 <= 3 个月”分组\n  const THREE_MONTHS_MS = 3 * 30 * 24 * 60 * 60 * 1000;\n  const eventGroups = [];\n  let currentGroup = [];\n  sortedEvents.forEach((ev, index) => {\n    if (index === 0) {\n      currentGroup.push(ev);\n    } else {\n      const prevTime = new Date(sortedEvents[index - 1].date).getTime();\n      const currTime = new Date(ev.date).getTime();\n      if (currTime - prevTime <= THREE_MONTHS_MS) {\n        currentGroup.push(ev);\n      } else {\n        eventGroups.push([...currentGroup]);\n        currentGroup = [ev];\n      }\n    }\n  });\n  if (currentGroup.length > 0) {\n    eventGroups.push(currentGroup);\n  }\n\n  // 防止分组之间互相重叠\n  // 每个分组的\"理论位置\" = ratio * timelineHeight\n  // 再根据前一个分组的底部位置，做一次向下推，避免重叠\n  let lastUsedPos = 0;\n  const groupPositions = []; // 存放每个分组最终的 top 值\n  const groupSpacing = 20; // 分组之间最少留出的间距\n\n  // 粗略估算一个组的高度：\n  //   - 组内事件数 = n\n  //   - offsets 范围 roughly [-gap*(n-1)/2, +gap*(n-1)/2]\n  //   - 另外卡片本身有 60px 高度\n  // => total height = (gap*(n-1)) + 60\n  //  这里 gap=80 => groupHeight ~ 80*(n-1)+60\n  function estimateGroupHeight(group) {\n    const n = group.length;\n    return 80 * (n - 1) + 60;\n  }\n  eventGroups.forEach(group => {\n    const firstEv = group[0];\n    const currentTime = new Date(firstEv.date).getTime();\n    const ratio = (currentTime - timelineStart) / safeTimeSpan;\n    const naivePos = ratio * timelineHeight;\n\n    // 估算本组高度\n    const groupHeight = estimateGroupHeight(group);\n\n    // 若 naivePos < lastUsedPos + groupSpacing, 则往下推\n    const finalPos = Math.max(naivePos, lastUsedPos + groupSpacing);\n    groupPositions.push(finalPos);\n\n    // 更新 lastUsedPos\n    lastUsedPos = finalPos + groupHeight;\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      flex: '1',\n      margin: '0 20px',\n      position: 'relative',\n      padding: '15px',\n      backgroundColor: 'rgba(255,255,255,0.7)',\n      borderRadius: '8px',\n      boxShadow: '0 2px 10px rgba(0,0,0,0.05)'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        justifyContent: 'space-between',\n        alignItems: 'center',\n        marginBottom: '2px',\n        borderBottom: '1px solid #eee',\n        paddingBottom: '2px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        style: {\n          fontSize: '18px',\n          margin: 0,\n          color: '#2c3e50',\n          fontWeight: '600'\n        },\n        children: wave.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 468,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onAddEvent,\n        style: {\n          width: '30px',\n          height: '30px',\n          borderRadius: '50%',\n          backgroundColor: '#007BFF',\n          border: 'none',\n          color: '#fff',\n          fontWeight: 'bold',\n          cursor: 'pointer',\n          zIndex: 10,\n          boxShadow: '0 2px 5px rgba(0,123,255,0.4)',\n          transition: 'all 0.2s ease'\n        },\n        title: \"Add Event\",\n        children: \"+\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 476,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 460,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        fontSize: '14px',\n        color: '#666',\n        marginBottom: '70px',\n        textAlign: 'center',\n        fontStyle: 'italic'\n      },\n      children: wave.period\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 496,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: 'relative',\n        width: '2px',\n        backgroundColor: '#bbb',\n        height: timelineHeight + 'px',\n        marginLeft: '0',\n        marginTop: '-70px',\n        borderRadius: '1px'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          position: 'absolute',\n          top: '0',\n          left: '-10px',\n          right: '-10px'\n        },\n        children: eventGroups.map((group, idx) => {\n          const finalPos = groupPositions[idx];\n          return /*#__PURE__*/_jsxDEV(EventGroup, {\n            events: group,\n            registerPosition: registerPosition,\n            onEventClick: onEventClick,\n            onDelete: id => onDeleteEvent(id),\n            scrollPos: scrollPos,\n            groupTop: finalPos,\n            setHoveredEvent: setHoveredEvent\n          }, idx, false, {\n            fileName: _jsxFileName,\n            lineNumber: 520,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 516,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 507,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 450,\n    columnNumber: 5\n  }, this);\n}\n\n/**\n * ConnectionsLayer 组件：渲染所有正式连接（红色曲线）以及正在建立的 pending connection（红色箭头跟随鼠标）。\n */\n_c5 = Timeline;\nfunction ConnectionsLayer({\n  connections,\n  eventPositions,\n  containerRef,\n  pendingConnection,\n  pendingConnectionEnd,\n  onDeleteConnection\n}) {\n  const containerRect = containerRef.current ? containerRef.current.getBoundingClientRect() : {\n    left: 0,\n    top: 0\n  };\n  return /*#__PURE__*/_jsxDEV(\"svg\", {\n    style: {\n      position: 'absolute',\n      top: 0,\n      left: 0,\n      width: '100%',\n      height: '100%',\n      zIndex: 1,\n      pointerEvents: 'none'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"defs\", {\n      children: /*#__PURE__*/_jsxDEV(\"marker\", {\n        id: \"arrowhead\",\n        markerWidth: \"10\",\n        markerHeight: \"7\",\n        refX: \"10\",\n        refY: \"3.5\",\n        orient: \"auto\",\n        children: /*#__PURE__*/_jsxDEV(\"polygon\", {\n          points: \"0 0, 10 3.5, 0 7\",\n          fill: \"red\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 567,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 566,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 565,\n      columnNumber: 7\n    }, this), connections.map((conn, index) => {\n      const fromPos = eventPositions[conn.from];\n      const toPos = eventPositions[conn.to];\n      if (!fromPos || !toPos) return null;\n      const adjustedFrom = {\n        x: fromPos.x - containerRect.left,\n        y: fromPos.y - containerRect.top\n      };\n      const adjustedTo = {\n        x: toPos.x - containerRect.left,\n        y: toPos.y - containerRect.top\n      };\n      return /*#__PURE__*/_jsxDEV(ConnectionLine, {\n        fromPos: adjustedFrom,\n        toPos: adjustedTo,\n        reason: conn.reason,\n        onDelete: () => onDeleteConnection(index)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 579,\n        columnNumber: 11\n      }, this);\n    }), pendingConnection && pendingConnectionEnd && eventPositions[pendingConnection.startEventId] && (() => {\n      const startPosGlobal = eventPositions[pendingConnection.startEventId];\n      const startPos = {\n        x: startPosGlobal.x - containerRect.left,\n        y: startPosGlobal.y - containerRect.top\n      };\n      return /*#__PURE__*/_jsxDEV(\"line\", {\n        x1: startPos.x,\n        y1: startPos.y,\n        x2: pendingConnectionEnd.x,\n        y2: pendingConnectionEnd.y,\n        stroke: \"red\",\n        strokeWidth: \"3\",\n        markerEnd: \"url(#arrowhead)\",\n        style: {\n          pointerEvents: 'none'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 600,\n        columnNumber: 13\n      }, this);\n    })()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 554,\n    columnNumber: 5\n  }, this);\n}\n\n/**\n * ConnectionReasonModal - Modal component for entering connection reason\n */\n_c6 = ConnectionsLayer;\nfunction ConnectionReasonModal({\n  isOpen,\n  onClose,\n  onSubmit\n}) {\n  _s4();\n  const [reason, setReason] = useState('Manual connection');\n  if (!isOpen) return null;\n  const handleSubmit = e => {\n    e.preventDefault();\n    onSubmit(reason || 'Manual connection');\n    onClose();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      position: 'fixed',\n      top: 0,\n      left: 0,\n      right: 0,\n      bottom: 0,\n      backgroundColor: 'rgba(0, 0, 0, 0.5)',\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      zIndex: 1000\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        backgroundColor: 'white',\n        padding: '20px',\n        borderRadius: '8px',\n        width: '400px',\n        boxShadow: '0 4px 8px rgba(0,0,0,0.2)'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        style: {\n          marginTop: 0\n        },\n        children: \"Connection Reason\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 650,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginBottom: '15px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            style: {\n              display: 'block',\n              marginBottom: '5px'\n            },\n            children: \"Reason for connection:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 653,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: reason,\n            onChange: e => setReason(e.target.value),\n            style: {\n              width: '100%',\n              padding: '8px',\n              borderRadius: '4px',\n              border: '1px solid #ddd'\n            },\n            autoFocus: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 654,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 652,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            justifyContent: 'flex-end',\n            gap: '10px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: onClose,\n            style: {\n              padding: '8px 16px',\n              border: '1px solid #ddd',\n              borderRadius: '4px',\n              backgroundColor: '#f1f1f1',\n              cursor: 'pointer'\n            },\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 668,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            style: {\n              padding: '8px 16px',\n              border: 'none',\n              borderRadius: '4px',\n              backgroundColor: '#007BFF',\n              color: 'white',\n              cursor: 'pointer'\n            },\n            children: \"Create Connection\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 681,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 667,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 651,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 643,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 631,\n    columnNumber: 5\n  }, this);\n}\n\n/**\n * Showcase 主容器组件：\n * - 加载 JSON 文件中的 waves 与 connections 数据\n * - 支持添加、删除事件，以及通过点击连接不同事件形成连接线\n * - 引入全局 hoveredEvent 来显示弹出框\n */\n_s4(ConnectionReasonModal, \"ZHQXH6Y0VcDeHTpWchZL8dxB+Q8=\");\n_c7 = ConnectionReasonModal;\nfunction Showcase() {\n  _s5();\n  // 波次 (waves) 与连接 (connections)\n  const [waves, setWaves] = useState([]);\n  const [connections, setConnections] = useState([]);\n\n  // 注册事件节点的位置信息 (eventPositions[eventId] = { x, y })\n  const [eventPositions, setEventPositions] = useState({});\n  const registerPosition = (id, pos) => {\n    setEventPositions(prev => ({\n      ...prev,\n      [id]: pos\n    }));\n  };\n\n  // 用于连接事件的临时状态\n  const [pendingConnection, setPendingConnection] = useState(null); // { startEventId }\n  const [pendingConnectionEnd, setPendingConnectionEnd] = useState(null);\n\n  // 模态框的状态\n  const [showAddModal, setShowAddModal] = useState(false);\n  const [showConnectionModal, setShowConnectionModal] = useState(false);\n\n  // 用于标记「当前在哪个 wave 上添加事件」\n  const [activeWaveIndex, setActiveWaveIndex] = useState(null);\n\n  // 用于标记连接终点\n  const [pendingTo, setPendingTo] = useState(null);\n\n  // 全局 hover 事件：{ rect, title, detail }\n  const [hoveredEvent, setHoveredEvent] = useState(null);\n\n  // 从 /data.json 加载数据\n  useEffect(() => {\n    fetch('/data.json').then(res => res.json()).then(data => {\n      setWaves(data.waves);\n      setConnections(data.connections);\n    }).catch(error => console.error(\"Error loading data:\", error));\n  }, []);\n\n  // 点击事件时，若无 pendingConnection，则设为起点；若已有，则设为终点\n  const handleEventClick = eventId => {\n    if (!pendingConnection) {\n      setPendingConnection({\n        startEventId: eventId\n      });\n    } else {\n      if (pendingConnection.startEventId === eventId) {\n        // 如果再次点到同一个事件，取消连接\n        setPendingConnection(null);\n        setPendingConnectionEnd(null);\n        return;\n      }\n      // 否则进入「填写连接原因」阶段\n      setPendingTo(eventId);\n      setShowConnectionModal(true);\n    }\n  };\n\n  // 点击「+」按钮添加新事件\n  const handleAddEvent = waveIndex => {\n    setActiveWaveIndex(waveIndex);\n    setShowAddModal(true);\n  };\n\n  // 提交新事件\n  const handleSubmitNewEvent = eventData => {\n    setWaves(prev => {\n      const newWaves = [...prev];\n      const newId = generateUniqueId();\n      newWaves[activeWaveIndex].events.push({\n        id: newId,\n        date: eventData.date,\n        title: eventData.title,\n        detail: eventData.detail\n      });\n      return newWaves;\n    });\n  };\n\n  // 填写连接原因后，添加新连接\n  const handleSubmitConnection = reason => {\n    setConnections(prev => [...prev, {\n      from: pendingConnection.startEventId,\n      to: pendingTo,\n      reason\n    }]);\n    setPendingConnection(null);\n    setPendingConnectionEnd(null);\n    setPendingTo(null);\n  };\n\n  // 删除事件\n  const handleDeleteEvent = eventId => {\n    // 在所有 wave 中查找并删除\n    setWaves(prev => {\n      return prev.map(w => ({\n        ...w,\n        events: w.events.filter(e => e.id !== eventId)\n      }));\n    });\n    // 删除与之相关的连接\n    setConnections(prev => prev.filter(conn => conn.from !== eventId && conn.to !== eventId));\n  };\n\n  // 删除连接\n  const handleDeleteConnection = connIndex => {\n    setConnections(prev => prev.filter((_, index) => index !== connIndex));\n  };\n\n  // 跟踪滚动位置（用于在 window.scrollY 改变时重新计算坐标）\n  const [scrollPos, setScrollPos] = useState(0);\n  useEffect(() => {\n    const handleScroll = () => setScrollPos(window.scrollY);\n    window.addEventListener('scroll', handleScroll);\n    return () => window.removeEventListener('scroll', handleScroll);\n  }, []);\n\n  // 如果正在连线，则鼠标移动时更新临时连线终点\n  const containerRef = useRef(null);\n  const handleMouseMove = e => {\n    if (pendingConnection) {\n      const containerRect = containerRef.current.getBoundingClientRect();\n      setPendingConnectionEnd({\n        x: e.clientX - containerRect.left,\n        y: e.clientY - containerRect.top\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: containerRef,\n    onMouseMove: handleMouseMove,\n    style: {\n      padding: '20px',\n      position: 'relative'\n    },\n    children: [/*#__PURE__*/_jsxDEV(AddEventModal, {\n      isOpen: showAddModal,\n      onClose: () => setShowAddModal(false),\n      onSubmit: handleSubmitNewEvent\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 845,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ConnectionReasonModal, {\n      isOpen: showConnectionModal,\n      onClose: () => {\n        setShowConnectionModal(false);\n        setPendingConnection(null);\n        setPendingConnectionEnd(null);\n      },\n      onSubmit: handleSubmitConnection\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 852,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(GlobalTooltip, {\n      hoveredEvent: hoveredEvent\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 863,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      style: {\n        textAlign: 'center',\n        marginBottom: '40px'\n      },\n      children: \"Analogical Timeline of Tech Wave\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 865,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        justifyContent: 'space-around',\n        flexWrap: 'wrap',\n        marginTop: '40px',\n        position: 'relative',\n        zIndex: 0\n      },\n      children: waves.map((wave, index) => /*#__PURE__*/_jsxDEV(Timeline, {\n        wave: wave,\n        registerPosition: registerPosition,\n        onEventClick: handleEventClick,\n        onAddEvent: () => handleAddEvent(index),\n        onDeleteEvent: handleDeleteEvent,\n        scrollPos: scrollPos\n        // 把 setHoveredEvent 传下去，让 EventGroup 可以控制全局弹框\n        ,\n        setHoveredEvent: setHoveredEvent\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 881,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 870,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ConnectionsLayer, {\n      connections: connections,\n      eventPositions: eventPositions,\n      containerRef: containerRef,\n      pendingConnection: pendingConnection,\n      pendingConnectionEnd: pendingConnectionEnd,\n      onDeleteConnection: handleDeleteConnection\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 896,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 836,\n    columnNumber: 5\n  }, this);\n}\n_s5(Showcase, \"S0u3XF6FZ7WYSzWID8/iem8xwQw=\");\n_c8 = Showcase;\nexport default Showcase;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8;\n$RefreshReg$(_c, \"AddEventModal\");\n$RefreshReg$(_c2, \"ConnectionLine\");\n$RefreshReg$(_c3, \"GlobalTooltip\");\n$RefreshReg$(_c4, \"EventGroup\");\n$RefreshReg$(_c5, \"Timeline\");\n$RefreshReg$(_c6, \"ConnectionsLayer\");\n$RefreshReg$(_c7, \"ConnectionReasonModal\");\n$RefreshReg$(_c8, \"Showcase\");","map":{"version":3,"names":["React","useState","useEffect","useRef","jsxDEV","_jsxDEV","generateUniqueId","Math","random","toString","substr","generateCurvePath","x1","y1","x2","y2","cx","AddEventModal","isOpen","onClose","onSubmit","_s","date","setDate","title","setTitle","detail","setDetail","handleSubmit","e","preventDefault","style","position","top","left","right","bottom","backgroundColor","display","alignItems","justifyContent","zIndex","children","padding","borderRadius","width","boxShadow","marginTop","fileName","_jsxFileName","lineNumber","columnNumber","marginBottom","type","value","onChange","target","border","required","minHeight","gap","onClick","cursor","color","_c","ConnectionLine","fromPos","toPos","reason","onDelete","_s2","hovered","setHovered","strokeColor","strokeWidth","pathData","x","y","onMouseEnter","onMouseLeave","stopPropagation","window","confirm","d","stroke","fill","pointerEvents","filter","fontSize","fontWeight","textAnchor","_c2","getOffsets","count","offsets","half","floor","i","push","forEach","val","idx","GlobalTooltip","hoveredEvent","rect","_c3","EventGroup","events","registerPosition","onEventClick","scrollPos","groupTop","setHoveredEvent","_s3","sortedEvents","sort","a","b","Date","cardRefs","length","ev","current","getBoundingClientRect","centerPos","height","id","handleMouseEnter","handleMouseLeave","map","offsetTop","ref","el","transition","background","_c4","Timeline","wave","onAddEvent","onDeleteEvent","timelineHeight","timestamps","getTime","firstEventTime","min","now","firstEventDate","timelineStart","getFullYear","eightYearsInMs","timelineEndTime","safeTimeSpan","THREE_MONTHS_MS","eventGroups","currentGroup","index","prevTime","currTime","lastUsedPos","groupPositions","groupSpacing","estimateGroupHeight","group","n","firstEv","currentTime","ratio","naivePos","groupHeight","finalPos","max","flex","margin","borderBottom","paddingBottom","textAlign","fontStyle","period","marginLeft","_c5","ConnectionsLayer","connections","eventPositions","containerRef","pendingConnection","pendingConnectionEnd","onDeleteConnection","containerRect","markerWidth","markerHeight","refX","refY","orient","points","conn","from","to","adjustedFrom","adjustedTo","startEventId","startPosGlobal","startPos","markerEnd","_c6","ConnectionReasonModal","_s4","setReason","autoFocus","_c7","Showcase","_s5","waves","setWaves","setConnections","setEventPositions","pos","prev","setPendingConnection","setPendingConnectionEnd","showAddModal","setShowAddModal","showConnectionModal","setShowConnectionModal","activeWaveIndex","setActiveWaveIndex","pendingTo","setPendingTo","fetch","then","res","json","data","catch","error","console","handleEventClick","eventId","handleAddEvent","waveIndex","handleSubmitNewEvent","eventData","newWaves","newId","handleSubmitConnection","handleDeleteEvent","w","handleDeleteConnection","connIndex","_","setScrollPos","handleScroll","scrollY","addEventListener","removeEventListener","handleMouseMove","clientX","clientY","onMouseMove","flexWrap","_c8","$RefreshReg$"],"sources":["/Users/jasonding/Desktop/Robot2025/src/components/Showcase.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\n\n/** 生成随机 ID 的小工具函数，用于给新添加的事件分配稳定的 event.id */\nfunction generateUniqueId() {\n  return Math.random().toString(36).substr(2, 9);\n}\n\n/** \n * Helper function to generate a curved path (cubic Bezier curve example)\n */\nfunction generateCurvePath(x1, y1, x2, y2) {\n  const cx = (x1 + x2) / 2;\n  return `M ${x1},${y1} C ${cx},${y1} ${cx},${y2} ${x2},${y2}`;\n}\n\n/**\n * Modal Component for adding new events\n */\nfunction AddEventModal({ isOpen, onClose, onSubmit }) {\n  const [date, setDate] = useState('');\n  const [title, setTitle] = useState('');\n  const [detail, setDetail] = useState('');\n  \n  if (!isOpen) return null;\n  \n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (date && title) {\n      onSubmit({ date, title, detail });\n      onClose();\n    }\n  };\n  \n  return (\n    <div style={{\n      position: 'fixed',\n      top: 0,\n      left: 0,\n      right: 0,\n      bottom: 0,\n      backgroundColor: 'rgba(0, 0, 0, 0.5)',\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      zIndex: 1000,\n    }}>\n      <div style={{\n        backgroundColor: 'white',\n        padding: '20px',\n        borderRadius: '8px',\n        width: '400px',\n        boxShadow: '0 4px 8px rgba(0,0,0,0.2)',\n      }}>\n        <h3 style={{ marginTop: 0 }}>Add New Event</h3>\n        <form onSubmit={handleSubmit}>\n          <div style={{ marginBottom: '15px' }}>\n            <label style={{ display: 'block', marginBottom: '5px' }}>Date (YYYY-MM-DD):</label>\n            <input \n              type=\"date\" \n              value={date} \n              onChange={(e) => setDate(e.target.value)}\n              style={{ \n                width: '100%', \n                padding: '8px', \n                borderRadius: '4px',\n                border: '1px solid #ddd'\n              }}\n              required\n            />\n          </div>\n          <div style={{ marginBottom: '15px' }}>\n            <label style={{ display: 'block', marginBottom: '5px' }}>Title:</label>\n            <input \n              type=\"text\" \n              value={title} \n              onChange={(e) => setTitle(e.target.value)}\n              style={{ \n                width: '100%', \n                padding: '8px', \n                borderRadius: '4px',\n                border: '1px solid #ddd'\n              }}\n              required\n            />\n          </div>\n          <div style={{ marginBottom: '15px' }}>\n            <label style={{ display: 'block', marginBottom: '5px' }}>Details:</label>\n            <textarea \n              value={detail} \n              onChange={(e) => setDetail(e.target.value)}\n              style={{ \n                width: '100%', \n                padding: '8px', \n                borderRadius: '4px',\n                border: '1px solid #ddd',\n                minHeight: '100px'\n              }}\n            />\n          </div>\n          <div style={{ display: 'flex', justifyContent: 'flex-end', gap: '10px' }}>\n            <button \n              type=\"button\" \n              onClick={onClose}\n              style={{\n                padding: '8px 16px',\n                border: '1px solid #ddd',\n                borderRadius: '4px',\n                backgroundColor: '#f1f1f1',\n                cursor: 'pointer'\n              }}\n            >\n              Cancel\n            </button>\n            <button \n              type=\"submit\"\n              style={{\n                padding: '8px 16px',\n                border: 'none',\n                borderRadius: '4px',\n                backgroundColor: '#007BFF',\n                color: 'white',\n                cursor: 'pointer'\n              }}\n            >\n              Add Event\n            </button>\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n}\n\n/**\n * ConnectionLine 组件：绘制正式的红色连接线，\n * hover 时加粗并增加 glow 效果，点击时弹出确认后删除该连接。\n */\nfunction ConnectionLine({ fromPos, toPos, reason, onDelete }) {\n  const [hovered, setHovered] = useState(false);\n  const strokeColor = hovered ? 'rgba(220,20,60,0.9)' : 'rgba(255,0,0,0.4)';\n  const strokeWidth = hovered ? 3 : 2;\n  const pathData = generateCurvePath(fromPos.x, fromPos.y, toPos.x, toPos.y);\n\n  return (\n    <g\n      onMouseEnter={() => setHovered(true)}\n      onMouseLeave={() => setHovered(false)}\n      onClick={(e) => {\n        e.stopPropagation();\n        if (window.confirm('Delete this connection?')) {\n          onDelete();\n        }\n      }}\n      style={{ cursor: 'pointer' }}\n    >\n      <path \n        d={pathData} \n        stroke={strokeColor} \n        strokeWidth={strokeWidth} \n        fill=\"none\" \n        style={{ \n          pointerEvents: 'all',\n          filter: hovered ? 'drop-shadow(0 0 3px rgba(255,0,0,0.3))' : 'none',\n        }} \n      />\n      <text\n        x={(fromPos.x + toPos.x) / 2}\n        y={(fromPos.y + toPos.y) / 2 - 5}\n        fill={strokeColor}\n        fontSize={hovered ? 14 : 12}\n        fontWeight={hovered ? 'bold' : 'normal'}\n        textAnchor=\"middle\"\n        style={{ \n          pointerEvents: 'none',\n          filter: hovered ? 'drop-shadow(0 1px 2px rgba(255,255,255,0.8))' : 'none',\n        }}\n      >\n        {reason}\n      </text>\n    </g>\n  );\n}\n\n/** \n * 生成一个上下交错的偏移数组。例如：\n * count=1 => [0]\n * count=2 => [-40, 40]\n * count=3 => [-80, 0, 80]\n * ...\n * gap 用于控制卡片间的垂直间距\n */\nfunction getOffsets(count, gap = 80) {\n  const offsets = [];\n  const half = Math.floor(count / 2);\n  for (let i = 0; i < count; i++) {\n    offsets.push((i - half) * gap);\n  }\n  // 偶数个让它们对称\n  if (count % 2 === 0) {\n    offsets.forEach((val, idx) => {\n      offsets[idx] = val + gap / 2;\n    });\n  }\n  return offsets;\n}\n\n/**\n * 全局悬浮弹框组件：接收当前 hoveredEvent（包含 rect、title、detail 等信息），在页面最顶层显示\n */\nfunction GlobalTooltip({ hoveredEvent }) {\n  if (!hoveredEvent) return null;\n  const { rect, title, detail } = hoveredEvent;\n  if (!rect) return null;\n\n  // 让弹框中心对准卡片的中点，并稍微往下移动\n  const left = rect.left + (rect.width / 2) - 100; // 让宽度 200 px 居中\n  const top = rect.bottom + 8; // 往下 8px\n\n  return (\n    <div \n      style={{\n        position: 'fixed',\n        top,\n        left,\n        width: '200px',\n        backgroundColor: '#fff',\n        border: '1px solid #ddd',\n        borderRadius: '6px',\n        boxShadow: '0 4px 8px rgba(0,0,0,0.15)',\n        padding: '8px',\n        fontSize: '12px',\n        zIndex: 9999, // 保证在最顶层\n        pointerEvents: 'none', // 让鼠标可穿透\n      }}\n    >\n      <div style={{ fontWeight: 'bold', marginBottom: '4px' }}>{title}</div>\n      <div>{detail}</div>\n    </div>\n  );\n}\n\n/**\n * EventGroup 组件：\n * - 同一组（<= 3 个月间隔）的事件在同一个纵向位置 groupTop（由 Timeline 计算好的）\n * - 每个事件卡片上下错落排布（避免标题互相遮挡）\n * - Hover 时在全局显示弹出框\n */\nfunction EventGroup({ events, registerPosition, onEventClick, onDelete, scrollPos, groupTop, setHoveredEvent }) {\n  const sortedEvents = [...events].sort((a, b) => new Date(a.date) - new Date(b.date));\n  const cardRefs = useRef([]);\n  \n  // 这里可调 gap 来增加/减少组内事件间的垂直距离\n  const offsets = getOffsets(sortedEvents.length, 80);\n\n  // 将卡片 DOM 中心点注册给全局，用于画连接线\n  useEffect(() => {\n    sortedEvents.forEach((ev, i) => {\n      if (cardRefs.current[i]) {\n        const rect = cardRefs.current[i].getBoundingClientRect();\n        const centerPos = {\n          x: rect.left + rect.width / 2,\n          y: rect.top + rect.height / 2,\n        };\n        registerPosition(ev.id, centerPos);\n      }\n    });\n  }, [sortedEvents, registerPosition, scrollPos]);\n\n  // Hover 时调用 setHoveredEvent\n  const handleMouseEnter = (ev, i) => {\n    if (!ev.detail) return; // 如果没有详情，不弹框\n    const rect = cardRefs.current[i].getBoundingClientRect();\n    setHoveredEvent({\n      rect,\n      title: ev.title,\n      detail: ev.detail\n    });\n  };\n  const handleMouseLeave = () => {\n    setHoveredEvent(null);\n  };\n\n  return (\n    <div\n      style={{\n        position: 'absolute',\n        top: groupTop,\n        left: 0,\n        width: '280px',\n        zIndex: 500,\n      }}\n    >\n      {sortedEvents.map((ev, i) => {\n        const offsetTop = offsets[i];\n        return (\n          <div\n            key={ev.id}\n            ref={(el) => (cardRefs.current[i] = el)}\n            style={{\n              position: 'absolute',\n              left: '10px', // 调整卡片与时间线的横向距离\n              top: offsetTop + 'px',\n              width: '180px',\n              height: '60px',\n              padding: '10px',\n              border: '2px solid #ddd',\n              borderRadius: '8px',\n              backgroundColor: '#fff',\n              boxShadow: '0 2px 4px rgba(0,0,0,0.08)',\n              cursor: 'pointer',\n              transition: 'all 0.2s ease',\n            }}\n            onClick={() => onEventClick(ev.id)}\n            onMouseEnter={() => handleMouseEnter(ev, i)}\n            onMouseLeave={handleMouseLeave}\n          >\n            {/* 标题 */}\n            <div style={{ \n              fontWeight: 'bold', \n              marginBottom: '4px',\n              fontSize: '14px',\n              color: '#007BFF',\n            }}>\n              {ev.title}\n            </div>\n            {/* 日期 */}\n            <div style={{ \n              fontSize: '13px', \n              marginBottom: '6px', \n              color: '#555' \n            }}>\n              {ev.date}\n            </div>\n\n            {/* 删除按钮 */}\n            <button\n              onClick={(e) => {\n                e.stopPropagation();\n                onDelete(ev.id);\n              }}\n              style={{\n                position: 'absolute',\n                top: '6px',\n                right: '6px',\n                background: 'transparent',\n                border: 'none',\n                color: 'rgba(255,0,0,0.6)',\n                fontSize: '14px',\n                cursor: 'pointer',\n                transition: 'color 0.2s ease',\n              }}\n            >\n              ×\n            </button>\n          </div>\n        );\n      })}\n    </div>\n  );\n}\n\n/**\n * Timeline 组件：一条时间轴 + 波次标题 + 事件分组\n * 在这里我们对每个分组做「防重叠处理」：若相邻分组位置过近，就往下推。\n */\nfunction Timeline({\n  wave,\n  registerPosition,\n  onEventClick,\n  onAddEvent,\n  onDeleteEvent,\n  scrollPos,\n  setHoveredEvent,\n}) {\n  const timelineHeight = 1600;\n\n  // 根据 wave.events 里最早的日期，确定本时间轴的起点\n  const timestamps = wave.events.map((e) => new Date(e.date).getTime());\n  const firstEventTime = timestamps.length > 0 ? Math.min(...timestamps) : Date.now();\n  const firstEventDate = new Date(firstEventTime);\n  const timelineStart = new Date(firstEventDate.getFullYear(), 0, 1).getTime();\n\n  // 这里可自定义时间跨度，比如 8 年\n  const eightYearsInMs = 8 * 365.25 * 24 * 60 * 60 * 1000;\n  const timelineEndTime = timelineStart + eightYearsInMs;\n  const safeTimeSpan = timelineEndTime - timelineStart;\n\n  // 按日期排序\n  const sortedEvents = [...wave.events].sort((a, b) => new Date(a.date) - new Date(b.date));\n\n  // 将事件按照“相距 <= 3 个月”分组\n  const THREE_MONTHS_MS = 3 * 30 * 24 * 60 * 60 * 1000;\n  const eventGroups = [];\n  let currentGroup = [];\n\n  sortedEvents.forEach((ev, index) => {\n    if (index === 0) {\n      currentGroup.push(ev);\n    } else {\n      const prevTime = new Date(sortedEvents[index - 1].date).getTime();\n      const currTime = new Date(ev.date).getTime();\n      if (currTime - prevTime <= THREE_MONTHS_MS) {\n        currentGroup.push(ev);\n      } else {\n        eventGroups.push([...currentGroup]);\n        currentGroup = [ev];\n      }\n    }\n  });\n  if (currentGroup.length > 0) {\n    eventGroups.push(currentGroup);\n  }\n\n  // 防止分组之间互相重叠\n  // 每个分组的\"理论位置\" = ratio * timelineHeight\n  // 再根据前一个分组的底部位置，做一次向下推，避免重叠\n  let lastUsedPos = 0;\n  const groupPositions = []; // 存放每个分组最终的 top 值\n  const groupSpacing = 20;  // 分组之间最少留出的间距\n\n  // 粗略估算一个组的高度：\n  //   - 组内事件数 = n\n  //   - offsets 范围 roughly [-gap*(n-1)/2, +gap*(n-1)/2]\n  //   - 另外卡片本身有 60px 高度\n  // => total height = (gap*(n-1)) + 60\n  //  这里 gap=80 => groupHeight ~ 80*(n-1)+60\n  function estimateGroupHeight(group) {\n    const n = group.length;\n    return 80 * (n - 1) + 60;\n  }\n\n  eventGroups.forEach((group) => {\n    const firstEv = group[0];\n    const currentTime = new Date(firstEv.date).getTime();\n    const ratio = (currentTime - timelineStart) / safeTimeSpan;\n    const naivePos = ratio * timelineHeight;\n\n    // 估算本组高度\n    const groupHeight = estimateGroupHeight(group);\n\n    // 若 naivePos < lastUsedPos + groupSpacing, 则往下推\n    const finalPos = Math.max(naivePos, lastUsedPos + groupSpacing);\n    groupPositions.push(finalPos);\n\n    // 更新 lastUsedPos\n    lastUsedPos = finalPos + groupHeight;\n  });\n\n  return (\n    <div style={{ \n      flex: '1', \n      margin: '0 20px', \n      position: 'relative',\n      padding: '15px',\n      backgroundColor: 'rgba(255,255,255,0.7)',\n      borderRadius: '8px',\n      boxShadow: '0 2px 10px rgba(0,0,0,0.05)',\n    }}>\n      {/* 时间线顶部标题、加号按钮等 */}\n      <div style={{ \n        display: 'flex', \n        justifyContent: 'space-between', \n        alignItems: 'center', \n        marginBottom: '2px',\n        borderBottom: '1px solid #eee',\n        paddingBottom: '2px',\n      }}>\n        <h2 style={{ \n          fontSize: '18px', \n          margin: 0,\n          color: '#2c3e50',\n          fontWeight: '600',\n        }}>\n          {wave.title}\n        </h2>\n        <button\n          onClick={onAddEvent}\n          style={{\n            width: '30px',\n            height: '30px',\n            borderRadius: '50%',\n            backgroundColor: '#007BFF',\n            border: 'none',\n            color: '#fff',\n            fontWeight: 'bold',\n            cursor: 'pointer',\n            zIndex: 10,\n            boxShadow: '0 2px 5px rgba(0,123,255,0.4)',\n            transition: 'all 0.2s ease',\n          }}\n          title=\"Add Event\"\n        >\n          +\n        </button>\n      </div>\n      <div style={{ \n        fontSize: '14px', \n        color: '#666', \n        marginBottom: '70px', \n        textAlign: 'center',\n        fontStyle: 'italic',\n      }}>\n        {wave.period}\n      </div>\n\n      {/* 纵向的主轴 */}\n      <div style={{ \n        position: 'relative', \n        width: '2px', \n        backgroundColor: '#bbb', \n        height: timelineHeight + 'px', \n        marginLeft: '0', \n        marginTop: '-70px',\n        borderRadius: '1px' \n      }}>\n        <div style={{ position: 'absolute', top: '0', left: '-10px', right: '-10px' }}>\n          {eventGroups.map((group, idx) => {\n            const finalPos = groupPositions[idx];\n            return (\n              <EventGroup\n                key={idx}\n                events={group}\n                registerPosition={registerPosition}\n                onEventClick={onEventClick}\n                onDelete={(id) => onDeleteEvent(id)}\n                scrollPos={scrollPos}\n                groupTop={finalPos}\n                setHoveredEvent={setHoveredEvent}\n              />\n            );\n          })}\n        </div>\n      </div>\n    </div>\n  );\n}\n\n/**\n * ConnectionsLayer 组件：渲染所有正式连接（红色曲线）以及正在建立的 pending connection（红色箭头跟随鼠标）。\n */\nfunction ConnectionsLayer({\n  connections,\n  eventPositions,\n  containerRef,\n  pendingConnection,\n  pendingConnectionEnd,\n  onDeleteConnection,\n}) {\n  const containerRect = containerRef.current\n    ? containerRef.current.getBoundingClientRect()\n    : { left: 0, top: 0 };\n\n  return (\n    <svg\n      style={{\n        position: 'absolute',\n        top: 0,\n        left: 0,\n        width: '100%',\n        height: '100%',\n        zIndex: 1,\n        pointerEvents: 'none',\n      }}\n    >\n      <defs>\n        <marker id=\"arrowhead\" markerWidth=\"10\" markerHeight=\"7\" refX=\"10\" refY=\"3.5\" orient=\"auto\">\n          <polygon points=\"0 0, 10 3.5, 0 7\" fill=\"red\" />\n        </marker>\n      </defs>\n      {connections.map((conn, index) => {\n        const fromPos = eventPositions[conn.from];\n        const toPos = eventPositions[conn.to];\n        if (!fromPos || !toPos) return null;\n\n        const adjustedFrom = { x: fromPos.x - containerRect.left, y: fromPos.y - containerRect.top };\n        const adjustedTo = { x: toPos.x - containerRect.left, y: toPos.y - containerRect.top };\n\n        return (\n          <ConnectionLine\n            key={index}\n            fromPos={adjustedFrom}\n            toPos={adjustedTo}\n            reason={conn.reason}\n            onDelete={() => onDeleteConnection(index)}\n          />\n        );\n      })}\n\n      {/* 如果正在建立连接，则画一条“临时线”跟随鼠标 */}\n      {pendingConnection &&\n        pendingConnectionEnd &&\n        eventPositions[pendingConnection.startEventId] &&\n        (() => {\n          const startPosGlobal = eventPositions[pendingConnection.startEventId];\n          const startPos = {\n            x: startPosGlobal.x - containerRect.left,\n            y: startPosGlobal.y - containerRect.top,\n          };\n          return (\n            <line\n              x1={startPos.x}\n              y1={startPos.y}\n              x2={pendingConnectionEnd.x}\n              y2={pendingConnectionEnd.y}\n              stroke=\"red\"\n              strokeWidth=\"3\"\n              markerEnd=\"url(#arrowhead)\"\n              style={{ pointerEvents: 'none' }}\n            />\n          );\n        })()}\n    </svg>\n  );\n}\n\n/**\n * ConnectionReasonModal - Modal component for entering connection reason\n */\nfunction ConnectionReasonModal({ isOpen, onClose, onSubmit }) {\n  const [reason, setReason] = useState('Manual connection');\n  \n  if (!isOpen) return null;\n  \n  const handleSubmit = (e) => {\n    e.preventDefault();\n    onSubmit(reason || 'Manual connection');\n    onClose();\n  };\n  \n  return (\n    <div style={{\n      position: 'fixed',\n      top: 0,\n      left: 0,\n      right: 0,\n      bottom: 0,\n      backgroundColor: 'rgba(0, 0, 0, 0.5)',\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      zIndex: 1000,\n    }}>\n      <div style={{\n        backgroundColor: 'white',\n        padding: '20px',\n        borderRadius: '8px',\n        width: '400px',\n        boxShadow: '0 4px 8px rgba(0,0,0,0.2)',\n      }}>\n        <h3 style={{ marginTop: 0 }}>Connection Reason</h3>\n        <form onSubmit={handleSubmit}>\n          <div style={{ marginBottom: '15px' }}>\n            <label style={{ display: 'block', marginBottom: '5px' }}>Reason for connection:</label>\n            <input \n              type=\"text\" \n              value={reason} \n              onChange={(e) => setReason(e.target.value)}\n              style={{ \n                width: '100%', \n                padding: '8px', \n                borderRadius: '4px',\n                border: '1px solid #ddd'\n              }}\n              autoFocus\n            />\n          </div>\n          <div style={{ display: 'flex', justifyContent: 'flex-end', gap: '10px' }}>\n            <button \n              type=\"button\" \n              onClick={onClose}\n              style={{\n                padding: '8px 16px',\n                border: '1px solid #ddd',\n                borderRadius: '4px',\n                backgroundColor: '#f1f1f1',\n                cursor: 'pointer'\n              }}\n            >\n              Cancel\n            </button>\n            <button \n              type=\"submit\"\n              style={{\n                padding: '8px 16px',\n                border: 'none',\n                borderRadius: '4px',\n                backgroundColor: '#007BFF',\n                color: 'white',\n                cursor: 'pointer'\n              }}\n            >\n              Create Connection\n            </button>\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n}\n\n/**\n * Showcase 主容器组件：\n * - 加载 JSON 文件中的 waves 与 connections 数据\n * - 支持添加、删除事件，以及通过点击连接不同事件形成连接线\n * - 引入全局 hoveredEvent 来显示弹出框\n */\nfunction Showcase() {\n  // 波次 (waves) 与连接 (connections)\n  const [waves, setWaves] = useState([]);\n  const [connections, setConnections] = useState([]);\n  \n  // 注册事件节点的位置信息 (eventPositions[eventId] = { x, y })\n  const [eventPositions, setEventPositions] = useState({});\n  const registerPosition = (id, pos) => {\n    setEventPositions((prev) => ({ ...prev, [id]: pos }));\n  };\n\n  // 用于连接事件的临时状态\n  const [pendingConnection, setPendingConnection] = useState(null); // { startEventId }\n  const [pendingConnectionEnd, setPendingConnectionEnd] = useState(null);\n  \n  // 模态框的状态\n  const [showAddModal, setShowAddModal] = useState(false);\n  const [showConnectionModal, setShowConnectionModal] = useState(false);\n\n  // 用于标记「当前在哪个 wave 上添加事件」\n  const [activeWaveIndex, setActiveWaveIndex] = useState(null);\n\n  // 用于标记连接终点\n  const [pendingTo, setPendingTo] = useState(null);\n\n  // 全局 hover 事件：{ rect, title, detail }\n  const [hoveredEvent, setHoveredEvent] = useState(null);\n\n  // 从 /data.json 加载数据\n  useEffect(() => {\n    fetch('/data.json')\n      .then((res) => res.json())\n      .then((data) => {\n        setWaves(data.waves);\n        setConnections(data.connections);\n      })\n      .catch((error) => console.error(\"Error loading data:\", error));\n  }, []);\n\n  // 点击事件时，若无 pendingConnection，则设为起点；若已有，则设为终点\n  const handleEventClick = (eventId) => {\n    if (!pendingConnection) {\n      setPendingConnection({ startEventId: eventId });\n    } else {\n      if (pendingConnection.startEventId === eventId) {\n        // 如果再次点到同一个事件，取消连接\n        setPendingConnection(null);\n        setPendingConnectionEnd(null);\n        return;\n      }\n      // 否则进入「填写连接原因」阶段\n      setPendingTo(eventId);\n      setShowConnectionModal(true);\n    }\n  };\n\n  // 点击「+」按钮添加新事件\n  const handleAddEvent = (waveIndex) => {\n    setActiveWaveIndex(waveIndex);\n    setShowAddModal(true);\n  };\n\n  // 提交新事件\n  const handleSubmitNewEvent = (eventData) => {\n    setWaves((prev) => {\n      const newWaves = [...prev];\n      const newId = generateUniqueId();\n      newWaves[activeWaveIndex].events.push({ \n        id: newId,\n        date: eventData.date,\n        title: eventData.title,\n        detail: eventData.detail \n      });\n      return newWaves;\n    });\n  };\n\n  // 填写连接原因后，添加新连接\n  const handleSubmitConnection = (reason) => {\n    setConnections((prev) => [\n      ...prev,\n      { from: pendingConnection.startEventId, to: pendingTo, reason },\n    ]);\n    setPendingConnection(null);\n    setPendingConnectionEnd(null);\n    setPendingTo(null);\n  };\n\n  // 删除事件\n  const handleDeleteEvent = (eventId) => {\n    // 在所有 wave 中查找并删除\n    setWaves((prev) => {\n      return prev.map(w => ({\n        ...w,\n        events: w.events.filter(e => e.id !== eventId)\n      }));\n    });\n    // 删除与之相关的连接\n    setConnections((prev) =>\n      prev.filter((conn) => conn.from !== eventId && conn.to !== eventId)\n    );\n  };\n\n  // 删除连接\n  const handleDeleteConnection = (connIndex) => {\n    setConnections((prev) => prev.filter((_, index) => index !== connIndex));\n  };\n\n  // 跟踪滚动位置（用于在 window.scrollY 改变时重新计算坐标）\n  const [scrollPos, setScrollPos] = useState(0);\n  useEffect(() => {\n    const handleScroll = () => setScrollPos(window.scrollY);\n    window.addEventListener('scroll', handleScroll);\n    return () => window.removeEventListener('scroll', handleScroll);\n  }, []);\n\n  // 如果正在连线，则鼠标移动时更新临时连线终点\n  const containerRef = useRef(null);\n  const handleMouseMove = (e) => {\n    if (pendingConnection) {\n      const containerRect = containerRef.current.getBoundingClientRect();\n      setPendingConnectionEnd({\n        x: e.clientX - containerRect.left,\n        y: e.clientY - containerRect.top,\n      });\n    }\n  };\n\n  return (\n    <div \n      ref={containerRef} \n      onMouseMove={handleMouseMove} \n      style={{ \n        padding: '20px', \n        position: 'relative'\n      }}\n    >\n      {/* 添加事件 Modal */}\n      <AddEventModal \n        isOpen={showAddModal} \n        onClose={() => setShowAddModal(false)} \n        onSubmit={handleSubmitNewEvent} \n      />\n      \n      {/* 填写连接原因 Modal */}\n      <ConnectionReasonModal \n        isOpen={showConnectionModal}\n        onClose={() => {\n          setShowConnectionModal(false);\n          setPendingConnection(null);\n          setPendingConnectionEnd(null);\n        }}\n        onSubmit={handleSubmitConnection}\n      />\n\n      {/* 全局 Hover 弹框 */}\n      <GlobalTooltip hoveredEvent={hoveredEvent} />\n\n      <h1 style={{ textAlign: 'center', marginBottom: '40px' }}>\n        Analogical Timeline of Tech Wave\n      </h1>\n\n      {/* 多个 wave 并排显示 */}\n      <div \n        style={{ \n          display: 'flex', \n          justifyContent: 'space-around', \n          flexWrap: 'wrap', \n          marginTop: '40px', \n          position: 'relative',\n          zIndex: 0,\n        }}\n      >\n        {waves.map((wave, index) => (\n          <Timeline\n            key={index}\n            wave={wave}\n            registerPosition={registerPosition}\n            onEventClick={handleEventClick}\n            onAddEvent={() => handleAddEvent(index)}\n            onDeleteEvent={handleDeleteEvent}\n            scrollPos={scrollPos}\n            // 把 setHoveredEvent 传下去，让 EventGroup 可以控制全局弹框\n            setHoveredEvent={setHoveredEvent}\n          />\n        ))}\n      </div>\n\n      {/* 画所有连接的 SVG 层 */}\n      <ConnectionsLayer\n        connections={connections}\n        eventPositions={eventPositions}\n        containerRef={containerRef}\n        pendingConnection={pendingConnection}\n        pendingConnectionEnd={pendingConnectionEnd}\n        onDeleteConnection={handleDeleteConnection}\n      />\n    </div>\n  );\n}\n\nexport default Showcase;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}