{"ast":null,"code":"var _jsxFileName = \"/Users/jasonding/Desktop/AnaTime/src/components/Showcase.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef, useCallback, useMemo, useLayoutEffect } from 'react';\nimport { AddEventModal, ConnectionReasonModal, GlobalTooltip, Timeline, ConnectionsLayer, getWaveIcon, ToggleSwitch } from './ShowcaseComponents';\nimport './styles.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Showcase() {\n  _s();\n  const [waves, setWaves] = useState([]);\n  const [connections, setConnections] = useState([]);\n  const [eventPositions, setEventPositions] = useState({});\n  const [selectedWaveIndices, setSelectedWaveIndices] = useState([]);\n  const [showPredicted, setShowPredicted] = useState(true); // Controls whether to show predicted events\n\n  const eventRefs = useRef({});\n  const getEventRef = useCallback(eventId => {\n    if (!eventRefs.current[eventId]) {\n      eventRefs.current[eventId] = /*#__PURE__*/React.createRef();\n    }\n    return eventRefs.current[eventId];\n  }, []);\n\n  // Measure positions of all event cards after layout changes\n  useLayoutEffect(() => {\n    let changed = false;\n    const newPositions = {\n      ...eventPositions\n    };\n    Object.entries(eventRefs.current).forEach(([eventId, refObj]) => {\n      if (refObj.current) {\n        const rect = refObj.current.getBoundingClientRect();\n        const centerPos = {\n          x: Math.round(rect.left + rect.width / 2),\n          y: Math.round(rect.top + rect.height / 2)\n        };\n        const oldPos = newPositions[eventId];\n        if (!oldPos || oldPos.x !== centerPos.x || oldPos.y !== centerPos.y) {\n          changed = true;\n          newPositions[eventId] = centerPos;\n        }\n      }\n    });\n    if (changed) {\n      setEventPositions(newPositions);\n    }\n  });\n\n  // Connection states\n  const [pendingConnection, setPendingConnection] = useState(null);\n  const [pendingConnectionEnd, setPendingConnectionEnd] = useState(null);\n  const [showGlobalAddModal, setShowGlobalAddModal] = useState(false);\n  const [showConnectionModal, setShowConnectionModal] = useState(false);\n  const [pendingTo, setPendingTo] = useState(null);\n  const [hoveredEvent, setHoveredEvent] = useState(null);\n  const containerRef = useRef(null);\n\n  // Load data.json\n  useEffect(() => {\n    fetch('/data.json').then(r => r.json()).then(data => {\n      setWaves(data.waves || []);\n      setConnections(data.connections || []);\n    }).catch(err => console.error('Error loading data:', err));\n  }, []);\n\n  // By default, select all timelines\n  useEffect(() => {\n    if (waves.length > 0) {\n      setSelectedWaveIndices(waves.map((_, idx) => idx));\n    }\n  }, [waves]);\n  const handleEventDoubleClick = (eventId, e) => {\n    if (!pendingConnection) {\n      setPendingConnection({\n        startEventId: eventId\n      });\n      if (containerRef.current) {\n        const containerRect = containerRef.current.getBoundingClientRect();\n        const x = e.clientX - containerRect.left;\n        const y = e.clientY - containerRect.top;\n        setPendingConnectionEnd({\n          x,\n          y\n        });\n      }\n    } else {\n      if (pendingConnection.startEventId === eventId) {\n        // Same event => cancel\n        setPendingConnection(null);\n        setPendingConnectionEnd(null);\n      } else {\n        // Different event => prompt reason\n        setPendingTo(eventId);\n        setShowConnectionModal(true);\n        setPendingConnectionEnd(null);\n      }\n    }\n  };\n  const handleSubmitNewEvent = data => {\n    const newId = Math.random().toString(36).substr(2, 9);\n    setWaves(prev => {\n      const newWaves = [...prev];\n      const idx = data.timelineIndex;\n      if (newWaves[idx]) {\n        const waveCopy = {\n          ...newWaves[idx],\n          events: [...newWaves[idx].events]\n        };\n        waveCopy.events.push({\n          id: newId,\n          date: data.date,\n          title: data.title,\n          detail: data.detail\n        });\n        newWaves[idx] = waveCopy;\n      }\n      return newWaves;\n    });\n  };\n  const handleSubmitConnection = reason => {\n    setConnections(prev => [...prev, {\n      from: pendingConnection.startEventId,\n      to: pendingTo,\n      reason\n    }]);\n    setPendingConnection(null);\n    setPendingConnectionEnd(null);\n    setPendingTo(null);\n  };\n  const handleDeleteEvent = eventId => {\n    setWaves(prev => prev.map(w => ({\n      ...w,\n      events: w.events.filter(e => e.id !== eventId)\n    })));\n    setConnections(prev => prev.filter(c => c.from !== eventId && c.to !== eventId));\n  };\n  const handleDeleteConnection = connIndex => {\n    setConnections(prev => prev.filter((_, i) => i !== connIndex));\n  };\n\n  // Track mouse position for connection line\n  const handleMouseMove = e => {\n    if (pendingConnection && pendingConnectionEnd !== null) {\n      const containerRect = containerRef.current.getBoundingClientRect();\n      setPendingConnectionEnd({\n        x: e.clientX - containerRect.left,\n        y: e.clientY - containerRect.top\n      });\n    }\n  };\n  const timelineOptions = useMemo(() => {\n    return waves.map((wave, i) => ({\n      index: i,\n      title: wave.title\n    }));\n  }, [waves]);\n\n  // Only display selected waves\n  const displayedWaves = useMemo(() => {\n    return waves.filter((_, idx) => selectedWaveIndices.includes(idx));\n  }, [waves, selectedWaveIndices]);\n\n  // Filter out predicted events if showPredicted = false\n  const now = new Date().getTime();\n  const filteredWaves = useMemo(() => {\n    return displayedWaves.map(wave => ({\n      ...wave,\n      events: wave.events.filter(ev => showPredicted ? true : new Date(ev.date).getTime() <= now)\n    }));\n  }, [displayedWaves, showPredicted, now]);\n\n  // Build set of displayed event IDs\n  const displayedEventIds = useMemo(() => {\n    const ids = new Set();\n    filteredWaves.forEach(w => {\n      w.events.forEach(ev => {\n        ids.add(ev.id);\n      });\n    });\n    return ids;\n  }, [filteredWaves]);\n\n  // Filter connections accordingly\n  const displayedConnections = useMemo(() => {\n    return connections.filter(conn => displayedEventIds.has(conn.from) && displayedEventIds.has(conn.to));\n  }, [connections, displayedEventIds]);\n\n  // Toggle which timeline is selected\n  const toggleWave = idx => {\n    setSelectedWaveIndices(prev => {\n      if (prev.includes(idx)) {\n        return prev.filter(i => i !== idx);\n      } else {\n        return [...prev, idx];\n      }\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: containerRef,\n    onMouseMove: handleMouseMove,\n    style: {\n      paddingBottom: '80px',\n      position: 'relative'\n    },\n    children: [/*#__PURE__*/_jsxDEV(AddEventModal, {\n      isOpen: showGlobalAddModal,\n      onClose: () => setShowGlobalAddModal(false),\n      onSubmit: handleSubmitNewEvent,\n      timelineOptions: timelineOptions\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ConnectionReasonModal, {\n      isOpen: showConnectionModal,\n      onClose: () => {\n        setShowConnectionModal(false);\n        setPendingConnection(null);\n        setPendingConnectionEnd(null);\n      },\n      onSubmit: handleSubmitConnection\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(GlobalTooltip, {\n      hoveredEvent: hoveredEvent\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      style: {\n        textAlign: 'center',\n        marginBottom: '20px',\n        fontSize: '2rem',\n        color: '#333',\n        textShadow: '1px 1px 2px rgba(0,0,0,0.2)'\n      },\n      children: \"Analogical Timeline of Tech Wave\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      style: {\n        textAlign: 'center',\n        fontStyle: 'italic',\n        color: '#555',\n        marginBottom: '15px'\n      },\n      children: \"History doesn't repeat itself, but it often rhymes.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        textAlign: 'center',\n        fontSize: '22px',\n        paddingBottom: '30px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"a\", {\n        className: \"author-link\",\n        href: \"https://jason-ding.com\",\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        style: {\n          fontWeight: \"bold\",\n          fontSize: \"1.5rem\",\n          textDecoration: \"none\",\n          color: \"#000\"\n        },\n        children: \" Zijian \\\"Jason\\\" Ding \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          paddingTop: '0.2em'\n        },\n        children: \"University of Maryland, College Park\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          paddingTop: '0.5em'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          className: \"author-link\",\n          href: \"https://github.com/JsnDg/Analogical-Timeline\",\n          target: \"_blank\",\n          rel: \"noopener noreferrer\",\n          style: {\n            fontWeight: \"bold\",\n            fontSize: \"1.5rem\",\n            textDecoration: \"none\",\n            color: \"#000\"\n          },\n          children: \"Code\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 285,\n          columnNumber: 44\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setShowGlobalAddModal(true),\n      style: {\n        position: 'fixed',\n        top: '20px',\n        right: '20px',\n        width: '40px',\n        height: '40px',\n        borderRadius: '50%',\n        border: 'none',\n        color: '#3498db',\n        fontSize: '24px',\n        fontWeight: 'bold',\n        cursor: 'pointer',\n        zIndex: 10,\n        boxShadow: '0 2px 5px rgba(0,0,0,0.3)'\n      },\n      title: \"Add Event\",\n      children: \"+\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 300,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        textAlign: 'center',\n        marginBottom: '20px'\n      },\n      children: waves.map((wave, idx) => {\n        const waveIcon = getWaveIcon(wave.title);\n        const isSelected = selectedWaveIndices.includes(idx);\n        const predictedTag = wave.predictionTime ? ` (${wave.predictionTime})` : '';\n        return /*#__PURE__*/_jsxDEV(\"label\", {\n          style: {\n            marginRight: '15px',\n            cursor: 'pointer',\n            display: 'inline-flex',\n            alignItems: 'center',\n            padding: '4px',\n            borderRadius: '4px',\n            backgroundColor: isSelected ? '#ebedef' : 'transparent',\n            transition: 'background-color 0.2s ease'\n          },\n          title: wave.predictionTime ? `Predicted timeline at ${wave.predictionTime}` : '',\n          children: [/*#__PURE__*/_jsxDEV(ToggleSwitch, {\n            checked: isSelected,\n            onChange: () => toggleWave(idx)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 349,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              marginLeft: '6px',\n              marginRight: '4px'\n            },\n            children: waveIcon\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 353,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [wave.title, predictedTag]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 356,\n            columnNumber: 15\n          }, this)]\n        }, idx, true, {\n          fileName: _jsxFileName,\n          lineNumber: 331,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 323,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        textAlign: 'center',\n        marginBottom: '20px'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        style: {\n          cursor: 'pointer',\n          fontSize: '16px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(ToggleSwitch, {\n          checked: showPredicted,\n          onChange: () => setShowPredicted(prev => !prev)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 368,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            marginLeft: '8px'\n          },\n          children: \"Show Predicted Events\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 372,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 367,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 366,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        justifyContent: 'space-around',\n        flexWrap: 'wrap',\n        marginTop: '40px',\n        position: 'relative',\n        zIndex: 0\n      },\n      children: filteredWaves.map((wave, idx) => {\n        const originalIndex = waves.indexOf(wave);\n        return /*#__PURE__*/_jsxDEV(Timeline, {\n          timelineIndex: originalIndex,\n          wave: wave,\n          onEventDoubleClick: handleEventDoubleClick,\n          onDeleteEvent: handleDeleteEvent,\n          setHoveredEvent: setHoveredEvent,\n          getEventRef: getEventRef\n        }, originalIndex, false, {\n          fileName: _jsxFileName,\n          lineNumber: 390,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 377,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ConnectionsLayer, {\n      connections: displayedConnections,\n      eventPositions: eventPositions,\n      containerRef: containerRef,\n      pendingConnection: pendingConnection,\n      pendingConnectionEnd: pendingConnectionEnd,\n      onDeleteConnection: handleDeleteConnection\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 404,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 221,\n    columnNumber: 5\n  }, this);\n}\n_s(Showcase, \"YbVTt53kwfXjZIsLZPZ+PP0eulo=\");\n_c = Showcase;\nexport default Showcase;\nvar _c;\n$RefreshReg$(_c, \"Showcase\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useCallback","useMemo","useLayoutEffect","AddEventModal","ConnectionReasonModal","GlobalTooltip","Timeline","ConnectionsLayer","getWaveIcon","ToggleSwitch","jsxDEV","_jsxDEV","Showcase","_s","waves","setWaves","connections","setConnections","eventPositions","setEventPositions","selectedWaveIndices","setSelectedWaveIndices","showPredicted","setShowPredicted","eventRefs","getEventRef","eventId","current","createRef","changed","newPositions","Object","entries","forEach","refObj","rect","getBoundingClientRect","centerPos","x","Math","round","left","width","y","top","height","oldPos","pendingConnection","setPendingConnection","pendingConnectionEnd","setPendingConnectionEnd","showGlobalAddModal","setShowGlobalAddModal","showConnectionModal","setShowConnectionModal","pendingTo","setPendingTo","hoveredEvent","setHoveredEvent","containerRef","fetch","then","r","json","data","catch","err","console","error","length","map","_","idx","handleEventDoubleClick","e","startEventId","containerRect","clientX","clientY","handleSubmitNewEvent","newId","random","toString","substr","prev","newWaves","timelineIndex","waveCopy","events","push","id","date","title","detail","handleSubmitConnection","reason","from","to","handleDeleteEvent","w","filter","c","handleDeleteConnection","connIndex","i","handleMouseMove","timelineOptions","wave","index","displayedWaves","includes","now","Date","getTime","filteredWaves","ev","displayedEventIds","ids","Set","add","displayedConnections","conn","has","toggleWave","ref","onMouseMove","style","paddingBottom","position","children","isOpen","onClose","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","textAlign","marginBottom","fontSize","color","textShadow","fontStyle","className","href","target","rel","fontWeight","textDecoration","paddingTop","onClick","right","borderRadius","border","cursor","zIndex","boxShadow","waveIcon","isSelected","predictedTag","predictionTime","marginRight","display","alignItems","padding","backgroundColor","transition","checked","onChange","marginLeft","justifyContent","flexWrap","marginTop","originalIndex","indexOf","onEventDoubleClick","onDeleteEvent","onDeleteConnection","_c","$RefreshReg$"],"sources":["/Users/jasonding/Desktop/AnaTime/src/components/Showcase.jsx"],"sourcesContent":["import React, {\n  useState,\n  useEffect,\n  useRef,\n  useCallback,\n  useMemo,\n  useLayoutEffect,\n} from 'react';\nimport {\n  AddEventModal,\n  ConnectionReasonModal,\n  GlobalTooltip,\n  Timeline,\n  ConnectionsLayer,\n  getWaveIcon,\n  ToggleSwitch,\n} from './ShowcaseComponents';\nimport './styles.css';\n\nfunction Showcase() {\n  const [waves, setWaves] = useState([]);\n  const [connections, setConnections] = useState([]);\n  const [eventPositions, setEventPositions] = useState({});\n  const [selectedWaveIndices, setSelectedWaveIndices] = useState([]);\n  const [showPredicted, setShowPredicted] = useState(true); // Controls whether to show predicted events\n\n  const eventRefs = useRef({});\n\n  const getEventRef = useCallback((eventId) => {\n    if (!eventRefs.current[eventId]) {\n      eventRefs.current[eventId] = React.createRef();\n    }\n    return eventRefs.current[eventId];\n  }, []);\n\n  // Measure positions of all event cards after layout changes\n  useLayoutEffect(() => {\n    let changed = false;\n    const newPositions = { ...eventPositions };\n\n    Object.entries(eventRefs.current).forEach(([eventId, refObj]) => {\n      if (refObj.current) {\n        const rect = refObj.current.getBoundingClientRect();\n        const centerPos = {\n          x: Math.round(rect.left + rect.width / 2),\n          y: Math.round(rect.top + rect.height / 2),\n        };\n        const oldPos = newPositions[eventId];\n        if (!oldPos || oldPos.x !== centerPos.x || oldPos.y !== centerPos.y) {\n          changed = true;\n          newPositions[eventId] = centerPos;\n        }\n      }\n    });\n\n    if (changed) {\n      setEventPositions(newPositions);\n    }\n  });\n\n  // Connection states\n  const [pendingConnection, setPendingConnection] = useState(null);\n  const [pendingConnectionEnd, setPendingConnectionEnd] = useState(null);\n  const [showGlobalAddModal, setShowGlobalAddModal] = useState(false);\n  const [showConnectionModal, setShowConnectionModal] = useState(false);\n  const [pendingTo, setPendingTo] = useState(null);\n  const [hoveredEvent, setHoveredEvent] = useState(null);\n  const containerRef = useRef(null);\n\n  // Load data.json\n  useEffect(() => {\n    fetch('/data.json')\n      .then((r) => r.json())\n      .then((data) => {\n        setWaves(data.waves || []);\n        setConnections(data.connections || []);\n      })\n      .catch((err) => console.error('Error loading data:', err));\n  }, []);\n\n  // By default, select all timelines\n  useEffect(() => {\n    if (waves.length > 0) {\n      setSelectedWaveIndices(waves.map((_, idx) => idx));\n    }\n  }, [waves]);\n\n  const handleEventDoubleClick = (eventId, e) => {\n    if (!pendingConnection) {\n      setPendingConnection({ startEventId: eventId });\n      if (containerRef.current) {\n        const containerRect = containerRef.current.getBoundingClientRect();\n        const x = e.clientX - containerRect.left;\n        const y = e.clientY - containerRect.top;\n        setPendingConnectionEnd({ x, y });\n      }\n    } else {\n      if (pendingConnection.startEventId === eventId) {\n        // Same event => cancel\n        setPendingConnection(null);\n        setPendingConnectionEnd(null);\n      } else {\n        // Different event => prompt reason\n        setPendingTo(eventId);\n        setShowConnectionModal(true);\n        setPendingConnectionEnd(null);\n      }\n    }\n  };\n\n  const handleSubmitNewEvent = (data) => {\n    const newId = Math.random().toString(36).substr(2, 9);\n    setWaves((prev) => {\n      const newWaves = [...prev];\n      const idx = data.timelineIndex;\n      if (newWaves[idx]) {\n        const waveCopy = {\n          ...newWaves[idx],\n          events: [...newWaves[idx].events],\n        };\n        waveCopy.events.push({\n          id: newId,\n          date: data.date,\n          title: data.title,\n          detail: data.detail,\n        });\n        newWaves[idx] = waveCopy;\n      }\n      return newWaves;\n    });\n  };\n\n  const handleSubmitConnection = (reason) => {\n    setConnections((prev) => [\n      ...prev,\n      { from: pendingConnection.startEventId, to: pendingTo, reason },\n    ]);\n    setPendingConnection(null);\n    setPendingConnectionEnd(null);\n    setPendingTo(null);\n  };\n\n  const handleDeleteEvent = (eventId) => {\n    setWaves((prev) =>\n      prev.map((w) => ({\n        ...w,\n        events: w.events.filter((e) => e.id !== eventId),\n      }))\n    );\n    setConnections((prev) =>\n      prev.filter((c) => c.from !== eventId && c.to !== eventId)\n    );\n  };\n\n  const handleDeleteConnection = (connIndex) => {\n    setConnections((prev) => prev.filter((_, i) => i !== connIndex));\n  };\n\n  // Track mouse position for connection line\n  const handleMouseMove = (e) => {\n    if (pendingConnection && pendingConnectionEnd !== null) {\n      const containerRect = containerRef.current.getBoundingClientRect();\n      setPendingConnectionEnd({\n        x: e.clientX - containerRect.left,\n        y: e.clientY - containerRect.top,\n      });\n    }\n  };\n\n  const timelineOptions = useMemo(() => {\n    return waves.map((wave, i) => ({ index: i, title: wave.title }));\n  }, [waves]);\n\n  // Only display selected waves\n  const displayedWaves = useMemo(() => {\n    return waves.filter((_, idx) => selectedWaveIndices.includes(idx));\n  }, [waves, selectedWaveIndices]);\n\n  // Filter out predicted events if showPredicted = false\n  const now = new Date().getTime();\n  const filteredWaves = useMemo(() => {\n    return displayedWaves.map((wave) => ({\n      ...wave,\n      events: wave.events.filter((ev) =>\n        showPredicted ? true : new Date(ev.date).getTime() <= now\n      ),\n    }));\n  }, [displayedWaves, showPredicted, now]);\n\n  // Build set of displayed event IDs\n  const displayedEventIds = useMemo(() => {\n    const ids = new Set();\n    filteredWaves.forEach((w) => {\n      w.events.forEach((ev) => {\n        ids.add(ev.id);\n      });\n    });\n    return ids;\n  }, [filteredWaves]);\n\n  // Filter connections accordingly\n  const displayedConnections = useMemo(() => {\n    return connections.filter(\n      (conn) =>\n        displayedEventIds.has(conn.from) && displayedEventIds.has(conn.to)\n    );\n  }, [connections, displayedEventIds]);\n\n  // Toggle which timeline is selected\n  const toggleWave = (idx) => {\n    setSelectedWaveIndices((prev) => {\n      if (prev.includes(idx)) {\n        return prev.filter((i) => i !== idx);\n      } else {\n        return [...prev, idx];\n      }\n    });\n  };\n\n  return (\n    <div\n      ref={containerRef}\n      onMouseMove={handleMouseMove}\n      style={{ paddingBottom: '80px', position: 'relative' }}\n    >\n      {/* Add Event Modal */}\n      <AddEventModal\n        isOpen={showGlobalAddModal}\n        onClose={() => setShowGlobalAddModal(false)}\n        onSubmit={handleSubmitNewEvent}\n        timelineOptions={timelineOptions}\n      />\n\n      {/* Connection Reason Modal */}\n      <ConnectionReasonModal\n        isOpen={showConnectionModal}\n        onClose={() => {\n          setShowConnectionModal(false);\n          setPendingConnection(null);\n          setPendingConnectionEnd(null);\n        }}\n        onSubmit={handleSubmitConnection}\n      />\n\n      {/* Global Hover Tooltip */}\n      <GlobalTooltip hoveredEvent={hoveredEvent} />\n\n      {/* Page title */}\n      <h1\n        style={{\n          textAlign: 'center',\n          marginBottom: '20px',\n          fontSize: '2rem',\n          color: '#333',\n          textShadow: '1px 1px 2px rgba(0,0,0,0.2)',\n        }}\n      >\n        Analogical Timeline of Tech Wave\n      </h1>\n      <h2\n        style={{\n          textAlign: 'center',\n          fontStyle: 'italic',\n          color: '#555',\n          marginBottom: '15px',\n        }}\n      >\n        History doesn't repeat itself, but it often rhymes.\n      </h2>\n\n      <div style={{ textAlign: 'center', fontSize: '22px', paddingBottom: '30px' }}>\n      <a\n      className=\"author-link\"\n      href=\"https://jason-ding.com\"\n      target=\"_blank\"\n      rel=\"noopener noreferrer\"\n      style={{\n        fontWeight: \"bold\",\n        fontSize: \"1.5rem\",\n        textDecoration: \"none\",\n        color: \"#000\"\n      }}\n    > Zijian \"Jason\" Ding </a>\n        <div style={{ paddingTop: '0.2em' }}>University of Maryland, College Park</div>\n        <div style={{paddingTop: '0.5em'}}><a\n      className=\"author-link\"\n      href=\"https://github.com/JsnDg/Analogical-Timeline\"\n      target=\"_blank\"\n      rel=\"noopener noreferrer\"\n      style={{\n        fontWeight: \"bold\",\n        fontSize: \"1.5rem\",\n        textDecoration: \"none\",\n        color: \"#000\"\n      }}\n    >Code</a></div>\n      </div>\n\n      {/* Add Event Button (top-right corner) */}\n      <button\n        onClick={() => setShowGlobalAddModal(true)}\n        style={{\n          position: 'fixed',\n          top: '20px',\n          right: '20px',\n          width: '40px',\n          height: '40px',\n          borderRadius: '50%',\n          border: 'none',\n          color: '#3498db',\n          fontSize: '24px',\n          fontWeight: 'bold',\n          cursor: 'pointer',\n          zIndex: 10,\n          boxShadow: '0 2px 5px rgba(0,0,0,0.3)',\n        }}\n        title=\"Add Event\"\n      >\n        +\n      </button>\n\n      {/* Timeline Selection (using ToggleSwitch) */}\n      <div style={{ textAlign: 'center', marginBottom: '20px' }}>\n        {waves.map((wave, idx) => {\n          const waveIcon = getWaveIcon(wave.title);\n          const isSelected = selectedWaveIndices.includes(idx);\n          const predictedTag = wave.predictionTime\n            ? ` (${wave.predictionTime})`\n            : '';\n          return (\n            <label\n              key={idx}\n              style={{\n                marginRight: '15px',\n                cursor: 'pointer',\n                display: 'inline-flex',\n                alignItems: 'center',\n                padding: '4px',\n                borderRadius: '4px',\n                backgroundColor: isSelected ? '#ebedef' : 'transparent',\n                transition: 'background-color 0.2s ease',\n              }}\n              title={\n                wave.predictionTime\n                  ? `Predicted timeline at ${wave.predictionTime}`\n                  : ''\n              }\n            >\n              <ToggleSwitch\n                checked={isSelected}\n                onChange={() => toggleWave(idx)}\n              />\n              <span style={{ marginLeft: '6px', marginRight: '4px' }}>\n                {waveIcon}\n              </span>\n              <span>\n                {wave.title}\n                {predictedTag}\n              </span>\n            </label>\n          );\n        })}\n      </div>\n\n      {/* Toggle button to control whether to show predicted events */}\n      <div style={{ textAlign: 'center', marginBottom: '20px' }}>\n        <label style={{ cursor: 'pointer', fontSize: '16px' }}>\n          <ToggleSwitch\n            checked={showPredicted}\n            onChange={() => setShowPredicted((prev) => !prev)}\n          />\n          <span style={{ marginLeft: '8px' }}>Show Predicted Events</span>\n        </label>\n      </div>\n\n      {/* Display multiple timelines (filtered) */}\n      <div\n        style={{\n          display: 'flex',\n          justifyContent: 'space-around',\n          flexWrap: 'wrap',\n          marginTop: '40px',\n          position: 'relative',\n          zIndex: 0,\n        }}\n      >\n        {filteredWaves.map((wave, idx) => {\n          const originalIndex = waves.indexOf(wave);\n          return (\n            <Timeline\n              key={originalIndex}\n              timelineIndex={originalIndex}\n              wave={wave}\n              onEventDoubleClick={handleEventDoubleClick}\n              onDeleteEvent={handleDeleteEvent}\n              setHoveredEvent={setHoveredEvent}\n              getEventRef={getEventRef}\n            />\n          );\n        })}\n      </div>\n\n      {/* Connections Layer */}\n      <ConnectionsLayer\n        connections={displayedConnections}\n        eventPositions={eventPositions}\n        containerRef={containerRef}\n        pendingConnection={pendingConnection}\n        pendingConnectionEnd={pendingConnectionEnd}\n        onDeleteConnection={handleDeleteConnection}\n      />\n    </div>\n  );\n}\n\nexport default Showcase;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}