{"ast":null,"code":"var _jsxFileName = \"/Users/jasonding/Desktop/AnaTime/src/components/Showcase.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef, useCallback, useMemo, useLayoutEffect } from 'react';\nimport { AddEventModal, ConnectionReasonModal, GlobalTooltip, Timeline, ConnectionsLayer, getWaveIcon } from './ShowcaseComponents';\nimport './styles.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Showcase() {\n  _s();\n  const [waves, setWaves] = useState([]);\n  const [connections, setConnections] = useState([]);\n  const [eventPositions, setEventPositions] = useState({});\n  const [selectedWaveIndices, setSelectedWaveIndices] = useState([]);\n  const eventRefs = useRef({});\n  const getEventRef = useCallback(eventId => {\n    if (!eventRefs.current[eventId]) {\n      eventRefs.current[eventId] = /*#__PURE__*/React.createRef();\n    }\n    return eventRefs.current[eventId];\n  }, []);\n  useLayoutEffect(() => {\n    let changed = false;\n    const newPositions = {\n      ...eventPositions\n    };\n    Object.entries(eventRefs.current).forEach(([eventId, refObj]) => {\n      if (refObj.current) {\n        const rect = refObj.current.getBoundingClientRect();\n        const centerPos = {\n          x: Math.round(rect.left + rect.width / 2),\n          y: Math.round(rect.top + rect.height / 2)\n        };\n        const oldPos = newPositions[eventId];\n        if (!oldPos || oldPos.x !== centerPos.x || oldPos.y !== centerPos.y) {\n          changed = true;\n          newPositions[eventId] = centerPos;\n        }\n      }\n    });\n    if (changed) {\n      setEventPositions(newPositions);\n    }\n  });\n  const [pendingConnection, setPendingConnection] = useState(null);\n  const [pendingConnectionEnd, setPendingConnectionEnd] = useState(null);\n  const [showGlobalAddModal, setShowGlobalAddModal] = useState(false);\n  const [showConnectionModal, setShowConnectionModal] = useState(false);\n  const [pendingTo, setPendingTo] = useState(null);\n  const [hoveredEvent, setHoveredEvent] = useState(null);\n  const containerRef = useRef(null);\n  useEffect(() => {\n    fetch('/data.json').then(r => r.json()).then(data => {\n      setWaves(data.waves || []);\n      setConnections(data.connections || []);\n    }).catch(err => console.error('Error loading data:', err));\n  }, []);\n  useEffect(() => {\n    if (waves.length > 0) {\n      setSelectedWaveIndices(waves.map((_, idx) => idx));\n    }\n  }, [waves]);\n  const handleEventDoubleClick = (eventId, e) => {\n    if (!pendingConnection) {\n      setPendingConnection({\n        startEventId: eventId\n      });\n      if (containerRef.current) {\n        const containerRect = containerRef.current.getBoundingClientRect();\n        const x = e.clientX - containerRect.left;\n        const y = e.clientY - containerRect.top;\n        setPendingConnectionEnd({\n          x,\n          y\n        });\n      }\n    } else {\n      if (pendingConnection.startEventId === eventId) {\n        setPendingConnection(null);\n        setPendingConnectionEnd(null);\n      } else {\n        setPendingTo(eventId);\n        setShowConnectionModal(true);\n        setPendingConnectionEnd(null);\n      }\n    }\n  };\n  const handleSubmitNewEvent = data => {\n    // 使用组件文件内定义的 generateUniqueId 函数（在组件内不需要再暴露）\n    const newId = Math.random().toString(36).substr(2, 9);\n    setWaves(prev => {\n      const newWaves = [...prev];\n      const idx = data.timelineIndex;\n      if (newWaves[idx]) {\n        const waveCopy = {\n          ...newWaves[idx],\n          events: [...newWaves[idx].events]\n        };\n        waveCopy.events.push({\n          id: newId,\n          date: data.date,\n          title: data.title,\n          detail: data.detail\n        });\n        newWaves[idx] = waveCopy;\n      }\n      return newWaves;\n    });\n  };\n  const handleSubmitConnection = reason => {\n    setConnections(prev => [...prev, {\n      from: pendingConnection.startEventId,\n      to: pendingTo,\n      reason\n    }]);\n    setPendingConnection(null);\n    setPendingConnectionEnd(null);\n    setPendingTo(null);\n  };\n  const handleDeleteEvent = eventId => {\n    setWaves(prev => prev.map(w => ({\n      ...w,\n      events: w.events.filter(e => e.id !== eventId)\n    })));\n    setConnections(prev => prev.filter(c => c.from !== eventId && c.to !== eventId));\n  };\n  const handleDeleteConnection = connIndex => {\n    setConnections(prev => prev.filter((_, i) => i !== connIndex));\n  };\n  const handleMouseMove = e => {\n    if (pendingConnection && pendingConnectionEnd !== null) {\n      const containerRect = containerRef.current.getBoundingClientRect();\n      setPendingConnectionEnd({\n        x: e.clientX - containerRect.left,\n        y: e.clientY - containerRect.top\n      });\n    }\n  };\n  const timelineOptions = useMemo(() => {\n    return waves.map((wave, i) => ({\n      index: i,\n      title: wave.title\n    }));\n  }, [waves]);\n  const displayedWaves = useMemo(() => {\n    return waves.filter((_, idx) => selectedWaveIndices.includes(idx));\n  }, [waves, selectedWaveIndices]);\n  const displayedEventIds = useMemo(() => {\n    const ids = new Set();\n    displayedWaves.forEach(w => {\n      w.events.forEach(ev => {\n        ids.add(ev.id);\n      });\n    });\n    return ids;\n  }, [displayedWaves]);\n  const displayedConnections = useMemo(() => {\n    return connections.filter(conn => displayedEventIds.has(conn.from) && displayedEventIds.has(conn.to));\n  }, [connections, displayedEventIds]);\n  const toggleWave = idx => {\n    setSelectedWaveIndices(prev => {\n      if (prev.includes(idx)) {\n        return prev.filter(i => i !== idx);\n      } else {\n        return [...prev, idx];\n      }\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: containerRef,\n    onMouseMove: handleMouseMove,\n    style: {\n      paddingBottom: '80px',\n      position: 'relative'\n    },\n    children: [/*#__PURE__*/_jsxDEV(AddEventModal, {\n      isOpen: showGlobalAddModal,\n      onClose: () => setShowGlobalAddModal(false),\n      onSubmit: handleSubmitNewEvent,\n      timelineOptions: timelineOptions\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ConnectionReasonModal, {\n      isOpen: showConnectionModal,\n      onClose: () => {\n        setShowConnectionModal(false);\n        setPendingConnection(null);\n        setPendingConnectionEnd(null);\n      },\n      onSubmit: handleSubmitConnection\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(GlobalTooltip, {\n      hoveredEvent: hoveredEvent\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      style: {\n        textAlign: 'center',\n        marginBottom: '20px',\n        fontSize: '2rem',\n        color: '#333',\n        textShadow: '1px 1px 2px rgba(0,0,0,0.2)'\n      },\n      children: \"Analogical Timeline of Tech Wave\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      style: {\n        textAlign: 'center',\n        fontStyle: 'italic',\n        color: '#555',\n        marginBottom: '30px'\n      },\n      children: \"History doesn't repeat itself, but it often rhymes.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        textAlign: 'center',\n        fontSize: '22px',\n        paddingBottom: '30px'\n      },\n      children: [\"Zijian \\\"Jason\\\" Ding\", /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          paddingTop: \"0.2em\"\n        },\n        children: \"PhD candidate\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          paddingTop: \"0.2em\"\n        },\n        children: \"University of Maryland, College Park\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setShowGlobalAddModal(true),\n      style: {\n        position: 'fixed',\n        top: '20px',\n        right: '20px',\n        width: '40px',\n        height: '40px',\n        borderRadius: '50%',\n        border: 'none',\n        color: '#3498db',\n        fontSize: '24px',\n        fontWeight: 'bold',\n        cursor: 'pointer',\n        zIndex: 10,\n        boxShadow: '0 2px 5px rgba(0,0,0,0.3)'\n      },\n      title: \"Add Event\",\n      children: \"+\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        textAlign: 'center',\n        marginBottom: '20px'\n      },\n      children: waves.map((wave, idx) => {\n        const waveIcon = getWaveIcon(wave.title);\n        const isSelected = selectedWaveIndices.includes(idx);\n        const predictedTag = wave.predictionTime ? ` (${wave.predictionTime})` : '';\n        return /*#__PURE__*/_jsxDEV(\"label\", {\n          style: {\n            marginRight: '15px',\n            cursor: 'pointer',\n            display: 'inline-flex',\n            alignItems: 'center',\n            padding: '4px',\n            borderRadius: '4px',\n            backgroundColor: isSelected ? '#ebedef' : 'transparent',\n            transition: 'background-color 0.2s ease'\n          },\n          title: wave.predictionTime ? `Predicted timeline at ${wave.predictionTime}` : '',\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            checked: isSelected,\n            onChange: () => toggleWave(idx),\n            style: {\n              marginRight: '6px'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 295,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              marginRight: '4px'\n            },\n            children: waveIcon\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 301,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [wave.title, predictedTag]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 302,\n            columnNumber: 15\n          }, this)]\n        }, idx, true, {\n          fileName: _jsxFileName,\n          lineNumber: 281,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        justifyContent: 'space-around',\n        flexWrap: 'wrap',\n        marginTop: '40px',\n        position: 'relative',\n        zIndex: 0\n      },\n      children: displayedWaves.map((wave, idx) => {\n        const originalIndex = waves.indexOf(wave);\n        return /*#__PURE__*/_jsxDEV(Timeline, {\n          timelineIndex: originalIndex,\n          wave: wave,\n          onEventDoubleClick: handleEventDoubleClick,\n          onDeleteEvent: handleDeleteEvent,\n          setHoveredEvent: setHoveredEvent,\n          getEventRef: getEventRef\n        }, originalIndex, false, {\n          fileName: _jsxFileName,\n          lineNumber: 325,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 312,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ConnectionsLayer, {\n      connections: displayedConnections,\n      eventPositions: eventPositions,\n      containerRef: containerRef,\n      pendingConnection: pendingConnection,\n      pendingConnectionEnd: pendingConnectionEnd,\n      onDeleteConnection: handleDeleteConnection\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 339,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 192,\n    columnNumber: 5\n  }, this);\n}\n_s(Showcase, \"pb2me7VmKo9m6lZq+f9gi7KGr0E=\");\n_c = Showcase;\nexport default Showcase;\nvar _c;\n$RefreshReg$(_c, \"Showcase\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useCallback","useMemo","useLayoutEffect","AddEventModal","ConnectionReasonModal","GlobalTooltip","Timeline","ConnectionsLayer","getWaveIcon","jsxDEV","_jsxDEV","Showcase","_s","waves","setWaves","connections","setConnections","eventPositions","setEventPositions","selectedWaveIndices","setSelectedWaveIndices","eventRefs","getEventRef","eventId","current","createRef","changed","newPositions","Object","entries","forEach","refObj","rect","getBoundingClientRect","centerPos","x","Math","round","left","width","y","top","height","oldPos","pendingConnection","setPendingConnection","pendingConnectionEnd","setPendingConnectionEnd","showGlobalAddModal","setShowGlobalAddModal","showConnectionModal","setShowConnectionModal","pendingTo","setPendingTo","hoveredEvent","setHoveredEvent","containerRef","fetch","then","r","json","data","catch","err","console","error","length","map","_","idx","handleEventDoubleClick","e","startEventId","containerRect","clientX","clientY","handleSubmitNewEvent","newId","random","toString","substr","prev","newWaves","timelineIndex","waveCopy","events","push","id","date","title","detail","handleSubmitConnection","reason","from","to","handleDeleteEvent","w","filter","c","handleDeleteConnection","connIndex","i","handleMouseMove","timelineOptions","wave","index","displayedWaves","includes","displayedEventIds","ids","Set","ev","add","displayedConnections","conn","has","toggleWave","ref","onMouseMove","style","paddingBottom","position","children","isOpen","onClose","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","textAlign","marginBottom","fontSize","color","textShadow","fontStyle","paddingTop","onClick","right","borderRadius","border","fontWeight","cursor","zIndex","boxShadow","waveIcon","isSelected","predictedTag","predictionTime","marginRight","display","alignItems","padding","backgroundColor","transition","type","checked","onChange","justifyContent","flexWrap","marginTop","originalIndex","indexOf","onEventDoubleClick","onDeleteEvent","onDeleteConnection","_c","$RefreshReg$"],"sources":["/Users/jasonding/Desktop/AnaTime/src/components/Showcase.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef, useCallback, useMemo, useLayoutEffect } from 'react';\nimport { \n  AddEventModal, \n  ConnectionReasonModal, \n  GlobalTooltip, \n  Timeline, \n  ConnectionsLayer,\n  getWaveIcon \n} from './ShowcaseComponents';\nimport './styles.css';\n\nfunction Showcase() {\n  const [waves, setWaves] = useState([]);\n  const [connections, setConnections] = useState([]);\n  const [eventPositions, setEventPositions] = useState({});\n\n  const [selectedWaveIndices, setSelectedWaveIndices] = useState([]);\n  const eventRefs = useRef({});\n\n  const getEventRef = useCallback((eventId) => {\n    if (!eventRefs.current[eventId]) {\n      eventRefs.current[eventId] = React.createRef();\n    }\n    return eventRefs.current[eventId];\n  }, []);\n\n  useLayoutEffect(() => {\n    let changed = false;\n    const newPositions = { ...eventPositions };\n\n    Object.entries(eventRefs.current).forEach(([eventId, refObj]) => {\n      if (refObj.current) {\n        const rect = refObj.current.getBoundingClientRect();\n        const centerPos = {\n          x: Math.round(rect.left + rect.width / 2),\n          y: Math.round(rect.top + rect.height / 2),\n        };\n        const oldPos = newPositions[eventId];\n        if (!oldPos || oldPos.x !== centerPos.x || oldPos.y !== centerPos.y) {\n          changed = true;\n          newPositions[eventId] = centerPos;\n        }\n      }\n    });\n\n    if (changed) {\n      setEventPositions(newPositions);\n    }\n  });\n\n  const [pendingConnection, setPendingConnection] = useState(null);\n  const [pendingConnectionEnd, setPendingConnectionEnd] = useState(null);\n  const [showGlobalAddModal, setShowGlobalAddModal] = useState(false);\n  const [showConnectionModal, setShowConnectionModal] = useState(false);\n  const [pendingTo, setPendingTo] = useState(null);\n  const [hoveredEvent, setHoveredEvent] = useState(null);\n  const containerRef = useRef(null);\n\n  useEffect(() => {\n    fetch('/data.json')\n      .then((r) => r.json())\n      .then((data) => {\n        setWaves(data.waves || []);\n        setConnections(data.connections || []);\n      })\n      .catch((err) => console.error('Error loading data:', err));\n  }, []);\n\n  useEffect(() => {\n    if (waves.length > 0) {\n      setSelectedWaveIndices(waves.map((_, idx) => idx));\n    }\n  }, [waves]);\n\n  const handleEventDoubleClick = (eventId, e) => {\n    if (!pendingConnection) {\n      setPendingConnection({ startEventId: eventId });\n      if (containerRef.current) {\n        const containerRect = containerRef.current.getBoundingClientRect();\n        const x = e.clientX - containerRect.left;\n        const y = e.clientY - containerRect.top;\n        setPendingConnectionEnd({ x, y });\n      }\n    } else {\n      if (pendingConnection.startEventId === eventId) {\n        setPendingConnection(null);\n        setPendingConnectionEnd(null);\n      } else {\n        setPendingTo(eventId);\n        setShowConnectionModal(true);\n        setPendingConnectionEnd(null);\n      }\n    }\n  };\n\n  const handleSubmitNewEvent = (data) => {\n    // 使用组件文件内定义的 generateUniqueId 函数（在组件内不需要再暴露）\n    const newId = Math.random().toString(36).substr(2, 9);\n    setWaves((prev) => {\n      const newWaves = [...prev];\n      const idx = data.timelineIndex;\n      if (newWaves[idx]) {\n        const waveCopy = {\n          ...newWaves[idx],\n          events: [...newWaves[idx].events],\n        };\n        waveCopy.events.push({\n          id: newId,\n          date: data.date,\n          title: data.title,\n          detail: data.detail,\n        });\n        newWaves[idx] = waveCopy;\n      }\n      return newWaves;\n    });\n  };\n\n  const handleSubmitConnection = (reason) => {\n    setConnections((prev) => [\n      ...prev,\n      { from: pendingConnection.startEventId, to: pendingTo, reason },\n    ]);\n    setPendingConnection(null);\n    setPendingConnectionEnd(null);\n    setPendingTo(null);\n  };\n\n  const handleDeleteEvent = (eventId) => {\n    setWaves((prev) =>\n      prev.map((w) => ({\n        ...w,\n        events: w.events.filter((e) => e.id !== eventId),\n      }))\n    );\n    setConnections((prev) =>\n      prev.filter((c) => c.from !== eventId && c.to !== eventId)\n    );\n  };\n\n  const handleDeleteConnection = (connIndex) => {\n    setConnections((prev) => prev.filter((_, i) => i !== connIndex));\n  };\n\n  const handleMouseMove = (e) => {\n    if (pendingConnection && pendingConnectionEnd !== null) {\n      const containerRect = containerRef.current.getBoundingClientRect();\n      setPendingConnectionEnd({\n        x: e.clientX - containerRect.left,\n        y: e.clientY - containerRect.top,\n      });\n    }\n  };\n\n  const timelineOptions = useMemo(() => {\n    return waves.map((wave, i) => ({ index: i, title: wave.title }));\n  }, [waves]);\n\n  const displayedWaves = useMemo(() => {\n    return waves.filter((_, idx) => selectedWaveIndices.includes(idx));\n  }, [waves, selectedWaveIndices]);\n\n  const displayedEventIds = useMemo(() => {\n    const ids = new Set();\n    displayedWaves.forEach((w) => {\n      w.events.forEach((ev) => {\n        ids.add(ev.id);\n      });\n    });\n    return ids;\n  }, [displayedWaves]);\n\n  const displayedConnections = useMemo(() => {\n    return connections.filter(\n      (conn) => \n        displayedEventIds.has(conn.from) && \n        displayedEventIds.has(conn.to)\n    );\n  }, [connections, displayedEventIds]);\n\n  const toggleWave = (idx) => {\n    setSelectedWaveIndices((prev) => {\n      if (prev.includes(idx)) {\n        return prev.filter((i) => i !== idx);\n      } else {\n        return [...prev, idx];\n      }\n    });\n  };\n\n  return (\n    <div\n      ref={containerRef}\n      onMouseMove={handleMouseMove}\n      style={{ paddingBottom: '80px', position: 'relative' }}\n    >\n      {/* 添加事件模态框 */}\n      <AddEventModal\n        isOpen={showGlobalAddModal}\n        onClose={() => setShowGlobalAddModal(false)}\n        onSubmit={handleSubmitNewEvent}\n        timelineOptions={timelineOptions}\n      />\n\n      {/* 连接原因模态框 */}\n      <ConnectionReasonModal\n        isOpen={showConnectionModal}\n        onClose={() => {\n          setShowConnectionModal(false);\n          setPendingConnection(null);\n          setPendingConnectionEnd(null);\n        }}\n        onSubmit={handleSubmitConnection}\n      />\n\n      {/* 全局 Hover 提示 */}\n      <GlobalTooltip hoveredEvent={hoveredEvent} />\n\n      {/* 页面标题 */}\n      <h1\n        style={{\n          textAlign: 'center',\n          marginBottom: '20px',\n          fontSize: '2rem',\n          color: '#333',\n          textShadow: '1px 1px 2px rgba(0,0,0,0.2)',\n        }}\n      >\n        Analogical Timeline of Tech Wave\n      </h1>\n      <h2\n        style={{\n          textAlign: 'center',\n          fontStyle: 'italic',\n          color: '#555',\n          marginBottom: '30px',\n        }}\n      >\n        History doesn't repeat itself, but it often rhymes.\n      </h2>\n\n      <div style={{ textAlign: 'center', fontSize: '22px', paddingBottom: '30px' }}>\n        Zijian \"Jason\" Ding\n        <div style={{ paddingTop: \"0.2em\" }}>PhD candidate</div>\n        <div style={{ paddingTop: \"0.2em\" }}>University of Maryland, College Park</div>\n      </div>\n\n      {/* 右上角添加按钮 */}\n      <button\n        onClick={() => setShowGlobalAddModal(true)}\n        style={{\n          position: 'fixed',\n          top: '20px',\n          right: '20px',\n          width: '40px',\n          height: '40px',\n          borderRadius: '50%',\n          border: 'none',\n          color: '#3498db',\n          fontSize: '24px',\n          fontWeight: 'bold',\n          cursor: 'pointer',\n          zIndex: 10,\n          boxShadow: '0 2px 5px rgba(0,0,0,0.3)',\n        }}\n        title=\"Add Event\"\n      >\n        +\n      </button>\n\n      {/* 时间线选择器 */}\n      <div style={{ textAlign: 'center', marginBottom: '20px' }}>\n        {waves.map((wave, idx) => {\n          const waveIcon = getWaveIcon(wave.title);\n          const isSelected = selectedWaveIndices.includes(idx);\n          const predictedTag = wave.predictionTime\n            ? ` (${wave.predictionTime})`\n            : '';\n\n          return (\n            <label\n              key={idx}\n              style={{\n                marginRight: '15px',\n                cursor: 'pointer',\n                display: 'inline-flex',\n                alignItems: 'center',\n                padding: '4px',\n                borderRadius: '4px',\n                backgroundColor: isSelected ? '#ebedef' : 'transparent',\n                transition: 'background-color 0.2s ease',\n              }}\n              title={wave.predictionTime ? `Predicted timeline at ${wave.predictionTime}` : ''}\n            >\n              <input\n                type=\"checkbox\"\n                checked={isSelected}\n                onChange={() => toggleWave(idx)}\n                style={{ marginRight: '6px' }}\n              />\n              <span style={{ marginRight: '4px' }}>{waveIcon}</span>\n              <span>\n                {wave.title}\n                {predictedTag}\n              </span>\n            </label>\n          );\n        })}\n      </div>\n\n      {/* 多条时间线 */}\n      <div\n        style={{\n          display: 'flex',\n          justifyContent: 'space-around',\n          flexWrap: 'wrap',\n          marginTop: '40px',\n          position: 'relative',\n          zIndex: 0,\n        }}\n      >\n        {displayedWaves.map((wave, idx) => {\n          const originalIndex = waves.indexOf(wave);\n          return (\n            <Timeline\n              key={originalIndex}\n              timelineIndex={originalIndex}\n              wave={wave}\n              onEventDoubleClick={handleEventDoubleClick}\n              onDeleteEvent={handleDeleteEvent}\n              setHoveredEvent={setHoveredEvent}\n              getEventRef={getEventRef}\n            />\n          );\n        })}\n      </div>\n\n      {/* 连接线层 */}\n      <ConnectionsLayer\n        connections={displayedConnections}\n        eventPositions={eventPositions}\n        containerRef={containerRef}\n        pendingConnection={pendingConnection}\n        pendingConnectionEnd={pendingConnectionEnd}\n        onDeleteConnection={handleDeleteConnection}\n      />\n    </div>\n  );\n}\n\nexport default Showcase;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}