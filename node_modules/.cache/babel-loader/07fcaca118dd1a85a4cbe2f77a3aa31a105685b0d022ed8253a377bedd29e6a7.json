{"ast":null,"code":"var _jsxFileName = \"/Users/jasonding/Desktop/Robot2025/src/components/Showcase.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\n\n/** \n * 生成曲线路径的辅助函数 (三次贝塞尔曲线示例)\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction generateCurvePath(x1, y1, x2, y2) {\n  const cx = (x1 + x2) / 2;\n  return `M ${x1},${y1} C ${cx},${y1} ${cx},${y2} ${x2},${y2}`;\n}\n\n/**\n * 连接线组件：使用 <path> 绘制贝塞尔曲线，并在 hover 时加粗红线、加粗文字\n */\nfunction ConnectionLine({\n  fromPos,\n  toPos,\n  reason\n}) {\n  _s();\n  const [hovered, setHovered] = useState(false);\n\n  // 在 hover 时加大线条宽度、提升颜色饱和度\n  const strokeColor = hovered ? 'rgba(255,0,0,1)' : 'rgba(255,0,0,0.3)';\n  const strokeWidth = hovered ? 3 : 2;\n  const pathData = generateCurvePath(fromPos.x, fromPos.y, toPos.x, toPos.y);\n  return /*#__PURE__*/_jsxDEV(\"g\", {\n    onMouseEnter: () => setHovered(true),\n    onMouseLeave: () => setHovered(false),\n    style: {\n      cursor: 'pointer',\n      pointerEvents: 'visibleStroke' // 仅在路径笔画区域响应鼠标事件\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"path\", {\n      d: pathData,\n      stroke: strokeColor,\n      strokeWidth: strokeWidth,\n      fill: \"none\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n      x: (fromPos.x + toPos.x) / 2,\n      y: (fromPos.y + toPos.y) / 2 - 5,\n      fill: strokeColor,\n      fontSize: hovered ? 14 : 12 // 悬停时字号更大\n      ,\n      fontWeight: hovered ? 'bold' : 'normal',\n      textAnchor: \"middle\",\n      children: reason\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n}\n\n/**\n * 单个事件节点组件 (基本不变)\n */\n_s(ConnectionLine, \"V8YbV+gTZxGliGj1g0fftBlvsq4=\");\n_c = ConnectionLine;\nfunction EventItem({\n  event,\n  eventId,\n  registerPosition,\n  onEventClick,\n  scrollPos\n}) {\n  _s2();\n  const itemRef = useRef(null);\n  const blueDotRef = useRef(null);\n  const [hover, setHover] = useState(false);\n  const tooltipStyle = {\n    position: 'absolute',\n    top: '-60px',\n    left: '50%',\n    transform: 'translateX(-50%)',\n    padding: '8px 12px',\n    backgroundColor: '#fff',\n    border: '1px solid #ccc',\n    borderRadius: '8px',\n    whiteSpace: 'nowrap',\n    zIndex: 10,\n    boxShadow: '0 2px 8px rgba(0,0,0,0.15)',\n    minWidth: '220px'\n  };\n  useEffect(() => {\n    if (blueDotRef.current) {\n      const rect = blueDotRef.current.getBoundingClientRect();\n      const pos = {\n        x: rect.left + rect.width / 2,\n        y: rect.top + rect.height / 2\n      };\n      registerPosition(eventId, pos);\n    }\n  }, [blueDotRef, registerPosition, eventId, scrollPos]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: itemRef,\n    style: {\n      display: 'flex',\n      alignItems: 'center',\n      marginBottom: '20px',\n      cursor: 'pointer',\n      position: 'relative',\n      padding: '4px 8px'\n    },\n    onMouseEnter: () => setHover(true),\n    onMouseLeave: () => setHover(false),\n    onClick: () => onEventClick && onEventClick(eventId),\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      ref: blueDotRef,\n      style: {\n        width: '16px',\n        height: '16px',\n        borderRadius: '50%',\n        backgroundColor: '#007BFF',\n        marginRight: '8px',\n        flexShrink: 0\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          border: '2px solid #ddd',\n          borderRadius: '20px',\n          padding: '8px 14px',\n          background: '#fff',\n          fontSize: '15px',\n          minWidth: '120px',\n          textAlign: 'center',\n          marginBottom: '4px',\n          boxShadow: '0 2px 4px rgba(0,0,0,0.1)'\n        },\n        children: event.date\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          fontSize: '14px',\n          color: '#333',\n          textAlign: 'left',\n          fontWeight: 'bold'\n        },\n        children: event.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this), hover && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: tooltipStyle,\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        style: {\n          display: 'block',\n          marginBottom: '6px'\n        },\n        children: event.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          fontSize: '13px',\n          color: '#333'\n        },\n        children: event.detail\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 5\n  }, this);\n}\n\n/**\n * 单条浪潮时间线组件 (可适当增大 timelineHeight 以显示最底部事件)\n */\n_s2(EventItem, \"cr7o0zMnNWHP6Yc2XDKOdN7ME9k=\");\n_c2 = EventItem;\nfunction Timeline({\n  wave,\n  waveIndex,\n  registerPosition,\n  onEventClick,\n  scrollPos\n}) {\n  // 将高度从 620 调整到更大，如 800\n  const timelineHeight = 800;\n  const timestamps = wave.events.map(e => new Date(e.date).getTime());\n  const earliestTime = Math.min(...timestamps);\n  const latestTime = Math.max(...timestamps);\n  const totalTimeSpan = latestTime - earliestTime;\n  const safeTimeSpan = totalTimeSpan === 0 ? 1 : totalTimeSpan;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      flex: '1',\n      margin: '0 20px',\n      position: 'relative'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      style: {\n        fontSize: '16px',\n        marginBottom: '5px',\n        textAlign: 'center'\n      },\n      children: wave.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        fontSize: '14px',\n        color: '#666',\n        marginBottom: '20px',\n        textAlign: 'center'\n      },\n      children: wave.period\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: 'relative',\n        width: '2px',\n        backgroundColor: '#bbb',\n        height: timelineHeight + 'px',\n        marginLeft: '0',\n        borderRadius: '1px'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          position: 'absolute',\n          top: '0',\n          left: '-10px',\n          right: '-10px'\n        },\n        children: wave.events.map((event, index) => {\n          const currentTime = new Date(event.date).getTime();\n          const offset = currentTime - earliestTime;\n          const ratio = offset / safeTimeSpan;\n          const pos = ratio * timelineHeight;\n          const eventId = `${waveIndex}-${index}`;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              position: 'absolute',\n              top: pos + 'px',\n              width: '220px'\n            },\n            children: /*#__PURE__*/_jsxDEV(EventItem, {\n              event: event,\n              eventId: eventId,\n              registerPosition: registerPosition,\n              onEventClick: onEventClick,\n              scrollPos: scrollPos\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 188,\n              columnNumber: 17\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 156,\n    columnNumber: 5\n  }, this);\n}\n\n/**\n * 连接层组件：将所有连接转换为曲线 (ConnectionLine)\n */\n_c3 = Timeline;\nfunction ConnectionsLayer({\n  connections,\n  eventPositions,\n  containerRef\n}) {\n  const containerRect = containerRef.current ? containerRef.current.getBoundingClientRect() : {\n    left: 0,\n    top: 0\n  };\n  return /*#__PURE__*/_jsxDEV(\"svg\", {\n    style: {\n      position: 'absolute',\n      top: 0,\n      left: 0,\n      // 移除 pointerEvents: 'none'，以允许捕捉曲线的鼠标事件\n      width: '100%',\n      height: '100%'\n    },\n    children: connections.map((conn, index) => {\n      const fromPos = eventPositions[conn.from];\n      const toPos = eventPositions[conn.to];\n      if (!fromPos || !toPos) return null;\n\n      // 相对于主容器的偏移\n      const adjustedFrom = {\n        x: fromPos.x - containerRect.left,\n        y: fromPos.y - containerRect.top\n      };\n      const adjustedTo = {\n        x: toPos.x - containerRect.left,\n        y: toPos.y - containerRect.top\n      };\n      return /*#__PURE__*/_jsxDEV(ConnectionLine, {\n        fromPos: adjustedFrom,\n        toPos: adjustedTo,\n        reason: conn.reason\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 211,\n    columnNumber: 5\n  }, this);\n}\n\n/**\n * 主容器组件\n * - 在 connections 中添加连接最底部事件的条目\n * - 连接线 hover 时加粗并高亮文字\n */\n_c4 = ConnectionsLayer;\nfunction Showcase() {\n  _s3();\n  const waves = [{\n    title: '个人电脑',\n    period: '(1979-1983)',\n    events: [{\n      date: '1979-08-12',\n      title: 'VisiCalc 发布',\n      detail: '首款电子表格软件 VisiCalc 面向 Apple II 推出。'\n    }, {\n      date: '1980-08-25',\n      title: 'IBM PC 立项',\n      detail: 'IBM 决定组建个人电脑部门，启动“Project Chess”。'\n    }, {\n      date: '1981-08-12',\n      title: 'IBM PC 发布',\n      detail: 'IBM 5150 机型问世，搭载 Intel 8088 CPU 和 MS-DOS。'\n    }, {\n      date: '1982-02-16',\n      title: 'Compaq 创立',\n      detail: '康柏公司成立，专注于生产 IBM PC 兼容机。'\n    }, {\n      date: '1983-05-30',\n      title: 'Apple Lisa 推出',\n      detail: 'Apple 发布 Apple Lisa，标志着图形用户界面的发展。'\n    }]\n  }, {\n    title: '互联网',\n    period: '(1994-2000)',\n    events: [{\n      date: '1994-04-04',\n      title: 'Netscape 创立',\n      detail: 'Mosaic 团队成员创立 Netscape，专注浏览器研发。'\n    }, {\n      date: '1995-07-05',\n      title: 'Amazon 上线',\n      detail: '杰夫·贝索斯创立的电商网站 Amazon.com 开始运营。'\n    }, {\n      date: '1996-07-04',\n      title: 'Hotmail 推出',\n      detail: '免费网络邮件服务 Hotmail 上线，迅速风靡全球。'\n    }, {\n      date: '1997-03-02',\n      title: 'AOL 收购 CompuServe',\n      detail: 'AOL 以 1.2 亿美元收购 CompuServe 网络业务。'\n    }, {\n      date: '1999-01-15',\n      title: 'Google 搜索上线',\n      detail: 'Google 推出搜索引擎，革新了互联网信息检索方式。'\n    }, {\n      date: '2000-06-26',\n      title: 'Dot-com 泡沫顶峰',\n      detail: '互联网公司大量上市，市场繁荣到达顶峰。'\n    }]\n  }, {\n    title: '智能手机',\n    period: '(2007-2012)',\n    events: [{\n      date: '2007-01-09',\n      title: 'iPhone 发布',\n      detail: '苹果首款 iPhone 在 Macworld 大会上正式发布。'\n    }, {\n      date: '2007-06-29',\n      title: 'iPhone 开售',\n      detail: '初代 iPhone 在美国上市，引发消费者排队抢购。'\n    }, {\n      date: '2008-09-23',\n      title: 'Android 1.0 发布',\n      detail: '搭载 Android 系统的 HTC Dream 上市。'\n    }, {\n      date: '2009-03-17',\n      title: 'iPhone OS 3.0 公布',\n      detail: '苹果发布 iPhone OS 3.0，新增推送通知等功能。'\n    }, {\n      date: '2010-10-04',\n      title: 'Samsung Galaxy S 系列',\n      detail: '三星发布 Galaxy S 系列，标志着安卓阵营的崛起。'\n    }, {\n      date: '2012-09-05',\n      title: 'iPhone 5 发布',\n      detail: '苹果发布 iPhone 5，采用全新设计和更快的处理器。'\n    }]\n  }, {\n    title: '电动车',\n    period: '(2015-2020)',\n    events: [{\n      date: '2015-01-12',\n      title: 'Chevrolet Bolt 概念车',\n      detail: '通用在北美车展发布 Bolt EV 概念车，主打平价长续航。'\n    }, {\n      date: '2016-03-31',\n      title: 'Tesla Model 3 亮相',\n      detail: '特斯拉举行 Model 3 发布会，引发大量预订。'\n    }, {\n      date: '2017-07-28',\n      title: 'Model 3 首批交付',\n      detail: '特斯拉向首批用户交付 Model 3 量产车。'\n    }, {\n      date: '2018-09-25',\n      title: 'NIO ES8 发布',\n      detail: '蔚来发布高端电动 SUV，推动国产电动车市场。'\n    }, {\n      date: '2020-01-15',\n      title: 'Tesla Model Y 推出',\n      detail: '特斯拉推出更紧凑的 Model Y，进一步拓展电动车市场。'\n    }]\n  }, {\n    title: '生成式 AI',\n    period: '(2019-2023)',\n    events: [{\n      date: '2019-02-14',\n      title: 'OpenAI GPT-2 公布',\n      detail: 'OpenAI 宣布 GPT-2 模型，但仅限“受限发布”。'\n    }, {\n      date: '2020-05-28',\n      title: 'GPT-3 论文发表',\n      detail: '“Language Models are Few-Shot Learners” 论文上载至 arXiv。'\n    }, {\n      date: '2021-08-10',\n      title: 'DALL·E 展示',\n      detail: 'OpenAI 展示 DALL·E，展示了 AI 生成图像的能力。'\n    }, {\n      date: '2022-03-15',\n      title: 'GPT-3.5 发布',\n      detail: 'OpenAI 发布 GPT-3.5 text-davinci-002 API。'\n    }, {\n      date: '2022-11-30',\n      title: 'ChatGPT 上线',\n      detail: 'OpenAI 推出对话式 AI ChatGPT，用户量激增。'\n    }, {\n      date: '2023-06-12',\n      title: '生成式 AI 全面爆发',\n      detail: '各大科技公司纷纷推出生成式 AI 应用，加速产业变革。'\n    }]\n  }];\n\n  // 用于存储各事件的位置信息（键为 eventId，值为 { x, y }）\n  const [eventPositions, setEventPositions] = useState({});\n  const registerPosition = (id, pos) => {\n    setEventPositions(prev => ({\n      ...prev,\n      [id]: pos\n    }));\n  };\n\n  // 在此处添加需要连接最底部事件的配置\n  const [connections, setConnections] = useState([{\n    from: '0-2',\n    to: '1-0',\n    reason: '推动网络化办公'\n  }, {\n    from: '0-4',\n    to: '1-4',\n    reason: '用户体验革新'\n  }, {\n    from: '1-5',\n    to: '2-5',\n    reason: '信息获取方式转变'\n  }, {\n    from: '1-3',\n    to: '2-2',\n    reason: '技术互补'\n  }, {\n    from: '2-4',\n    to: '3-4',\n    reason: '智能化互联'\n  }, {\n    from: '1-4',\n    to: '4-0',\n    reason: '大数据启发'\n  }, {\n    from: '2-5',\n    to: '4-5',\n    reason: '移动端需求激增'\n  }, {\n    from: '3-3',\n    to: '4-2',\n    reason: '智能驾驶发展'\n  },\n  // 新增红色连接\n  {\n    from: '0-1',\n    to: '1-1',\n    reason: '初期网络试验'\n  }, {\n    from: '1-2',\n    to: '2-3',\n    reason: '手机技术推动'\n  }, {\n    from: '3-1',\n    to: '4-3',\n    reason: '智能变革'\n  },\n  // ★ 在这里添加连接最底部节点的示例（例如把 \"生成式AI\" 最后节点 4-5 连接到 \"电动车\" 最后节点 3-4）\n  {\n    from: '4-5',\n    to: '3-4',\n    reason: '底部节点连接示例'\n  }]);\n\n  // 用于存储用户手动选择的事件（最多一个待选事件）\n  const [selectedEvents, setSelectedEvents] = useState([]);\n  const handleEventClick = eventId => {\n    if (selectedEvents.length === 0) {\n      setSelectedEvents([eventId]);\n    } else if (selectedEvents.length === 1) {\n      if (selectedEvents[0] === eventId) {\n        setSelectedEvents([]);\n        return;\n      }\n      const reason = window.prompt(\"请输入连接理由\", \"手动连接\") || \"手动连接\";\n      const newConnection = {\n        from: selectedEvents[0],\n        to: eventId,\n        reason\n      };\n      setConnections(prev => [...prev, newConnection]);\n      setSelectedEvents([]);\n    }\n  };\n  const containerRef = useRef(null);\n  const [scrollPos, setScrollPos] = useState(0);\n  useEffect(() => {\n    const handleScroll = () => {\n      setScrollPos(window.scrollY);\n    };\n    window.addEventListener('scroll', handleScroll);\n    return () => {\n      window.removeEventListener('scroll', handleScroll);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: containerRef,\n    style: {\n      padding: '20px',\n      position: 'relative'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      style: {\n        textAlign: 'center',\n        marginBottom: '40px'\n      },\n      children: \"How to do the right things in tech wave\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 480,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        justifyContent: 'space-around',\n        flexWrap: 'wrap',\n        marginTop: '40px'\n      },\n      children: waves.map((wave, index) => /*#__PURE__*/_jsxDEV(Timeline, {\n        wave: wave,\n        waveIndex: index,\n        registerPosition: registerPosition,\n        onEventClick: handleEventClick,\n        scrollPos: scrollPos\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 492,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 483,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ConnectionsLayer, {\n      connections: connections,\n      eventPositions: eventPositions,\n      containerRef: containerRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 503,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 479,\n    columnNumber: 5\n  }, this);\n}\n_s3(Showcase, \"q3AAwN3axQSz929rrCgUbexpVbg=\");\n_c5 = Showcase;\nexport default Showcase;\nvar _c, _c2, _c3, _c4, _c5;\n$RefreshReg$(_c, \"ConnectionLine\");\n$RefreshReg$(_c2, \"EventItem\");\n$RefreshReg$(_c3, \"Timeline\");\n$RefreshReg$(_c4, \"ConnectionsLayer\");\n$RefreshReg$(_c5, \"Showcase\");","map":{"version":3,"names":["React","useState","useEffect","useRef","jsxDEV","_jsxDEV","generateCurvePath","x1","y1","x2","y2","cx","ConnectionLine","fromPos","toPos","reason","_s","hovered","setHovered","strokeColor","strokeWidth","pathData","x","y","onMouseEnter","onMouseLeave","style","cursor","pointerEvents","children","d","stroke","fill","fileName","_jsxFileName","lineNumber","columnNumber","fontSize","fontWeight","textAnchor","_c","EventItem","event","eventId","registerPosition","onEventClick","scrollPos","_s2","itemRef","blueDotRef","hover","setHover","tooltipStyle","position","top","left","transform","padding","backgroundColor","border","borderRadius","whiteSpace","zIndex","boxShadow","minWidth","current","rect","getBoundingClientRect","pos","width","height","ref","display","alignItems","marginBottom","onClick","marginRight","flexShrink","background","textAlign","date","color","title","detail","_c2","Timeline","wave","waveIndex","timelineHeight","timestamps","events","map","e","Date","getTime","earliestTime","Math","min","latestTime","max","totalTimeSpan","safeTimeSpan","flex","margin","period","marginLeft","right","index","currentTime","offset","ratio","_c3","ConnectionsLayer","connections","eventPositions","containerRef","containerRect","conn","from","to","adjustedFrom","adjustedTo","_c4","Showcase","_s3","waves","setEventPositions","id","prev","setConnections","selectedEvents","setSelectedEvents","handleEventClick","length","window","prompt","newConnection","setScrollPos","handleScroll","scrollY","addEventListener","removeEventListener","justifyContent","flexWrap","marginTop","_c5","$RefreshReg$"],"sources":["/Users/jasonding/Desktop/Robot2025/src/components/Showcase.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\n\n/** \n * 生成曲线路径的辅助函数 (三次贝塞尔曲线示例)\n */\nfunction generateCurvePath(x1, y1, x2, y2) {\n  const cx = (x1 + x2) / 2; \n  return `M ${x1},${y1} C ${cx},${y1} ${cx},${y2} ${x2},${y2}`;\n}\n\n/**\n * 连接线组件：使用 <path> 绘制贝塞尔曲线，并在 hover 时加粗红线、加粗文字\n */\nfunction ConnectionLine({ fromPos, toPos, reason }) {\n  const [hovered, setHovered] = useState(false);\n\n  // 在 hover 时加大线条宽度、提升颜色饱和度\n  const strokeColor = hovered ? 'rgba(255,0,0,1)' : 'rgba(255,0,0,0.3)';\n  const strokeWidth = hovered ? 3 : 2;\n  const pathData = generateCurvePath(fromPos.x, fromPos.y, toPos.x, toPos.y);\n\n  return (\n    <g\n      onMouseEnter={() => setHovered(true)}\n      onMouseLeave={() => setHovered(false)}\n      style={{ \n        cursor: 'pointer',\n        pointerEvents: 'visibleStroke', // 仅在路径笔画区域响应鼠标事件\n      }}\n    >\n      {/* 曲线本体 */}\n      <path\n        d={pathData}\n        stroke={strokeColor}\n        strokeWidth={strokeWidth}\n        fill=\"none\"\n      />\n      {/* 文字，可在 hover 时加粗、变色 */}\n      <text\n        x={(fromPos.x + toPos.x) / 2}\n        y={(fromPos.y + toPos.y) / 2 - 5}\n        fill={strokeColor}\n        fontSize={hovered ? 14 : 12} // 悬停时字号更大\n        fontWeight={hovered ? 'bold' : 'normal'}\n        textAnchor=\"middle\"\n      >\n        {reason}\n      </text>\n    </g>\n  );\n}\n\n/**\n * 单个事件节点组件 (基本不变)\n */\nfunction EventItem({ event, eventId, registerPosition, onEventClick, scrollPos }) {\n  const itemRef = useRef(null);\n  const blueDotRef = useRef(null);\n  const [hover, setHover] = useState(false);\n\n  const tooltipStyle = {\n    position: 'absolute',\n    top: '-60px',\n    left: '50%',\n    transform: 'translateX(-50%)',\n    padding: '8px 12px',\n    backgroundColor: '#fff',\n    border: '1px solid #ccc',\n    borderRadius: '8px',\n    whiteSpace: 'nowrap',\n    zIndex: 10,\n    boxShadow: '0 2px 8px rgba(0,0,0,0.15)',\n    minWidth: '220px',\n  };\n\n  useEffect(() => {\n    if (blueDotRef.current) {\n      const rect = blueDotRef.current.getBoundingClientRect();\n      const pos = { x: rect.left + rect.width / 2, y: rect.top + rect.height / 2 };\n      registerPosition(eventId, pos);\n    }\n  }, [blueDotRef, registerPosition, eventId, scrollPos]);\n\n  return (\n    <div\n      ref={itemRef}\n      style={{\n        display: 'flex',\n        alignItems: 'center',\n        marginBottom: '20px',\n        cursor: 'pointer',\n        position: 'relative',\n        padding: '4px 8px',\n      }}\n      onMouseEnter={() => setHover(true)}\n      onMouseLeave={() => setHover(false)}\n      onClick={() => onEventClick && onEventClick(eventId)}\n    >\n      {/* 蓝色节点 */}\n      <div\n        ref={blueDotRef}\n        style={{\n          width: '16px',\n          height: '16px',\n          borderRadius: '50%',\n          backgroundColor: '#007BFF',\n          marginRight: '8px',\n          flexShrink: 0,\n        }}\n      />\n      {/* 日期与标题部分 */}\n      <div>\n        <div\n          style={{\n            border: '2px solid #ddd',\n            borderRadius: '20px',\n            padding: '8px 14px',\n            background: '#fff',\n            fontSize: '15px',\n            minWidth: '120px',\n            textAlign: 'center',\n            marginBottom: '4px',\n            boxShadow: '0 2px 4px rgba(0,0,0,0.1)',\n          }}\n        >\n          {event.date}\n        </div>\n        <div style={{ fontSize: '14px', color: '#333', textAlign: 'left', fontWeight: 'bold' }}>\n          {event.title}\n        </div>\n      </div>\n\n      {hover && (\n        <div style={tooltipStyle}>\n          <strong style={{ display: 'block', marginBottom: '6px' }}>{event.title}</strong>\n          <div style={{ fontSize: '13px', color: '#333' }}>{event.detail}</div>\n        </div>\n      )}\n    </div>\n  );\n}\n\n/**\n * 单条浪潮时间线组件 (可适当增大 timelineHeight 以显示最底部事件)\n */\nfunction Timeline({ wave, waveIndex, registerPosition, onEventClick, scrollPos }) {\n  // 将高度从 620 调整到更大，如 800\n  const timelineHeight = 800; \n  const timestamps = wave.events.map(e => new Date(e.date).getTime());\n  const earliestTime = Math.min(...timestamps);\n  const latestTime = Math.max(...timestamps);\n  const totalTimeSpan = latestTime - earliestTime;\n  const safeTimeSpan = totalTimeSpan === 0 ? 1 : totalTimeSpan;\n\n  return (\n    <div style={{ flex: '1', margin: '0 20px', position: 'relative' }}>\n      <h2 style={{ fontSize: '16px', marginBottom: '5px', textAlign: 'center' }}>{wave.title}</h2>\n      <div style={{ fontSize: '14px', color: '#666', marginBottom: '20px', textAlign: 'center' }}>\n        {wave.period}\n      </div>\n\n      <div\n        style={{\n          position: 'relative',\n          width: '2px',\n          backgroundColor: '#bbb',\n          height: timelineHeight + 'px',\n          marginLeft: '0',\n          borderRadius: '1px',\n        }}\n      >\n        <div style={{ position: 'absolute', top: '0', left: '-10px', right: '-10px' }}>\n          {wave.events.map((event, index) => {\n            const currentTime = new Date(event.date).getTime();\n            const offset = currentTime - earliestTime;\n            const ratio = offset / safeTimeSpan;\n            const pos = ratio * timelineHeight;\n            const eventId = `${waveIndex}-${index}`;\n            return (\n              <div\n                key={index}\n                style={{\n                  position: 'absolute',\n                  top: pos + 'px',\n                  width: '220px',\n                }}\n              >\n                <EventItem\n                  event={event}\n                  eventId={eventId}\n                  registerPosition={registerPosition}\n                  onEventClick={onEventClick}\n                  scrollPos={scrollPos}\n                />\n              </div>\n            );\n          })}\n        </div>\n      </div>\n    </div>\n  );\n}\n\n/**\n * 连接层组件：将所有连接转换为曲线 (ConnectionLine)\n */\nfunction ConnectionsLayer({ connections, eventPositions, containerRef }) {\n  const containerRect = containerRef.current ? containerRef.current.getBoundingClientRect() : { left: 0, top: 0 };\n\n  return (\n    <svg\n      style={{\n        position: 'absolute',\n        top: 0,\n        left: 0,\n        // 移除 pointerEvents: 'none'，以允许捕捉曲线的鼠标事件\n        width: '100%',\n        height: '100%',\n      }}\n    >\n      {connections.map((conn, index) => {\n        const fromPos = eventPositions[conn.from];\n        const toPos = eventPositions[conn.to];\n        if (!fromPos || !toPos) return null;\n\n        // 相对于主容器的偏移\n        const adjustedFrom = { x: fromPos.x - containerRect.left, y: fromPos.y - containerRect.top };\n        const adjustedTo = { x: toPos.x - containerRect.left, y: toPos.y - containerRect.top };\n\n        return (\n          <ConnectionLine\n            key={index}\n            fromPos={adjustedFrom}\n            toPos={adjustedTo}\n            reason={conn.reason}\n          />\n        );\n      })}\n    </svg>\n  );\n}\n\n/**\n * 主容器组件\n * - 在 connections 中添加连接最底部事件的条目\n * - 连接线 hover 时加粗并高亮文字\n */\nfunction Showcase() {\n  \n  const waves = [\n    {\n      title: '个人电脑',\n      period: '(1979-1983)',\n      events: [\n        {\n          date: '1979-08-12',\n          title: 'VisiCalc 发布',\n          detail: '首款电子表格软件 VisiCalc 面向 Apple II 推出。',\n        },\n        {\n          date: '1980-08-25',\n          title: 'IBM PC 立项',\n          detail: 'IBM 决定组建个人电脑部门，启动“Project Chess”。',\n        },\n        {\n          date: '1981-08-12',\n          title: 'IBM PC 发布',\n          detail: 'IBM 5150 机型问世，搭载 Intel 8088 CPU 和 MS-DOS。',\n        },\n        {\n          date: '1982-02-16',\n          title: 'Compaq 创立',\n          detail: '康柏公司成立，专注于生产 IBM PC 兼容机。',\n        },\n        {\n          date: '1983-05-30',\n          title: 'Apple Lisa 推出',\n          detail: 'Apple 发布 Apple Lisa，标志着图形用户界面的发展。',\n        },\n      ],\n    },\n    {\n      title: '互联网',\n      period: '(1994-2000)',\n      events: [\n        {\n          date: '1994-04-04',\n          title: 'Netscape 创立',\n          detail: 'Mosaic 团队成员创立 Netscape，专注浏览器研发。',\n        },\n        {\n          date: '1995-07-05',\n          title: 'Amazon 上线',\n          detail: '杰夫·贝索斯创立的电商网站 Amazon.com 开始运营。',\n        },\n        {\n          date: '1996-07-04',\n          title: 'Hotmail 推出',\n          detail: '免费网络邮件服务 Hotmail 上线，迅速风靡全球。',\n        },\n        {\n          date: '1997-03-02',\n          title: 'AOL 收购 CompuServe',\n          detail: 'AOL 以 1.2 亿美元收购 CompuServe 网络业务。',\n        },\n        {\n          date: '1999-01-15',\n          title: 'Google 搜索上线',\n          detail: 'Google 推出搜索引擎，革新了互联网信息检索方式。',\n        },\n        {\n          date: '2000-06-26',\n          title: 'Dot-com 泡沫顶峰',\n          detail: '互联网公司大量上市，市场繁荣到达顶峰。',\n        },\n      ],\n    },\n    {\n      title: '智能手机',\n      period: '(2007-2012)',\n      events: [\n        {\n          date: '2007-01-09',\n          title: 'iPhone 发布',\n          detail: '苹果首款 iPhone 在 Macworld 大会上正式发布。',\n        },\n        {\n          date: '2007-06-29',\n          title: 'iPhone 开售',\n          detail: '初代 iPhone 在美国上市，引发消费者排队抢购。',\n        },\n        {\n          date: '2008-09-23',\n          title: 'Android 1.0 发布',\n          detail: '搭载 Android 系统的 HTC Dream 上市。',\n        },\n        {\n          date: '2009-03-17',\n          title: 'iPhone OS 3.0 公布',\n          detail: '苹果发布 iPhone OS 3.0，新增推送通知等功能。',\n        },\n        {\n          date: '2010-10-04',\n          title: 'Samsung Galaxy S 系列',\n          detail: '三星发布 Galaxy S 系列，标志着安卓阵营的崛起。',\n        },\n        {\n          date: '2012-09-05',\n          title: 'iPhone 5 发布',\n          detail: '苹果发布 iPhone 5，采用全新设计和更快的处理器。',\n        },\n      ],\n    },\n    {\n      title: '电动车',\n      period: '(2015-2020)',\n      events: [\n        {\n          date: '2015-01-12',\n          title: 'Chevrolet Bolt 概念车',\n          detail: '通用在北美车展发布 Bolt EV 概念车，主打平价长续航。',\n        },\n        {\n          date: '2016-03-31',\n          title: 'Tesla Model 3 亮相',\n          detail: '特斯拉举行 Model 3 发布会，引发大量预订。',\n        },\n        {\n          date: '2017-07-28',\n          title: 'Model 3 首批交付',\n          detail: '特斯拉向首批用户交付 Model 3 量产车。',\n        },\n        {\n          date: '2018-09-25',\n          title: 'NIO ES8 发布',\n          detail: '蔚来发布高端电动 SUV，推动国产电动车市场。',\n        },\n        {\n          date: '2020-01-15',\n          title: 'Tesla Model Y 推出',\n          detail: '特斯拉推出更紧凑的 Model Y，进一步拓展电动车市场。',\n        },\n      ],\n    },\n    {\n      title: '生成式 AI',\n      period: '(2019-2023)',\n      events: [\n        {\n          date: '2019-02-14',\n          title: 'OpenAI GPT-2 公布',\n          detail: 'OpenAI 宣布 GPT-2 模型，但仅限“受限发布”。',\n        },\n        {\n          date: '2020-05-28',\n          title: 'GPT-3 论文发表',\n          detail: '“Language Models are Few-Shot Learners” 论文上载至 arXiv。',\n        },\n        {\n          date: '2021-08-10',\n          title: 'DALL·E 展示',\n          detail: 'OpenAI 展示 DALL·E，展示了 AI 生成图像的能力。',\n        },\n        {\n          date: '2022-03-15',\n          title: 'GPT-3.5 发布',\n          detail: 'OpenAI 发布 GPT-3.5 text-davinci-002 API。',\n        },\n        {\n          date: '2022-11-30',\n          title: 'ChatGPT 上线',\n          detail: 'OpenAI 推出对话式 AI ChatGPT，用户量激增。',\n        },\n        {\n          date: '2023-06-12',\n          title: '生成式 AI 全面爆发',\n          detail: '各大科技公司纷纷推出生成式 AI 应用，加速产业变革。',\n        },\n      ],\n    },\n  ];\n  \n  // 用于存储各事件的位置信息（键为 eventId，值为 { x, y }）\n  const [eventPositions, setEventPositions] = useState({});\n  const registerPosition = (id, pos) => {\n    setEventPositions(prev => ({ ...prev, [id]: pos }));\n  };\n\n  // 在此处添加需要连接最底部事件的配置\n  const [connections, setConnections] = useState([\n    { from: '0-2', to: '1-0', reason: '推动网络化办公' },\n    { from: '0-4', to: '1-4', reason: '用户体验革新' },\n    { from: '1-5', to: '2-5', reason: '信息获取方式转变' },\n    { from: '1-3', to: '2-2', reason: '技术互补' },\n    { from: '2-4', to: '3-4', reason: '智能化互联' },\n    { from: '1-4', to: '4-0', reason: '大数据启发' },\n    { from: '2-5', to: '4-5', reason: '移动端需求激增' },\n    { from: '3-3', to: '4-2', reason: '智能驾驶发展' },\n    // 新增红色连接\n    { from: '0-1', to: '1-1', reason: '初期网络试验' },\n    { from: '1-2', to: '2-3', reason: '手机技术推动' },\n    { from: '3-1', to: '4-3', reason: '智能变革' },\n    // ★ 在这里添加连接最底部节点的示例（例如把 \"生成式AI\" 最后节点 4-5 连接到 \"电动车\" 最后节点 3-4）\n    { from: '4-5', to: '3-4', reason: '底部节点连接示例' },\n  ]);\n\n  // 用于存储用户手动选择的事件（最多一个待选事件）\n  const [selectedEvents, setSelectedEvents] = useState([]);\n\n  const handleEventClick = (eventId) => {\n    if (selectedEvents.length === 0) {\n      setSelectedEvents([eventId]);\n    } else if (selectedEvents.length === 1) {\n      if (selectedEvents[0] === eventId) {\n        setSelectedEvents([]);\n        return;\n      }\n      const reason = window.prompt(\"请输入连接理由\", \"手动连接\") || \"手动连接\";\n      const newConnection = { from: selectedEvents[0], to: eventId, reason };\n      setConnections(prev => [...prev, newConnection]);\n      setSelectedEvents([]);\n    }\n  };\n\n  const containerRef = useRef(null);\n  const [scrollPos, setScrollPos] = useState(0);\n\n  useEffect(() => {\n    const handleScroll = () => {\n      setScrollPos(window.scrollY);\n    };\n    window.addEventListener('scroll', handleScroll);\n    return () => {\n      window.removeEventListener('scroll', handleScroll);\n    };\n  }, []);\n\n  return (\n    <div ref={containerRef} style={{ padding: '20px', position: 'relative' }}>\n      <h1 style={{ textAlign: 'center', marginBottom: '40px' }}>\n        How to do the right things in tech wave\n      </h1>\n      <div\n        style={{\n          display: 'flex',\n          justifyContent: 'space-around',\n          flexWrap: 'wrap',\n          marginTop: '40px',\n        }}\n      >\n        {waves.map((wave, index) => (\n          <Timeline\n            key={index}\n            wave={wave}\n            waveIndex={index}\n            registerPosition={registerPosition}\n            onEventClick={handleEventClick}\n            scrollPos={scrollPos}\n          />\n        ))}\n      </div>\n      {/* 绘制所有连接线（曲线） */}\n      <ConnectionsLayer\n        connections={connections}\n        eventPositions={eventPositions}\n        containerRef={containerRef}\n      />\n    </div>\n  );\n}\n\nexport default Showcase;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}