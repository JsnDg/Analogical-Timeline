{"ast":null,"code":"var _jsxFileName = \"/Users/jasonding/Desktop/RAG-example/src/components/WikiSearchDemo.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction WikiSearchDemo() {\n  _s();\n  const [responseData, setResponseData] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const callApi = async () => {\n    setLoading(true);\n    setError(null);\n    try {\n      // Use the proxy endpoint instead of the full external URL\n      const response = await fetch('/api/wikipedia', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          query: [\"What is OpenAI\"],\n          rerank: true,\n          num_blocks_to_rerank: 10,\n          num_blocks: 1,\n          search_filters: [{\n            field_name: \"language\",\n            filter_type: \"eq\",\n            field_value: \"en\"\n          }]\n        })\n      });\n      if (!response.ok) {\n        throw new Error(`Error: ${response.status} ${response.statusText}`);\n      }\n      const data = await response.json();\n      setResponseData(data);\n    } catch (err) {\n      setError(err.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: '2rem'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Wikipedia Search API Demo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: callApi,\n      disabled: loading,\n      children: loading ? 'Loading...' : 'Call API'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 17\n    }, this), responseData && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Response:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n        style: {\n          background: '#f4f4f4',\n          padding: '1rem'\n        },\n        children: JSON.stringify(responseData, null, 2)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}\n_s(WikiSearchDemo, \"Nsw9n4Wx7IfEfGu3joZ1OLgao/Q=\");\n_c = WikiSearchDemo;\nexport default WikiSearchDemo;\nvar _c;\n$RefreshReg$(_c, \"WikiSearchDemo\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","WikiSearchDemo","_s","responseData","setResponseData","loading","setLoading","error","setError","callApi","response","fetch","method","headers","body","JSON","stringify","query","rerank","num_blocks_to_rerank","num_blocks","search_filters","field_name","filter_type","field_value","ok","Error","status","statusText","data","json","err","message","style","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","color","background","_c","$RefreshReg$"],"sources":["/Users/jasonding/Desktop/RAG-example/src/components/WikiSearchDemo.jsx"],"sourcesContent":["import React, { useState } from 'react';\n\nfunction WikiSearchDemo() {\n  const [responseData, setResponseData] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const callApi = async () => {\n    setLoading(true);\n    setError(null);\n  \n    try {\n      // Use the proxy endpoint instead of the full external URL\n      const response = await fetch('/api/wikipedia', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({\n          query: [\"What is OpenAI\"],\n          rerank: true,\n          num_blocks_to_rerank: 10,\n          num_blocks: 1,\n          search_filters: [\n            {\n              field_name: \"language\", \n              filter_type: \"eq\", \n              field_value: \"en\"\n            }\n          ]\n        }),\n      });      \n  \n      if (!response.ok) {\n        throw new Error(`Error: ${response.status} ${response.statusText}`);\n      }\n  \n      const data = await response.json();\n      setResponseData(data);\n    } catch (err) {\n      setError(err.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div style={{ padding: '2rem' }}>\n      <h1>Wikipedia Search API Demo</h1>\n      <button onClick={callApi} disabled={loading}>\n        {loading ? 'Loading...' : 'Call API'}\n      </button>\n      {error && <p style={{ color: 'red' }}>Error: {error}</p>}\n      {responseData && (\n        <div>\n          <h2>Response:</h2>\n          <pre style={{ background: '#f4f4f4', padding: '1rem' }}>\n            {JSON.stringify(responseData, null, 2)}\n          </pre>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default WikiSearchDemo;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}