{"ast":null,"code":"var _jsxFileName = \"/Users/jasonding/Desktop/Pinball/src/components/Pinball.jsx\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Pinball() {\n  _s();\n  const canvasRef = useRef(null);\n  // 采用 useRef 存储弹珠的物理属性，避免频繁刷新组件状态\n  const ballRef = useRef({\n    x: 50,\n    y: 300,\n    vx: 0,\n    vy: 0,\n    radius: 10\n  });\n  // 定义几个“弹性点”（碰撞体），可根据需要扩展\n  const bumpers = [{\n    x: 200,\n    y: 150,\n    radius: 20,\n    elasticity: 1.2\n  }, {\n    x: 350,\n    y: 250,\n    radius: 15,\n    elasticity: 1.2\n  }, {\n    x: 150,\n    y: 100,\n    radius: 25,\n    elasticity: 1.2\n  }];\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    let animationFrameId;\n    const gravity = 0.2; // 重力加速度\n\n    // 更新物理状态和碰撞检测\n    const update = () => {\n      const ball = ballRef.current;\n      // 更新速度和位置（简单的欧拉积分）\n      ball.vy += gravity;\n      ball.x += ball.vx;\n      ball.y += ball.vy;\n\n      // 地面碰撞检测（底部反弹）\n      if (ball.y + ball.radius > canvas.height) {\n        ball.y = canvas.height - ball.radius;\n        ball.vy = -ball.vy * 0.8;\n        ball.vx *= 0.9; // 模拟摩擦\n      }\n\n      // 左右墙壁碰撞\n      if (ball.x - ball.radius < 0) {\n        ball.x = ball.radius;\n        ball.vx = -ball.vx * 0.8;\n      } else if (ball.x + ball.radius > canvas.width) {\n        ball.x = canvas.width - ball.radius;\n        ball.vx = -ball.vx * 0.8;\n      }\n\n      // 与每个弹性点的碰撞检测（基于圆与圆的碰撞）\n      bumpers.forEach(bumper => {\n        const dx = ball.x - bumper.x;\n        const dy = ball.y - bumper.y;\n        const distance = Math.sqrt(dx * dx + dy * dy);\n        if (distance < ball.radius + bumper.radius) {\n          // 计算碰撞法线\n          const nx = dx / distance;\n          const ny = dy / distance;\n          // 将弹珠推出碰撞区域\n          const overlap = ball.radius + bumper.radius - distance;\n          ball.x += nx * overlap;\n          ball.y += ny * overlap;\n          // 简单的反射公式：沿法线分量取反\n          const dot = ball.vx * nx + ball.vy * ny;\n          ball.vx = ball.vx - 2 * dot * nx;\n          ball.vy = ball.vy - 2 * dot * ny;\n          // 根据弹性系数放大反弹效果\n          ball.vx *= bumper.elasticity;\n          ball.vy *= bumper.elasticity;\n        }\n      });\n    };\n\n    // 绘制弹珠和弹性点\n    const draw = () => {\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\n      // 绘制弹性点（蓝色圆圈）\n      bumpers.forEach(bumper => {\n        ctx.beginPath();\n        ctx.arc(bumper.x, bumper.y, bumper.radius, 0, Math.PI * 2);\n        ctx.fillStyle = 'blue';\n        ctx.fill();\n        ctx.closePath();\n      });\n      // 绘制弹珠（红色圆圈）\n      const ball = ballRef.current;\n      ctx.beginPath();\n      ctx.arc(ball.x, ball.y, ball.radius, 0, Math.PI * 2);\n      ctx.fillStyle = 'red';\n      ctx.fill();\n      ctx.closePath();\n    };\n\n    // 主循环\n    const loop = () => {\n      update();\n      draw();\n      animationFrameId = requestAnimationFrame(loop);\n    };\n    animationFrameId = requestAnimationFrame(loop);\n    return () => cancelAnimationFrame(animationFrameId);\n  }, [bumpers]);\n\n  // 按钮点击时发射弹珠：重置初始位置及初速度\n  const launchBall = () => {\n    ballRef.current = {\n      x: 50,\n      y: 300,\n      vx: 5,\n      // 水平初速度\n      vy: -10,\n      // 垂直初速度（向上）\n      radius: 10\n    };\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvasRef,\n      width: 500,\n      height: 400,\n      style: {\n        border: '1px solid #000'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: launchBall,\n      children: \"\\u53D1\\u5C04\\u5F39\\u73E0\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 117,\n    columnNumber: 5\n  }, this);\n}\n_s(Pinball, \"buXWSMiKx91tSF/BWu/N3HVvKc0=\");\n_c = Pinball;\nexport default Pinball;\nvar _c;\n$RefreshReg$(_c, \"Pinball\");","map":{"version":3,"names":["React","useRef","useEffect","useState","jsxDEV","_jsxDEV","Pinball","_s","canvasRef","ballRef","x","y","vx","vy","radius","bumpers","elasticity","canvas","current","ctx","getContext","animationFrameId","gravity","update","ball","height","width","forEach","bumper","dx","dy","distance","Math","sqrt","nx","ny","overlap","dot","draw","clearRect","beginPath","arc","PI","fillStyle","fill","closePath","loop","requestAnimationFrame","cancelAnimationFrame","launchBall","children","ref","style","border","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/jasonding/Desktop/Pinball/src/components/Pinball.jsx"],"sourcesContent":["import React, { useRef, useEffect, useState } from 'react';\n\nfunction Pinball() {\n  const canvasRef = useRef(null);\n  // 采用 useRef 存储弹珠的物理属性，避免频繁刷新组件状态\n  const ballRef = useRef({\n    x: 50,\n    y: 300,\n    vx: 0,\n    vy: 0,\n    radius: 10,\n  });\n  // 定义几个“弹性点”（碰撞体），可根据需要扩展\n  const bumpers = [\n    { x: 200, y: 150, radius: 20, elasticity: 1.2 },\n    { x: 350, y: 250, radius: 15, elasticity: 1.2 },\n    { x: 150, y: 100, radius: 25, elasticity: 1.2 },\n  ];\n\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    let animationFrameId;\n    const gravity = 0.2; // 重力加速度\n\n    // 更新物理状态和碰撞检测\n    const update = () => {\n      const ball = ballRef.current;\n      // 更新速度和位置（简单的欧拉积分）\n      ball.vy += gravity;\n      ball.x += ball.vx;\n      ball.y += ball.vy;\n\n      // 地面碰撞检测（底部反弹）\n      if (ball.y + ball.radius > canvas.height) {\n        ball.y = canvas.height - ball.radius;\n        ball.vy = -ball.vy * 0.8;\n        ball.vx *= 0.9; // 模拟摩擦\n      }\n\n      // 左右墙壁碰撞\n      if (ball.x - ball.radius < 0) {\n        ball.x = ball.radius;\n        ball.vx = -ball.vx * 0.8;\n      } else if (ball.x + ball.radius > canvas.width) {\n        ball.x = canvas.width - ball.radius;\n        ball.vx = -ball.vx * 0.8;\n      }\n\n      // 与每个弹性点的碰撞检测（基于圆与圆的碰撞）\n      bumpers.forEach(bumper => {\n        const dx = ball.x - bumper.x;\n        const dy = ball.y - bumper.y;\n        const distance = Math.sqrt(dx * dx + dy * dy);\n        if (distance < ball.radius + bumper.radius) {\n          // 计算碰撞法线\n          const nx = dx / distance;\n          const ny = dy / distance;\n          // 将弹珠推出碰撞区域\n          const overlap = ball.radius + bumper.radius - distance;\n          ball.x += nx * overlap;\n          ball.y += ny * overlap;\n          // 简单的反射公式：沿法线分量取反\n          const dot = ball.vx * nx + ball.vy * ny;\n          ball.vx = ball.vx - 2 * dot * nx;\n          ball.vy = ball.vy - 2 * dot * ny;\n          // 根据弹性系数放大反弹效果\n          ball.vx *= bumper.elasticity;\n          ball.vy *= bumper.elasticity;\n        }\n      });\n    };\n\n    // 绘制弹珠和弹性点\n    const draw = () => {\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\n      // 绘制弹性点（蓝色圆圈）\n      bumpers.forEach(bumper => {\n        ctx.beginPath();\n        ctx.arc(bumper.x, bumper.y, bumper.radius, 0, Math.PI * 2);\n        ctx.fillStyle = 'blue';\n        ctx.fill();\n        ctx.closePath();\n      });\n      // 绘制弹珠（红色圆圈）\n      const ball = ballRef.current;\n      ctx.beginPath();\n      ctx.arc(ball.x, ball.y, ball.radius, 0, Math.PI * 2);\n      ctx.fillStyle = 'red';\n      ctx.fill();\n      ctx.closePath();\n    };\n\n    // 主循环\n    const loop = () => {\n      update();\n      draw();\n      animationFrameId = requestAnimationFrame(loop);\n    };\n    animationFrameId = requestAnimationFrame(loop);\n\n    return () => cancelAnimationFrame(animationFrameId);\n  }, [bumpers]);\n\n  // 按钮点击时发射弹珠：重置初始位置及初速度\n  const launchBall = () => {\n    ballRef.current = {\n      x: 50,\n      y: 300,\n      vx: 5,    // 水平初速度\n      vy: -10,  // 垂直初速度（向上）\n      radius: 10,\n    };\n  };\n\n  return (\n    <div>\n      <canvas\n        ref={canvasRef}\n        width={500}\n        height={400}\n        style={{ border: '1px solid #000' }}\n      ></canvas>\n      <button onClick={launchBall}>发射弹珠</button>\n    </div>\n  );\n}\n\nexport default Pinball;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}