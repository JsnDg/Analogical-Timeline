{"ast":null,"code":"var _jsxFileName = \"/Users/jasonding/Desktop/Robot2025/src/components/Showcase.jsx\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Timeline({\n  wave,\n  waveIndex,\n  registerPosition\n}) {\n  let timelineHeight = 800; // 或者动态计算\n  // 计算时间分布\n  const timestamps = wave.events.map(e => new Date(e.date).getTime());\n  const earliestTime = Math.min(...timestamps);\n  const latestTime = Math.max(...timestamps);\n  const totalTimeSpan = latestTime - earliestTime || 1;\n\n  // 先得到所有事件的“基础位置”\n  const basePositions = wave.events.map(e => {\n    const currentTime = new Date(e.date).getTime();\n    const ratio = (currentTime - earliestTime) / totalTimeSpan; // 0 ~ 1\n    return ratio * timelineHeight;\n  });\n\n  // 对相邻事件做重叠检测，如果过近，就往下推一点\n  const finalPositions = [...basePositions];\n  for (let i = 1; i < finalPositions.length; i++) {\n    const diff = finalPositions[i] - finalPositions[i - 1];\n    if (diff < 40) {\n      // 如果距离小于 40 像素，就让它往下推到 40 像素以外\n      finalPositions[i] = finalPositions[i - 1] + 40;\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      flex: '1',\n      margin: '0 20px',\n      position: 'relative'\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: 'relative',\n        width: '2px',\n        backgroundColor: '#bbb',\n        height: timelineHeight + 'px',\n        marginLeft: '0'\n      },\n      children: wave.events.map((event, index) => {\n        const pos = finalPositions[index];\n        const eventId = `${waveIndex}-${index}`;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            position: 'absolute',\n            top: pos + 'px',\n            width: '220px'\n          },\n          children: /*#__PURE__*/_jsxDEV(EventItem, {\n            event: event,\n            eventId: eventId,\n            registerPosition: registerPosition\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 15\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n_c = Timeline;\nvar _c;\n$RefreshReg$(_c, \"Timeline\");","map":{"version":3,"names":["Timeline","wave","waveIndex","registerPosition","timelineHeight","timestamps","events","map","e","Date","date","getTime","earliestTime","Math","min","latestTime","max","totalTimeSpan","basePositions","currentTime","ratio","finalPositions","i","length","diff","_jsxDEV","style","flex","margin","position","children","width","backgroundColor","height","marginLeft","event","index","pos","eventId","top","EventItem","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/jasonding/Desktop/Robot2025/src/components/Showcase.jsx"],"sourcesContent":["function Timeline({ wave, waveIndex, registerPosition }) {\n  let timelineHeight = 800; // 或者动态计算\n  // 计算时间分布\n  const timestamps = wave.events.map(e => new Date(e.date).getTime());\n  const earliestTime = Math.min(...timestamps);\n  const latestTime = Math.max(...timestamps);\n  const totalTimeSpan = latestTime - earliestTime || 1;\n\n  // 先得到所有事件的“基础位置”\n  const basePositions = wave.events.map(e => {\n    const currentTime = new Date(e.date).getTime();\n    const ratio = (currentTime - earliestTime) / totalTimeSpan; // 0 ~ 1\n    return ratio * timelineHeight;\n  });\n\n  // 对相邻事件做重叠检测，如果过近，就往下推一点\n  const finalPositions = [...basePositions];\n  for (let i = 1; i < finalPositions.length; i++) {\n    const diff = finalPositions[i] - finalPositions[i - 1];\n    if (diff < 40) {\n      // 如果距离小于 40 像素，就让它往下推到 40 像素以外\n      finalPositions[i] = finalPositions[i - 1] + 40;\n    }\n  }\n\n  return (\n    <div style={{ flex: '1', margin: '0 20px', position: 'relative' }}>\n      {/* 标题等 */}\n      <div\n        style={{\n          position: 'relative',\n          width: '2px',\n          backgroundColor: '#bbb',\n          height: timelineHeight + 'px',\n          marginLeft: '0',\n        }}\n      >\n        {wave.events.map((event, index) => {\n          const pos = finalPositions[index];\n          const eventId = `${waveIndex}-${index}`;\n          return (\n            <div\n              key={index}\n              style={{\n                position: 'absolute',\n                top: pos + 'px',\n                width: '220px',\n              }}\n            >\n              <EventItem event={event} eventId={eventId} registerPosition={registerPosition} />\n            </div>\n          );\n        })}\n      </div>\n    </div>\n  );\n}"],"mappings":";;AAAA,SAASA,QAAQA,CAAC;EAAEC,IAAI;EAAEC,SAAS;EAAEC;AAAiB,CAAC,EAAE;EACvD,IAAIC,cAAc,GAAG,GAAG,CAAC,CAAC;EAC1B;EACA,MAAMC,UAAU,GAAGJ,IAAI,CAACK,MAAM,CAACC,GAAG,CAACC,CAAC,IAAI,IAAIC,IAAI,CAACD,CAAC,CAACE,IAAI,CAAC,CAACC,OAAO,CAAC,CAAC,CAAC;EACnE,MAAMC,YAAY,GAAGC,IAAI,CAACC,GAAG,CAAC,GAAGT,UAAU,CAAC;EAC5C,MAAMU,UAAU,GAAGF,IAAI,CAACG,GAAG,CAAC,GAAGX,UAAU,CAAC;EAC1C,MAAMY,aAAa,GAAGF,UAAU,GAAGH,YAAY,IAAI,CAAC;;EAEpD;EACA,MAAMM,aAAa,GAAGjB,IAAI,CAACK,MAAM,CAACC,GAAG,CAACC,CAAC,IAAI;IACzC,MAAMW,WAAW,GAAG,IAAIV,IAAI,CAACD,CAAC,CAACE,IAAI,CAAC,CAACC,OAAO,CAAC,CAAC;IAC9C,MAAMS,KAAK,GAAG,CAACD,WAAW,GAAGP,YAAY,IAAIK,aAAa,CAAC,CAAC;IAC5D,OAAOG,KAAK,GAAGhB,cAAc;EAC/B,CAAC,CAAC;;EAEF;EACA,MAAMiB,cAAc,GAAG,CAAC,GAAGH,aAAa,CAAC;EACzC,KAAK,IAAII,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGD,cAAc,CAACE,MAAM,EAAED,CAAC,EAAE,EAAE;IAC9C,MAAME,IAAI,GAAGH,cAAc,CAACC,CAAC,CAAC,GAAGD,cAAc,CAACC,CAAC,GAAG,CAAC,CAAC;IACtD,IAAIE,IAAI,GAAG,EAAE,EAAE;MACb;MACAH,cAAc,CAACC,CAAC,CAAC,GAAGD,cAAc,CAACC,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE;IAChD;EACF;EAEA,oBACEG,OAAA;IAAKC,KAAK,EAAE;MAAEC,IAAI,EAAE,GAAG;MAAEC,MAAM,EAAE,QAAQ;MAAEC,QAAQ,EAAE;IAAW,CAAE;IAAAC,QAAA,eAEhEL,OAAA;MACEC,KAAK,EAAE;QACLG,QAAQ,EAAE,UAAU;QACpBE,KAAK,EAAE,KAAK;QACZC,eAAe,EAAE,MAAM;QACvBC,MAAM,EAAE7B,cAAc,GAAG,IAAI;QAC7B8B,UAAU,EAAE;MACd,CAAE;MAAAJ,QAAA,EAED7B,IAAI,CAACK,MAAM,CAACC,GAAG,CAAC,CAAC4B,KAAK,EAAEC,KAAK,KAAK;QACjC,MAAMC,GAAG,GAAGhB,cAAc,CAACe,KAAK,CAAC;QACjC,MAAME,OAAO,GAAG,GAAGpC,SAAS,IAAIkC,KAAK,EAAE;QACvC,oBACEX,OAAA;UAEEC,KAAK,EAAE;YACLG,QAAQ,EAAE,UAAU;YACpBU,GAAG,EAAEF,GAAG,GAAG,IAAI;YACfN,KAAK,EAAE;UACT,CAAE;UAAAD,QAAA,eAEFL,OAAA,CAACe,SAAS;YAACL,KAAK,EAAEA,KAAM;YAACG,OAAO,EAAEA,OAAQ;YAACnC,gBAAgB,EAAEA;UAAiB;YAAAsC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAC,GAP5ER,KAAK;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAQP,CAAC;MAEV,CAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACC,EAAA,GAxDQ7C,QAAQ;AAAA,IAAA6C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}