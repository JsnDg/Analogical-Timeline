{"ast":null,"code":"var _jsxFileName = \"/Users/jasonding/Desktop/Hypo-Eval/src/components/TreePlotVisualization.jsx\",\n  _s3 = $RefreshSig$();\n// ========== Part 1: 基础引入与主组件 ==========\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport * as d3 from 'd3';\nimport data_summary from './data_summary.json'; // 确保有 data_summary.json\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TreePlotVisualization = () => {\n  _s3();\n  var _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n  // ========== 各种 state 与 ref ==========\n  const [showTree, setShowTree] = useState(true); // true: Exploration View, false: Evaluation View\n  const [nodes, setNodes] = useState([]);\n  const [links, setLinks] = useState([]);\n  const [hoveredNode, setHoveredNode] = useState(null);\n  const [selectedNode, setSelectedNode] = useState(null);\n  const [userInput, setUserInput] = useState('');\n  const [analysisIntent, setAnalysisIntent] = useState('');\n  const [isAnalysisSubmitted, setIsAnalysisSubmitted] = useState(false);\n  const [isGenerating, setIsGenerating] = useState(false);\n  const [isEvaluating, setIsEvaluating] = useState(false);\n  const [error, setError] = useState(null);\n  const [hypothesesList, setHypothesesList] = useState([]);\n  // **新增**: 用于存放“拖拽后生成的 ghostNode + 悬浮确认按钮信息”\n  const [pendingChange, setPendingChange] = useState(null);\n\n  // X/Y 轴指标（仅在 Evaluation View 用）\n  const [xAxisMetric, setXAxisMetric] = useState('feasibilityScore');\n  const [yAxisMetric, setYAxisMetric] = useState('noveltyScore');\n\n  // 用于给节点自动生成唯一 ID\n  const idCounterRef = useRef(0);\n  const generateUniqueId = () => {\n    idCounterRef.current += 1;\n    return `node-${idCounterRef.current}`;\n  };\n\n  // SVG 容器\n  const svgRef = useRef(null);\n\n  // 节点配色映射\n  const colorMap = {\n    root: '#4C84FF',\n    simple: '#45B649',\n    complex: '#FF6B6B'\n  };\n\n  // ========== Part 2: 评估逻辑 ==========\n\n  // ============ Evaluate Hypotheses ============\n  const evaluateHypotheses = async hypotheses => {\n    setIsEvaluating(true);\n    setError(null);\n    try {\n      const prompt = `For the following hypotheses, rank **each one individually** based on novelty, feasibility, and impact.\n      Novelty is judged by whether the hypotheses challenges traditional assumptions, propose innovative approaches, or explore under-researched areas will score higher in novelty. Less novel hypotheses include those that replicate well-known findings or extend existing studies with minimal new insights.\n      Feasibility is judged by whether the hypothesis can be represented by the dataset described in the data summary.\n      Impact assesses how the hypotheses addresses critical or emerging issues, influence policy or decision-making, or provide insights into major societal, economic, or scientific challenges. Hypotheses with lower impact are narrower in scope or contribute incremental knowledge without broader implications.\n      For each hypothesis, provide its rank (1 being the highest) in terms of novelty, feasibility, and impact.\n      Also, provide the ranking reasons for each hypothesis.\n      **Ensure that you include all hypotheses in your evaluation and do not combine or omit any.**\n      **No two hypotheses should have the same rank in any category. Assign unique ranks to each hypothesis in each category to avoid overlaps.**\n      Return the results in JSON format as an array of objects with the following fields:\n      - id\n      - novelty_rank\n      - feasibility_rank\n      - impact_rank\n      - ranking_reason\n\nHere are the hypotheses:\n${JSON.stringify(hypotheses)}\n\nData summary: ${JSON.stringify(data_summary)}\n\nPlease provide only the JSON array in your response.`;\n      const apiKey = process.env.REACT_APP_OPENAI_API_KEY;\n      const response = await fetch('https://api.openai.com/v1/chat/completions', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${apiKey}`\n        },\n        body: JSON.stringify({\n          model: 'gpt-4o',\n          messages: [{\n            role: 'system',\n            content: 'You are a data scientist.'\n          }, {\n            role: 'user',\n            content: prompt\n          }],\n          max_tokens: 2000\n        })\n      });\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.error.message);\n      }\n      const data = await response.json();\n      const assistantReply = data.choices[0].message.content.trim();\n\n      // 从返回里尝试提取 JSON\n      let evaluatedHypotheses;\n      try {\n        const jsonMatch = assistantReply.match(/\\[.*\\]/s);\n        if (jsonMatch) {\n          evaluatedHypotheses = JSON.parse(jsonMatch[0]);\n        } else {\n          evaluatedHypotheses = JSON.parse(assistantReply);\n        }\n      } catch (parseError) {\n        throw new Error(\"Failed to parse evaluated hypotheses JSON from the assistant's reply.\");\n      }\n\n      // 判断返回数量是否与提交的一致\n      if (evaluatedHypotheses.length !== hypotheses.length) {\n        throw new Error(`Mismatch in number of evaluated hypotheses. Expected ${hypotheses.length}, but got ${evaluatedHypotheses.length}.`);\n      }\n\n      // rank -> score 的映射\n      const rankToScore = (rank, total) => {\n        const maxScore = 90;\n        const minScore = 10;\n        const scoreRange = maxScore - minScore;\n        // 分数从高到低\n        const score = maxScore - (rank - 1) * scoreRange / (total - 1);\n        return Math.round(score);\n      };\n\n      // 更新到前端的 nodes\n      setNodes(prevNodes => prevNodes.map(node => {\n        const evalHypo = evaluatedHypotheses.find(h => h.id === node.id);\n        if (evalHypo) {\n          const totalHypotheses = hypotheses.length;\n          const noveltyScore = rankToScore(evalHypo.novelty_rank, totalHypotheses);\n          const feasibilityScore = rankToScore(evalHypo.feasibility_rank, totalHypotheses);\n          const impactScore = rankToScore(evalHypo.impact_rank, totalHypotheses);\n          return {\n            ...node,\n            noveltyScore,\n            feasibilityScore,\n            impactScore,\n            rankingReason: evalHypo.ranking_reason\n          };\n        }\n        return node;\n      }));\n    } catch (err) {\n      console.error('Error evaluating hypotheses:', err);\n      setError(err.message);\n    } finally {\n      setIsEvaluating(false);\n    }\n  };\n\n  // ========== Part 3: 初始意图提交 ==========\n\n  // ============ handleAnalysisIntentSubmit ============\n  const handleAnalysisIntentSubmit = async e => {\n    e.preventDefault();\n    if (!analysisIntent.trim()) return;\n    setIsGenerating(true);\n    setError(null);\n    try {\n      const prompt = `Based on the following analysis intent and data, generate exactly three initial hypotheses. For each hypothesis, provide a two-word title and a detailed content. Return the hypotheses in JSON format as an array of objects with \"title\" and \"content\" fields.\n\nAnalysis Intent: ${analysisIntent}\n\nData: ${JSON.stringify(data_summary)}\n\nPlease provide only the JSON array in your response.`;\n      const apiKey = process.env.REACT_APP_OPENAI_API_KEY;\n      const response = await fetch('https://api.openai.com/v1/chat/completions', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${apiKey}`\n        },\n        body: JSON.stringify({\n          model: 'gpt-4o',\n          messages: [{\n            role: 'system',\n            content: 'You are a data scientist.'\n          }, {\n            role: 'user',\n            content: prompt\n          }],\n          max_tokens: 500\n        })\n      });\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.error.message);\n      }\n      const data = await response.json();\n      const assistantReply = data.choices[0].message.content.trim();\n\n      // 提取返回的三条假设\n      let hypothesesArray;\n      try {\n        const jsonMatch = assistantReply.match(/\\[.*\\]/s);\n        if (jsonMatch) {\n          hypothesesArray = JSON.parse(jsonMatch[0]);\n        } else {\n          hypothesesArray = JSON.parse(assistantReply);\n        }\n      } catch (parseError) {\n        throw new Error(\"Failed to parse hypotheses JSON from the assistant's reply.\");\n      }\n      const hypotheses = hypothesesArray.slice(0, 3);\n      const hypothesesWithId = hypotheses.map(hyp => {\n        const id = generateUniqueId();\n        return {\n          id,\n          ...hyp\n        };\n      });\n\n      // 更新全局 hypothesesList\n      const updatedHypothesesList = [...hypothesesList, ...hypothesesWithId];\n      setHypothesesList(updatedHypothesesList);\n\n      // 建立 Root node\n      const rootNode = {\n        id: 'root',\n        level: 0,\n        title: analysisIntent,\n        content: analysisIntent,\n        type: 'root',\n        x: 0,\n        y: 0\n      };\n\n      // 生成子节点\n      const childSpacing = 200;\n      const totalWidth = (hypotheses.length - 1) * childSpacing;\n      const startX = rootNode.x - totalWidth / 2;\n      const childNodes = hypothesesWithId.map((hyp, i) => ({\n        id: hyp.id,\n        level: 1,\n        title: hyp.title.trim(),\n        content: hyp.content.trim(),\n        type: 'complex',\n        x: startX + i * childSpacing,\n        y: rootNode.y + 150\n      }));\n\n      // 更新到前端\n      const newNodes = [rootNode, ...childNodes];\n      const newLinks = childNodes.map(nd => ({\n        source: rootNode.id,\n        target: nd.id\n      }));\n      setNodes(newNodes);\n      setLinks(newLinks);\n      setAnalysisIntent('');\n      setIsAnalysisSubmitted(true);\n\n      // 立即评估\n      await evaluateHypotheses(updatedHypothesesList);\n      setIsGenerating(false);\n    } catch (err) {\n      console.error('Error generating initial hypotheses:', err);\n      setError(err.message);\n      setIsGenerating(false);\n    }\n  };\n\n  // ========== Part 4: 为选中节点生成子节点 ==========\n\n  // ============ generateChildNodes ============\n  const generateChildNodes = async () => {\n    if (!selectedNode) return;\n    setIsGenerating(true);\n    setError(null);\n    try {\n      const prompt = `Based on the following node content and data, generate exactly three new hypotheses. For each hypothesis, provide a two-word title and a detailed content. Return the hypotheses in JSON format as an array of objects with \"title\" and \"content\" fields.\n\nNode Content: ${selectedNode.content}\n\nData: ${JSON.stringify(data_summary)}\n\nAdditional Context: ${userInput}\n\nPlease provide only the JSON array in your response.`;\n      const apiKey = process.env.REACT_APP_OPENAI_API_KEY;\n      const response = await fetch('https://api.openai.com/v1/chat/completions', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${apiKey}`\n        },\n        body: JSON.stringify({\n          model: 'gpt-4o',\n          messages: [{\n            role: 'system',\n            content: 'You are a data scientist.'\n          }, {\n            role: 'user',\n            content: prompt\n          }],\n          max_tokens: 500\n        })\n      });\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.error.message);\n      }\n      const data = await response.json();\n      const assistantReply = data.choices[0].message.content.trim();\n\n      // 解析出新子节点\n      let hypothesesArray;\n      try {\n        const jsonMatch = assistantReply.match(/\\[.*\\]/s);\n        if (jsonMatch) {\n          hypothesesArray = JSON.parse(jsonMatch[0]);\n        } else {\n          hypothesesArray = JSON.parse(assistantReply);\n        }\n      } catch (parseError) {\n        throw new Error(\"Failed to parse hypotheses JSON from the assistant's reply.\");\n      }\n      const hypotheses = hypothesesArray.slice(0, 3);\n      const newHypothesesWithId = hypotheses.map(hyp => {\n        const id = generateUniqueId();\n        return {\n          id,\n          ...hyp\n        };\n      });\n\n      // 更新全局 hypothesesList\n      const updatedHypothesesList = [...hypothesesList, ...newHypothesesWithId];\n      setHypothesesList(updatedHypothesesList);\n\n      // 布局\n      const childSpacing = 200;\n      const totalWidth = (hypotheses.length - 1) * childSpacing;\n      const startX = selectedNode.x - totalWidth / 2;\n\n      // 新的节点\n      const newNodes = newHypothesesWithId.map((hyp, i) => ({\n        id: hyp.id,\n        level: selectedNode.level + 1,\n        title: hyp.title.trim(),\n        content: hyp.content.trim(),\n        type: 'complex',\n        x: startX + i * childSpacing + Math.random() * 20 - 10,\n        y: selectedNode.y + 150 + Math.random() * 20 - 10\n      }));\n\n      // 更新节点与连线\n      const newLinks = newNodes.map(nd => ({\n        source: selectedNode.id,\n        target: nd.id\n      }));\n      setNodes(prev => [...prev, ...newNodes]);\n      setLinks(prev => [...prev, ...newLinks]);\n\n      // 对新的列表进行评估\n      await evaluateHypotheses(updatedHypothesesList);\n      setIsGenerating(false);\n      setUserInput('');\n    } catch (err) {\n      console.error('Error generating hypotheses:', err);\n      setError(err.message);\n      setIsGenerating(false);\n    }\n  };\n\n  // ========== Part 5: 修改节点逻辑 (modifyHypothesisBasedOnModifications) ==========\n\n  // ============ modifyHypothesisBasedOnModifications ============\n  const modifyHypothesisBasedOnModifications = async (originalNode, ghostNode, modifications) => {\n    setError(null);\n    try {\n      setIsGenerating(true);\n      const modificationsDescriptions = modifications.map(mod => {\n        const metricName = mod.metric === 'noveltyScore' ? 'Novelty' : mod.metric === 'feasibilityScore' ? 'Feasibility' : 'Impact';\n        const direction = mod.direction === 'increase' ? 'increase' : 'decrease';\n        return `${direction} its ${metricName}`;\n      });\n      const modificationsText = modificationsDescriptions.join(' and ');\n      const prompt = `Modify the following hypothesis to significantly ${modificationsText}, while keeping its main idea intact. Provide the modified hypothesis content.\n\nOriginal Hypothesis: ${originalNode.content}\n\nData Summary: ${JSON.stringify(data_summary)}\n\nPlease provide only the modified hypothesis content in your response.`;\n      const apiKey = process.env.REACT_APP_OPENAI_API_KEY;\n      const response = await fetch('https://api.openai.com/v1/chat/completions', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${apiKey}`\n        },\n        body: JSON.stringify({\n          model: 'gpt-4o',\n          messages: [{\n            role: 'system',\n            content: 'You are a data scientist.'\n          }, {\n            role: 'user',\n            content: prompt\n          }],\n          max_tokens: 500\n        })\n      });\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.error.message);\n      }\n      const data = await response.json();\n      const assistantReply = data.choices[0].message.content.trim();\n\n      // 将 ghostNode 更新为新内容\n      ghostNode.content = assistantReply;\n      ghostNode.isModified = true;\n      ghostNode.previousState = originalNode;\n      ghostNode.isGhost = false;\n      const newHypothesis = {\n        id: ghostNode.id,\n        title: ghostNode.title,\n        content: assistantReply\n      };\n      setHypothesesList(prevList => [...prevList, newHypothesis]);\n      setNodes(prevNodes => prevNodes.map(n => n.id === ghostNode.id ? ghostNode : n));\n      setIsGenerating(false);\n      setIsEvaluating(true);\n\n      // 最后对新的节点进行评估\n      await evaluateHypotheses([...hypothesesList, newHypothesis]);\n    } catch (err) {\n      console.error('Error modifying hypothesis:', err);\n      setError(err.message);\n      setIsGenerating(false);\n    } finally {\n      setIsEvaluating(false);\n    }\n  };\n\n  // ========== Part 6: 节点点击/悬浮事件 ==========\n\n  // 点击节点\n  const handleNodeClick = node => {\n    setSelectedNode(prev => (prev === null || prev === void 0 ? void 0 : prev.id) === node.id ? null : node);\n  };\n\n  // Hover 节点\n  const handleNodeHover = (event, d) => {\n    setHoveredNode(d);\n    d3.select(event.currentTarget).raise();\n  };\n\n  // 离开节点\n  const handleNodeLeave = () => {\n    setHoveredNode(null);\n  };\n\n  // ========== Part 7: useEffect 中的 D3 渲染 ==========\n\n  // ============ useEffect for D3 Rendering ============\n  useEffect(() => {\n    if (!svgRef.current) return;\n    const width = 800;\n    const height = 600;\n\n    // 清空 SVG\n    d3.select(svgRef.current).selectAll('*').remove();\n    if (showTree) {\n      // ------------------- Exploration (Tree) View --------------------\n      const svg = d3.select(svgRef.current).attr('width', width).attr('height', height);\n\n      // 背景\n      svg.append('rect').attr('x', 2).attr('y', 2).attr('width', width - 4).attr('height', height - 4).attr('rx', 8).attr('ry', 8).style('fill', '#fff').style('stroke', '#e5e7eb').style('stroke-width', 1).style('filter', 'drop-shadow(0 4px 6px rgba(0,0,0,0.1))');\n\n      // 顶部示例\n      svg.append('text').attr('x', 24).attr('y', 50).style('font-size', '2rem').style('font-weight', 600).style('fill', '#2563EB').text('Income Inequality');\n\n      // 树容器\n      const g = svg.append('g').attr('transform', `translate(300, 130)`);\n\n      // 连线\n      links.forEach(link => {\n        const source = nodes.find(n => n.id === link.source);\n        const target = nodes.find(n => n.id === link.target);\n        if (source && target) {\n          g.append('path').attr('d', `M ${source.x},${source.y} C ${source.x},${(source.y + target.y) / 2} \n                 ${target.x},${(source.y + target.y) / 2} \n                 ${target.x},${target.y}`).style('fill', 'none').style('stroke', '#ccc').style('stroke-width', 2);\n        }\n      });\n\n      // 节点\n      const nodeGroups = g.selectAll('.node').data(nodes).enter().append('g').attr('class', 'node').attr('transform', d => `translate(${d.x},${d.y})`);\n      nodeGroups.append('text').attr('dy', 35).attr('text-anchor', 'middle').text(d => d.title).attr('pointer-events', 'none');\n      nodeGroups.append('circle').attr('r', 25).style('fill', d => d.isNewlyGenerated ? '#FFD700' : colorMap[d.type]).style('opacity', d => d.isGhost ? 0.5 : 1).style('stroke', d => {\n        if ((selectedNode === null || selectedNode === void 0 ? void 0 : selectedNode.id) === d.id) return '#000';else if ((hoveredNode === null || hoveredNode === void 0 ? void 0 : hoveredNode.id) === d.id) return '#555';else return '#fff';\n      }).style('stroke-width', d => {\n        if ((selectedNode === null || selectedNode === void 0 ? void 0 : selectedNode.id) === d.id) return 4;else if ((hoveredNode === null || hoveredNode === void 0 ? void 0 : hoveredNode.id) === d.id) return 3;else return 2;\n      }).style('cursor', 'pointer').on('mouseenter', handleNodeHover).on('mouseleave', handleNodeLeave).on('click', (event, d) => handleNodeClick(d));\n\n      // 底部颜色标识\n      const legendG = svg.append('g').attr('transform', `translate(40, ${height - 40})`);\n      // (示例略...)\n    } else {\n      // ------------------- Evaluation (Scatter) View --------------------\n      const svg = d3.select(svgRef.current).attr('width', width).attr('height', height);\n\n      // 背景卡片\n      svg.append('rect').attr('x', 2).attr('y', 2).attr('width', width - 4).attr('height', height - 4).attr('rx', 8).attr('ry', 8).style('fill', '#fff').style('stroke', '#e5e7eb').style('stroke-width', 1).style('filter', 'drop-shadow(0 4px 6px rgba(0,0,0,0.1))');\n\n      // 顶部示例文字\n      svg.append('text').attr('x', 24).attr('y', 40).style('font-size', '1rem').style('font-weight', 500).style('fill', '#111827').text('Income Inequality');\n      svg.append('text').attr('x', 24).attr('y', 70).style('font-size', '1.5rem').style('font-weight', 1000).style('fill', '#1D4ED8').text('Gender Disparity');\n\n      // X/Y 选择器 (ForeignObject) 略...\n\n      // 画坐标轴 + 网格\n      const margin = {\n        top: 100,\n        right: 50,\n        bottom: 80,\n        left: 50\n      };\n      const chartWidth = width - margin.left - margin.right;\n      const chartHeight = height - margin.top - margin.bottom;\n      const g = svg.append('g').attr('transform', `translate(${margin.left}, ${margin.top})`);\n      const xScale = d3.scaleLinear().domain([0, 100]).range([0, chartWidth]);\n      const yScale = d3.scaleLinear().domain([0, 100]).range([chartHeight, 0]);\n\n      // 绘制坐标轴与网格线 (略)...\n\n      // 筛选已有打分的节点\n      const filteredNodes = nodes.filter(d => d[xAxisMetric] !== undefined && d[yAxisMetric] !== undefined);\n\n      // 只显示被修改后的连线\n      const evaluationLinks = links.filter(link => {\n        const sourceNode = nodes.find(n => n.id === link.source);\n        const targetNode = nodes.find(n => n.id === link.target);\n        return sourceNode && targetNode && targetNode.isModified;\n      });\n\n      // 连线\n      evaluationLinks.forEach(link => {\n        const source = nodes.find(n => n.id === link.source);\n        const target = nodes.find(n => n.id === link.target);\n        // 画线\n      });\n\n      // 画节点\n      const nodeGroups = g.selectAll('.node-group').data(filteredNodes).enter().append('g').attr('class', 'node-group').attr('transform', d => `translate(${xScale(d[xAxisMetric])}, ${yScale(d[yAxisMetric])})`).style('cursor', 'pointer').on('mouseenter', handleNodeHover).on('mouseleave', handleNodeLeave).on('click', (event, d) => handleNodeClick(d))\n      // 拖拽逻辑\n      .call(d3.drag().on('start', function (event, d) {\n        if (isGenerating || isEvaluating) return;\n        d3.select(this).raise();\n      }).on('drag', function (event, d) {\n        if (isGenerating || isEvaluating) return;\n        const [xx, yy] = d3.pointer(event, g.node());\n        // 实时更新UI\n        d3.select(this).attr('transform', `translate(${xx}, ${yy})`);\n      }).on('end', (event, d) => {\n        if (isGenerating || isEvaluating) return;\n        // 计算新的坐标值\n        const [xx, yy] = d3.pointer(event, g.node());\n        const newXMetricValue = xScale.invert(xx);\n        const newYMetricValue = yScale.invert(yy);\n        const oldXMetricValue = d[xAxisMetric];\n        const oldYMetricValue = d[yAxisMetric];\n        const deltaX = newXMetricValue - oldXMetricValue;\n        const deltaY = newYMetricValue - oldYMetricValue;\n\n        // 日志输出 (略)...\n\n        let modifications = [];\n        // 根据拖拽差值大小，确定要提高/降低哪个指标\n        if (Math.abs(deltaX) > 5) {\n          modifications.push({\n            metric: xAxisMetric,\n            direction: deltaX > 0 ? 'increase' : 'decrease'\n          });\n        }\n        if (Math.abs(deltaY) > 5) {\n          modifications.push({\n            metric: yAxisMetric,\n            direction: deltaY > 0 ? 'increase' : 'decrease'\n          });\n        }\n\n        // 复原UI (拖拽结束后位置回到原处)\n        d3.select(this).attr('transform', `translate(${xScale(d[xAxisMetric])}, ${yScale(d[yAxisMetric])})`);\n\n        // 如果 metrics 超过一定阈值 => 生成 ghostNode\n        if (modifications.length > 0) {\n          const ghostNodeId = generateUniqueId();\n          const ghostNode = {\n            ...d,\n            id: ghostNodeId,\n            x: d.x,\n            y: d.y,\n            [xAxisMetric]: newXMetricValue,\n            [yAxisMetric]: newYMetricValue,\n            isGhost: true,\n            isNewlyGenerated: true\n          };\n\n          // 把 ghostNode 加入图中\n          setNodes(prev => [...prev, ghostNode]);\n          setLinks(prev => [...prev, {\n            source: d.id,\n            target: ghostNodeId\n          }]);\n\n          // 直接在这里调用修改函数 (也可先弹窗确认)\n          modifyHypothesisBasedOnModifications(d, ghostNode, modifications);\n        }\n      }));\n      nodeGroups.append('circle').attr('r', 8).style('fill', d => d.isNewlyGenerated ? '#FFD700' : colorMap[d.type]).style('opacity', d => d.isGhost ? 0.5 : 1).style('stroke', d => {\n        if ((selectedNode === null || selectedNode === void 0 ? void 0 : selectedNode.id) === d.id) return '#000';else if ((hoveredNode === null || hoveredNode === void 0 ? void 0 : hoveredNode.id) === d.id) return '#555';else return '#fff';\n      }).style('stroke-width', d => {\n        if ((selectedNode === null || selectedNode === void 0 ? void 0 : selectedNode.id) === d.id) return 4;else if ((hoveredNode === null || hoveredNode === void 0 ? void 0 : hoveredNode.id) === d.id) return 3;else return 2;\n      });\n    }\n  }, [showTree, nodes, links, selectedNode, hoveredNode, xAxisMetric, yAxisMetric, isGenerating, isEvaluating]);\n\n  // ========== Part 8: 右侧面板组件 ==========\n\n  // 1) 顶部切换 Tab\n  const TopNav = () => {\n    const explorationIcon = /*#__PURE__*/_jsxDEV(\"svg\", {\n      children: [\" \", \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 756,\n      columnNumber: 7\n    }, this);\n    const evaluationIcon = /*#__PURE__*/_jsxDEV(\"svg\", {\n      children: [\" \", \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 759,\n      columnNumber: 7\n    }, this);\n    const tabStyle = {/* ... */};\n    const explorationActiveStyle = showTree ? {\n      backgroundColor: '#fff',\n      color: '#141414'\n    } : {\n      backgroundColor: 'transparent',\n      color: '#A0AEC0'\n    };\n    const evaluationActiveStyle = !showTree ? {\n      backgroundColor: '#fff',\n      color: '#141414'\n    } : {\n      backgroundColor: 'transparent',\n      color: '#A0AEC0'\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        alignItems: 'center',\n        backgroundColor: '#0F172A',\n        padding: '10px 20px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          ...tabStyle,\n          ...explorationActiveStyle,\n          marginRight: '6px'\n        },\n        onClick: () => setShowTree(true),\n        children: [explorationIcon, \"Exploration View\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 772,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          ...tabStyle,\n          ...evaluationActiveStyle\n        },\n        onClick: () => setShowTree(false),\n        children: [evaluationIcon, \"Evaluation View\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 777,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 771,\n      columnNumber: 7\n    }, this);\n  };\n\n  // 2) 右侧主面板 Dashboard\n  const Dashboard = ({\n    node\n  }) => {\n    if (!node) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          padding: '24px',\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'center',\n          height: '160px',\n          color: '#9ca3af'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Click on a node to view details\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 799,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 789,\n        columnNumber: 9\n      }, this);\n    }\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        border: '1px solid #E5E7EB',\n        borderRadius: '8px',\n        backgroundColor: '#FFFFFF',\n        padding: '16px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: node.title || 'Hypothesis Title'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 813,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          position: 'relative',\n          marginBottom: '16px'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            left: 9.15,\n            top: 3.83,\n            position: 'absolute',\n            color: '#A21919',\n            fontSize: 11\n          },\n          children: \"Complex\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 820,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 818,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(IVDVCard, {\n        node: node\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 834,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ThreeFactorsCard, {\n        node: node\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 837,\n        columnNumber: 9\n      }, this), showTree ? /*#__PURE__*/_jsxDEV(ContextAndGenerateCard, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 841,\n        columnNumber: 11\n      }, this) :\n      /*#__PURE__*/\n      // Evaluation 下提供 “得分对比”\n      _jsxDEV(ScoreComparison, {\n        node: node\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 844,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 805,\n      columnNumber: 7\n    }, this);\n  };\n\n  // 3) IV/DV 组件\n  const IVDVCard = ({\n    node\n  }) => {\n    _s();\n    const [isAfterIVDV, setIsAfterIVDV] = useState(true);\n\n    // 开关按钮\n    const SwitchButton = () => /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 856,\n      columnNumber: 7\n    }, this);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(SwitchButton, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 863,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"IV: Gender, Race\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 866,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"DV: Income\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 867,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 865,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"Relationship / Hypothesis (\", isAfterIVDV ? 'After' : 'Before', \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 871,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: node.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 872,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 870,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 862,\n      columnNumber: 7\n    }, this);\n  };\n\n  // 4) 三要素卡片\n  _s(IVDVCard, \"esM7by/InCUKxTVLf0KFNh9wBUo=\");\n  const ThreeFactorsCard = ({\n    node\n  }) => {\n    _s2();\n    const [isAfterFactors, setIsAfterFactors] = useState(true);\n    const SwitchButton = () => /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 883,\n      columnNumber: 7\n    }, this);\n    const noveltyText = node.noveltyText || '...';\n    const feasibilityText = node.feasibilityText || '...';\n    const impactText = node.impactText || '...';\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(SwitchButton, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 894,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 893,\n      columnNumber: 7\n    }, this);\n  };\n\n  // 5) Exploration 下方生成新节点卡片\n  _s2(ThreeFactorsCard, \"yAt/Ws9TJgw5tkFkv+J4K4Eat20=\");\n  const ContextAndGenerateCard = () => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Add context for new hypotheses (option)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 905,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        rows: 2,\n        value: userInput,\n        onChange: e => setUserInput(e.target.value)\n        /* ... */\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 906,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: generateChildNodes,\n        disabled: !selectedNode || isGenerating || isEvaluating || !isAnalysisSubmitted\n        /* ... */,\n        children: \"Generate New Hypotheses\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 912,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 904,\n      columnNumber: 7\n    }, this);\n  };\n\n  // 6) Evaluation 下方得分对比\n  const ScoreComparison = ({\n    node\n  }) => {\n    var _node$previousState$n, _node$noveltyScore, _node$previousState$f, _node$feasibilityScor, _node$previousState$i, _node$impactScore, _node$rankingReason;\n    const hasBefore = !!node.previousState;\n    const noveltyBefore = hasBefore ? (_node$previousState$n = node.previousState.noveltyScore) !== null && _node$previousState$n !== void 0 ? _node$previousState$n : 'N/A' : null;\n    const noveltyAfter = (_node$noveltyScore = node.noveltyScore) !== null && _node$noveltyScore !== void 0 ? _node$noveltyScore : 'N/A';\n    const feasibilityBefore = hasBefore ? (_node$previousState$f = node.previousState.feasibilityScore) !== null && _node$previousState$f !== void 0 ? _node$previousState$f : 'N/A' : null;\n    const feasibilityAfter = (_node$feasibilityScor = node.feasibilityScore) !== null && _node$feasibilityScor !== void 0 ? _node$feasibilityScor : 'N/A';\n    const impactBefore = hasBefore ? (_node$previousState$i = node.previousState.impactScore) !== null && _node$previousState$i !== void 0 ? _node$previousState$i : 'N/A' : null;\n    const impactAfter = (_node$impactScore = node.impactScore) !== null && _node$impactScore !== void 0 ? _node$impactScore : 'N/A';\n    const reason = (_node$rankingReason = node.rankingReason) !== null && _node$rankingReason !== void 0 ? _node$rankingReason : '(No reason provided)';\n\n    // 比较箭头\n    const getArrowDiv = (beforeVal, afterVal) => {\n      // ... 判断变化并返回不同图标\n    };\n    const renderMetricCard = (label, color, beforeVal, afterVal) => {\n      // ... 渲染单个分数对比框\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [renderMetricCard('Novelty', '#DC2626', noveltyBefore, noveltyAfter), renderMetricCard('Feasibility', '#D97706', feasibilityBefore, feasibilityAfter), renderMetricCard('Impact', '#2563EB', impactBefore, impactAfter)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 944,\n      columnNumber: 7\n    }, this);\n  };\n\n  // ========== Part 9: 最终返回（整合） ==========\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      fontFamily: 'Arial, sans-serif',\n      position: 'relative'\n    },\n    children: [/*#__PURE__*/_jsxDEV(TopNav, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 956,\n      columnNumber: 7\n    }, this), showTree && !isAnalysisSubmitted && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        backgroundColor: '#1f2937',\n        display: 'flex',\n        alignItems: 'center',\n        padding: '10px 20px'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleAnalysisIntentSubmit,\n        style: {\n          display: 'flex',\n          alignItems: 'center'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: analysisIntent,\n          onChange: e => setAnalysisIntent(e.target.value),\n          placeholder: \"Enter analysis intent\"\n          /* ... */\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 961,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          disabled: isGenerating || isEvaluating\n          /* ... */,\n          children: isEvaluating ? 'Evaluating...' : isGenerating ? 'Generating...' : 'Submit'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 968,\n          columnNumber: 13\n        }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginLeft: '16px',\n            color: '#dc2626',\n            fontSize: '0.875rem'\n          },\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 976,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 960,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 959,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        padding: '20px',\n        maxWidth: '1600px',\n        margin: '0 auto'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          flexBasis: '60%',\n          marginRight: '20px'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"svg\", {\n          ref: svgRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 987,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 986,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          flexBasis: '40%'\n        },\n        children: [(isGenerating || isEvaluating) && /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            textAlign: 'center',\n            marginBottom: '10px',\n            color: '#4C84FF'\n          },\n          children: isGenerating ? 'Generating...' : 'Evaluating...'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 993,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Dashboard, {\n          node: nodes.find(n => n.id === ((hoveredNode === null || hoveredNode === void 0 ? void 0 : hoveredNode.id) || (selectedNode === null || selectedNode === void 0 ? void 0 : selectedNode.id)))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 998,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 991,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 984,\n      columnNumber: 7\n    }, this), pendingChange && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginBottom: '4px',\n          fontSize: '0.875rem',\n          color: '#374151'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Confirm change?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1006,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1005,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        /* confirm */\n        onClick: () => {\n          modifyHypothesisBasedOnModifications(pendingChange.originalNode, pendingChange.ghostNode, pendingChange.modifications);\n          setPendingChange(null);\n        },\n        children: \"Confirm\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1008,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        /* cancel */\n        onClick: () => {\n          setNodes(prev => prev.filter(nd => nd.id !== pendingChange.ghostNode.id));\n          setLinks(prev => prev.filter(lk => lk.target !== pendingChange.ghostNode.id));\n          setPendingChange(null);\n        },\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1022,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1004,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 955,\n    columnNumber: 5\n  }, this);\n};\n_s3(TreePlotVisualization, \"CDrlp0Dkgv03WYiCDA4PjjyZOcA=\");\n_c = TreePlotVisualization;\nexport default TreePlotVisualization;\nvar _c;\n$RefreshReg$(_c, \"TreePlotVisualization\");","map":{"version":3,"names":["React","useState","useEffect","useRef","d3","data_summary","jsxDEV","_jsxDEV","TreePlotVisualization","_s3","_s","$RefreshSig$","_s2","showTree","setShowTree","nodes","setNodes","links","setLinks","hoveredNode","setHoveredNode","selectedNode","setSelectedNode","userInput","setUserInput","analysisIntent","setAnalysisIntent","isAnalysisSubmitted","setIsAnalysisSubmitted","isGenerating","setIsGenerating","isEvaluating","setIsEvaluating","error","setError","hypothesesList","setHypothesesList","pendingChange","setPendingChange","xAxisMetric","setXAxisMetric","yAxisMetric","setYAxisMetric","idCounterRef","generateUniqueId","current","svgRef","colorMap","root","simple","complex","evaluateHypotheses","hypotheses","prompt","JSON","stringify","apiKey","process","env","REACT_APP_OPENAI_API_KEY","response","fetch","method","headers","Authorization","body","model","messages","role","content","max_tokens","ok","errorData","json","Error","message","data","assistantReply","choices","trim","evaluatedHypotheses","jsonMatch","match","parse","parseError","length","rankToScore","rank","total","maxScore","minScore","scoreRange","score","Math","round","prevNodes","map","node","evalHypo","find","h","id","totalHypotheses","noveltyScore","novelty_rank","feasibilityScore","feasibility_rank","impactScore","impact_rank","rankingReason","ranking_reason","err","console","handleAnalysisIntentSubmit","e","preventDefault","hypothesesArray","slice","hypothesesWithId","hyp","updatedHypothesesList","rootNode","level","title","type","x","y","childSpacing","totalWidth","startX","childNodes","i","newNodes","newLinks","nd","source","target","generateChildNodes","newHypothesesWithId","random","prev","modifyHypothesisBasedOnModifications","originalNode","ghostNode","modifications","modificationsDescriptions","mod","metricName","metric","direction","modificationsText","join","isModified","previousState","isGhost","newHypothesis","prevList","n","handleNodeClick","handleNodeHover","event","d","select","currentTarget","raise","handleNodeLeave","width","height","selectAll","remove","svg","attr","append","style","text","g","forEach","link","nodeGroups","enter","isNewlyGenerated","on","legendG","margin","top","right","bottom","left","chartWidth","chartHeight","xScale","scaleLinear","domain","range","yScale","filteredNodes","filter","undefined","evaluationLinks","sourceNode","targetNode","call","drag","xx","yy","pointer","newXMetricValue","invert","newYMetricValue","oldXMetricValue","oldYMetricValue","deltaX","deltaY","abs","push","ghostNodeId","TopNav","explorationIcon","children","fileName","_jsxFileName","lineNumber","columnNumber","evaluationIcon","tabStyle","explorationActiveStyle","backgroundColor","color","evaluationActiveStyle","display","alignItems","padding","marginRight","onClick","Dashboard","justifyContent","border","borderRadius","position","marginBottom","fontSize","IVDVCard","ThreeFactorsCard","ContextAndGenerateCard","ScoreComparison","isAfterIVDV","setIsAfterIVDV","SwitchButton","isAfterFactors","setIsAfterFactors","noveltyText","feasibilityText","impactText","rows","value","onChange","disabled","_node$previousState$n","_node$noveltyScore","_node$previousState$f","_node$feasibilityScor","_node$previousState$i","_node$impactScore","_node$rankingReason","hasBefore","noveltyBefore","noveltyAfter","feasibilityBefore","feasibilityAfter","impactBefore","impactAfter","reason","getArrowDiv","beforeVal","afterVal","renderMetricCard","label","fontFamily","onSubmit","placeholder","marginLeft","maxWidth","flexBasis","ref","textAlign","lk","_c","$RefreshReg$"],"sources":["/Users/jasonding/Desktop/Hypo-Eval/src/components/TreePlotVisualization.jsx"],"sourcesContent":["// ========== Part 1: 基础引入与主组件 ==========\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport * as d3 from 'd3';\nimport data_summary from './data_summary.json'; // 确保有 data_summary.json\n\nconst TreePlotVisualization = () => {\n  // ========== 各种 state 与 ref ==========\n  const [showTree, setShowTree] = useState(true); // true: Exploration View, false: Evaluation View\n  const [nodes, setNodes] = useState([]);\n  const [links, setLinks] = useState([]);\n  const [hoveredNode, setHoveredNode] = useState(null);\n  const [selectedNode, setSelectedNode] = useState(null);\n  const [userInput, setUserInput] = useState('');\n  const [analysisIntent, setAnalysisIntent] = useState('');\n  const [isAnalysisSubmitted, setIsAnalysisSubmitted] = useState(false);\n  const [isGenerating, setIsGenerating] = useState(false);\n  const [isEvaluating, setIsEvaluating] = useState(false);\n  const [error, setError] = useState(null);\n  const [hypothesesList, setHypothesesList] = useState([]);\n  // **新增**: 用于存放“拖拽后生成的 ghostNode + 悬浮确认按钮信息”\n  const [pendingChange, setPendingChange] = useState(null);\n\n  // X/Y 轴指标（仅在 Evaluation View 用）\n  const [xAxisMetric, setXAxisMetric] = useState('feasibilityScore');\n  const [yAxisMetric, setYAxisMetric] = useState('noveltyScore');\n\n  // 用于给节点自动生成唯一 ID\n  const idCounterRef = useRef(0);\n  const generateUniqueId = () => {\n    idCounterRef.current += 1;\n    return `node-${idCounterRef.current}`;\n  };\n\n  // SVG 容器\n  const svgRef = useRef(null);\n\n  // 节点配色映射\n  const colorMap = {\n    root: '#4C84FF',\n    simple: '#45B649',\n    complex: '#FF6B6B',\n  };\n\n  // ========== Part 2: 评估逻辑 ==========\n\n  // ============ Evaluate Hypotheses ============\n  const evaluateHypotheses = async (hypotheses) => {\n    setIsEvaluating(true);\n    setError(null);\n\n    try {\n      const prompt = `For the following hypotheses, rank **each one individually** based on novelty, feasibility, and impact.\n      Novelty is judged by whether the hypotheses challenges traditional assumptions, propose innovative approaches, or explore under-researched areas will score higher in novelty. Less novel hypotheses include those that replicate well-known findings or extend existing studies with minimal new insights.\n      Feasibility is judged by whether the hypothesis can be represented by the dataset described in the data summary.\n      Impact assesses how the hypotheses addresses critical or emerging issues, influence policy or decision-making, or provide insights into major societal, economic, or scientific challenges. Hypotheses with lower impact are narrower in scope or contribute incremental knowledge without broader implications.\n      For each hypothesis, provide its rank (1 being the highest) in terms of novelty, feasibility, and impact.\n      Also, provide the ranking reasons for each hypothesis.\n      **Ensure that you include all hypotheses in your evaluation and do not combine or omit any.**\n      **No two hypotheses should have the same rank in any category. Assign unique ranks to each hypothesis in each category to avoid overlaps.**\n      Return the results in JSON format as an array of objects with the following fields:\n      - id\n      - novelty_rank\n      - feasibility_rank\n      - impact_rank\n      - ranking_reason\n\nHere are the hypotheses:\n${JSON.stringify(hypotheses)}\n\nData summary: ${JSON.stringify(data_summary)}\n\nPlease provide only the JSON array in your response.`;\n\n      const apiKey = process.env.REACT_APP_OPENAI_API_KEY;\n      const response = await fetch('https://api.openai.com/v1/chat/completions', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${apiKey}`,\n        },\n        body: JSON.stringify({\n          model: 'gpt-4o',\n          messages: [\n            { role: 'system', content: 'You are a data scientist.' },\n            { role: 'user', content: prompt },\n          ],\n          max_tokens: 2000,\n        }),\n      });\n\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.error.message);\n      }\n\n      const data = await response.json();\n      const assistantReply = data.choices[0].message.content.trim();\n\n      // 从返回里尝试提取 JSON\n      let evaluatedHypotheses;\n      try {\n        const jsonMatch = assistantReply.match(/\\[.*\\]/s);\n        if (jsonMatch) {\n          evaluatedHypotheses = JSON.parse(jsonMatch[0]);\n        } else {\n          evaluatedHypotheses = JSON.parse(assistantReply);\n        }\n      } catch (parseError) {\n        throw new Error(\"Failed to parse evaluated hypotheses JSON from the assistant's reply.\");\n      }\n\n      // 判断返回数量是否与提交的一致\n      if (evaluatedHypotheses.length !== hypotheses.length) {\n        throw new Error(\n          `Mismatch in number of evaluated hypotheses. Expected ${hypotheses.length}, but got ${evaluatedHypotheses.length}.`\n        );\n      }\n\n      // rank -> score 的映射\n      const rankToScore = (rank, total) => {\n        const maxScore = 90;\n        const minScore = 10;\n        const scoreRange = maxScore - minScore;\n        // 分数从高到低\n        const score = maxScore - ((rank - 1) * scoreRange) / (total - 1);\n        return Math.round(score);\n      };\n\n      // 更新到前端的 nodes\n      setNodes((prevNodes) =>\n        prevNodes.map((node) => {\n          const evalHypo = evaluatedHypotheses.find((h) => h.id === node.id);\n          if (evalHypo) {\n            const totalHypotheses = hypotheses.length;\n            const noveltyScore = rankToScore(evalHypo.novelty_rank, totalHypotheses);\n            const feasibilityScore = rankToScore(evalHypo.feasibility_rank, totalHypotheses);\n            const impactScore = rankToScore(evalHypo.impact_rank, totalHypotheses);\n\n            return {\n              ...node,\n              noveltyScore,\n              feasibilityScore,\n              impactScore,\n              rankingReason: evalHypo.ranking_reason,\n            };\n          }\n          return node;\n        })\n      );\n    } catch (err) {\n      console.error('Error evaluating hypotheses:', err);\n      setError(err.message);\n    } finally {\n      setIsEvaluating(false);\n    }\n  };\n\n  // ========== Part 3: 初始意图提交 ==========\n\n  // ============ handleAnalysisIntentSubmit ============\n  const handleAnalysisIntentSubmit = async (e) => {\n    e.preventDefault();\n    if (!analysisIntent.trim()) return;\n\n    setIsGenerating(true);\n    setError(null);\n\n    try {\n      const prompt = `Based on the following analysis intent and data, generate exactly three initial hypotheses. For each hypothesis, provide a two-word title and a detailed content. Return the hypotheses in JSON format as an array of objects with \"title\" and \"content\" fields.\n\nAnalysis Intent: ${analysisIntent}\n\nData: ${JSON.stringify(data_summary)}\n\nPlease provide only the JSON array in your response.`;\n\n      const apiKey = process.env.REACT_APP_OPENAI_API_KEY;\n      const response = await fetch('https://api.openai.com/v1/chat/completions', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${apiKey}`,\n        },\n        body: JSON.stringify({\n          model: 'gpt-4o',\n          messages: [\n            { role: 'system', content: 'You are a data scientist.' },\n            { role: 'user', content: prompt },\n          ],\n          max_tokens: 500,\n        }),\n      });\n\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.error.message);\n      }\n\n      const data = await response.json();\n      const assistantReply = data.choices[0].message.content.trim();\n\n      // 提取返回的三条假设\n      let hypothesesArray;\n      try {\n        const jsonMatch = assistantReply.match(/\\[.*\\]/s);\n        if (jsonMatch) {\n          hypothesesArray = JSON.parse(jsonMatch[0]);\n        } else {\n          hypothesesArray = JSON.parse(assistantReply);\n        }\n      } catch (parseError) {\n        throw new Error(\"Failed to parse hypotheses JSON from the assistant's reply.\");\n      }\n\n      const hypotheses = hypothesesArray.slice(0, 3);\n      const hypothesesWithId = hypotheses.map((hyp) => {\n        const id = generateUniqueId();\n        return { id, ...hyp };\n      });\n\n      // 更新全局 hypothesesList\n      const updatedHypothesesList = [...hypothesesList, ...hypothesesWithId];\n      setHypothesesList(updatedHypothesesList);\n\n      // 建立 Root node\n      const rootNode = {\n        id: 'root',\n        level: 0,\n        title: analysisIntent,\n        content: analysisIntent,\n        type: 'root',\n        x: 0,\n        y: 0,\n      };\n\n      // 生成子节点\n      const childSpacing = 200;\n      const totalWidth = (hypotheses.length - 1) * childSpacing;\n      const startX = rootNode.x - totalWidth / 2;\n\n      const childNodes = hypothesesWithId.map((hyp, i) => ({\n        id: hyp.id,\n        level: 1,\n        title: hyp.title.trim(),\n        content: hyp.content.trim(),\n        type: 'complex',\n        x: startX + i * childSpacing,\n        y: rootNode.y + 150,\n      }));\n\n      // 更新到前端\n      const newNodes = [rootNode, ...childNodes];\n      const newLinks = childNodes.map((nd) => ({ source: rootNode.id, target: nd.id }));\n      setNodes(newNodes);\n      setLinks(newLinks);\n\n      setAnalysisIntent('');\n      setIsAnalysisSubmitted(true);\n\n      // 立即评估\n      await evaluateHypotheses(updatedHypothesesList);\n      setIsGenerating(false);\n    } catch (err) {\n      console.error('Error generating initial hypotheses:', err);\n      setError(err.message);\n      setIsGenerating(false);\n    }\n  };\n\n  // ========== Part 4: 为选中节点生成子节点 ==========\n\n  // ============ generateChildNodes ============\n  const generateChildNodes = async () => {\n    if (!selectedNode) return;\n    setIsGenerating(true);\n    setError(null);\n\n    try {\n      const prompt = `Based on the following node content and data, generate exactly three new hypotheses. For each hypothesis, provide a two-word title and a detailed content. Return the hypotheses in JSON format as an array of objects with \"title\" and \"content\" fields.\n\nNode Content: ${selectedNode.content}\n\nData: ${JSON.stringify(data_summary)}\n\nAdditional Context: ${userInput}\n\nPlease provide only the JSON array in your response.`;\n\n      const apiKey = process.env.REACT_APP_OPENAI_API_KEY;\n      const response = await fetch('https://api.openai.com/v1/chat/completions', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${apiKey}`,\n        },\n        body: JSON.stringify({\n          model: 'gpt-4o',\n          messages: [\n            { role: 'system', content: 'You are a data scientist.' },\n            { role: 'user', content: prompt },\n          ],\n          max_tokens: 500,\n        }),\n      });\n\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.error.message);\n      }\n\n      const data = await response.json();\n      const assistantReply = data.choices[0].message.content.trim();\n\n      // 解析出新子节点\n      let hypothesesArray;\n      try {\n        const jsonMatch = assistantReply.match(/\\[.*\\]/s);\n        if (jsonMatch) {\n          hypothesesArray = JSON.parse(jsonMatch[0]);\n        } else {\n          hypothesesArray = JSON.parse(assistantReply);\n        }\n      } catch (parseError) {\n        throw new Error(\"Failed to parse hypotheses JSON from the assistant's reply.\");\n      }\n\n      const hypotheses = hypothesesArray.slice(0, 3);\n      const newHypothesesWithId = hypotheses.map((hyp) => {\n        const id = generateUniqueId();\n        return { id, ...hyp };\n      });\n\n      // 更新全局 hypothesesList\n      const updatedHypothesesList = [...hypothesesList, ...newHypothesesWithId];\n      setHypothesesList(updatedHypothesesList);\n\n      // 布局\n      const childSpacing = 200;\n      const totalWidth = (hypotheses.length - 1) * childSpacing;\n      const startX = selectedNode.x - totalWidth / 2;\n\n      // 新的节点\n      const newNodes = newHypothesesWithId.map((hyp, i) => ({\n        id: hyp.id,\n        level: selectedNode.level + 1,\n        title: hyp.title.trim(),\n        content: hyp.content.trim(),\n        type: 'complex',\n        x: startX + i * childSpacing + Math.random() * 20 - 10,\n        y: selectedNode.y + 150 + Math.random() * 20 - 10,\n      }));\n\n      // 更新节点与连线\n      const newLinks = newNodes.map((nd) => ({ source: selectedNode.id, target: nd.id }));\n      setNodes((prev) => [...prev, ...newNodes]);\n      setLinks((prev) => [...prev, ...newLinks]);\n\n      // 对新的列表进行评估\n      await evaluateHypotheses(updatedHypothesesList);\n\n      setIsGenerating(false);\n      setUserInput('');\n    } catch (err) {\n      console.error('Error generating hypotheses:', err);\n      setError(err.message);\n      setIsGenerating(false);\n    }\n  };\n\n  // ========== Part 5: 修改节点逻辑 (modifyHypothesisBasedOnModifications) ==========\n\n  // ============ modifyHypothesisBasedOnModifications ============\n  const modifyHypothesisBasedOnModifications = async (originalNode, ghostNode, modifications) => {\n    setError(null);\n\n    try {\n      setIsGenerating(true);\n\n      const modificationsDescriptions = modifications.map((mod) => {\n        const metricName =\n          mod.metric === 'noveltyScore'\n            ? 'Novelty'\n            : mod.metric === 'feasibilityScore'\n            ? 'Feasibility'\n            : 'Impact';\n        const direction = mod.direction === 'increase' ? 'increase' : 'decrease';\n        return `${direction} its ${metricName}`;\n      });\n\n      const modificationsText = modificationsDescriptions.join(' and ');\n\n      const prompt = `Modify the following hypothesis to significantly ${modificationsText}, while keeping its main idea intact. Provide the modified hypothesis content.\n\nOriginal Hypothesis: ${originalNode.content}\n\nData Summary: ${JSON.stringify(data_summary)}\n\nPlease provide only the modified hypothesis content in your response.`;\n\n      const apiKey = process.env.REACT_APP_OPENAI_API_KEY;\n      const response = await fetch('https://api.openai.com/v1/chat/completions', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${apiKey}`,\n        },\n        body: JSON.stringify({\n          model: 'gpt-4o',\n          messages: [\n            { role: 'system', content: 'You are a data scientist.' },\n            { role: 'user', content: prompt },\n          ],\n          max_tokens: 500,\n        }),\n      });\n\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.error.message);\n      }\n\n      const data = await response.json();\n      const assistantReply = data.choices[0].message.content.trim();\n\n      // 将 ghostNode 更新为新内容\n      ghostNode.content = assistantReply;\n      ghostNode.isModified = true;\n      ghostNode.previousState = originalNode;\n      ghostNode.isGhost = false;\n\n      const newHypothesis = {\n        id: ghostNode.id,\n        title: ghostNode.title,\n        content: assistantReply,\n      };\n      setHypothesesList((prevList) => [...prevList, newHypothesis]);\n\n      setNodes((prevNodes) => prevNodes.map((n) => (n.id === ghostNode.id ? ghostNode : n)));\n      setIsGenerating(false);\n      setIsEvaluating(true);\n\n      // 最后对新的节点进行评估\n      await evaluateHypotheses([...hypothesesList, newHypothesis]);\n    } catch (err) {\n      console.error('Error modifying hypothesis:', err);\n      setError(err.message);\n      setIsGenerating(false);\n    } finally {\n      setIsEvaluating(false);\n    }\n  };\n\n  // ========== Part 6: 节点点击/悬浮事件 ==========\n\n  // 点击节点\n  const handleNodeClick = (node) => {\n    setSelectedNode((prev) => (prev?.id === node.id ? null : node));\n  };\n\n  // Hover 节点\n  const handleNodeHover = (event, d) => {\n    setHoveredNode(d);\n    d3.select(event.currentTarget).raise();\n  };\n\n  // 离开节点\n  const handleNodeLeave = () => {\n    setHoveredNode(null);\n  };\n\n  // ========== Part 7: useEffect 中的 D3 渲染 ==========\n\n  // ============ useEffect for D3 Rendering ============\n  useEffect(() => {\n    if (!svgRef.current) return;\n\n    const width = 800;\n    const height = 600;\n\n    // 清空 SVG\n    d3.select(svgRef.current).selectAll('*').remove();\n\n    if (showTree) {\n      // ------------------- Exploration (Tree) View --------------------\n      const svg = d3.select(svgRef.current).attr('width', width).attr('height', height);\n\n      // 背景\n      svg\n        .append('rect')\n        .attr('x', 2)\n        .attr('y', 2)\n        .attr('width', width - 4)\n        .attr('height', height - 4)\n        .attr('rx', 8)\n        .attr('ry', 8)\n        .style('fill', '#fff')\n        .style('stroke', '#e5e7eb')\n        .style('stroke-width', 1)\n        .style('filter', 'drop-shadow(0 4px 6px rgba(0,0,0,0.1))');\n\n      // 顶部示例\n      svg\n        .append('text')\n        .attr('x', 24)\n        .attr('y', 50)\n        .style('font-size', '2rem')\n        .style('font-weight', 600)\n        .style('fill', '#2563EB')\n        .text('Income Inequality');\n\n      // 树容器\n      const g = svg.append('g').attr('transform', `translate(300, 130)`);\n\n      // 连线\n      links.forEach((link) => {\n        const source = nodes.find((n) => n.id === link.source);\n        const target = nodes.find((n) => n.id === link.target);\n        if (source && target) {\n          g.append('path')\n            .attr(\n              'd',\n              `M ${source.x},${source.y} C ${source.x},${(source.y + target.y) / 2} \n                 ${target.x},${(source.y + target.y) / 2} \n                 ${target.x},${target.y}`\n            )\n            .style('fill', 'none')\n            .style('stroke', '#ccc')\n            .style('stroke-width', 2);\n        }\n      });\n\n      // 节点\n      const nodeGroups = g\n        .selectAll('.node')\n        .data(nodes)\n        .enter()\n        .append('g')\n        .attr('class', 'node')\n        .attr('transform', (d) => `translate(${d.x},${d.y})`);\n\n      nodeGroups\n        .append('text')\n        .attr('dy', 35)\n        .attr('text-anchor', 'middle')\n        .text((d) => d.title)\n        .attr('pointer-events', 'none');\n\n      nodeGroups\n        .append('circle')\n        .attr('r', 25)\n        .style('fill', (d) => (d.isNewlyGenerated ? '#FFD700' : colorMap[d.type]))\n        .style('opacity', (d) => (d.isGhost ? 0.5 : 1))\n        .style('stroke', (d) => {\n          if (selectedNode?.id === d.id) return '#000';\n          else if (hoveredNode?.id === d.id) return '#555';\n          else return '#fff';\n        })\n        .style('stroke-width', (d) => {\n          if (selectedNode?.id === d.id) return 4;\n          else if (hoveredNode?.id === d.id) return 3;\n          else return 2;\n        })\n        .style('cursor', 'pointer')\n        .on('mouseenter', handleNodeHover)\n        .on('mouseleave', handleNodeLeave)\n        .on('click', (event, d) => handleNodeClick(d));\n\n      // 底部颜色标识\n      const legendG = svg.append('g').attr('transform', `translate(40, ${height - 40})`);\n      // (示例略...)\n    } else {\n      // ------------------- Evaluation (Scatter) View --------------------\n      const svg = d3.select(svgRef.current).attr('width', width).attr('height', height);\n\n      // 背景卡片\n      svg\n        .append('rect')\n        .attr('x', 2)\n        .attr('y', 2)\n        .attr('width', width - 4)\n        .attr('height', height - 4)\n        .attr('rx', 8)\n        .attr('ry', 8)\n        .style('fill', '#fff')\n        .style('stroke', '#e5e7eb')\n        .style('stroke-width', 1)\n        .style('filter', 'drop-shadow(0 4px 6px rgba(0,0,0,0.1))');\n\n      // 顶部示例文字\n      svg\n        .append('text')\n        .attr('x', 24)\n        .attr('y', 40)\n        .style('font-size', '1rem')\n        .style('font-weight', 500)\n        .style('fill', '#111827')\n        .text('Income Inequality');\n\n      svg\n        .append('text')\n        .attr('x', 24)\n        .attr('y', 70)\n        .style('font-size', '1.5rem')\n        .style('font-weight', 1000)\n        .style('fill', '#1D4ED8')\n        .text('Gender Disparity');\n\n      // X/Y 选择器 (ForeignObject) 略...\n\n      // 画坐标轴 + 网格\n      const margin = { top: 100, right: 50, bottom: 80, left: 50 };\n      const chartWidth = width - margin.left - margin.right;\n      const chartHeight = height - margin.top - margin.bottom;\n      const g = svg.append('g').attr('transform', `translate(${margin.left}, ${margin.top})`);\n\n      const xScale = d3.scaleLinear().domain([0, 100]).range([0, chartWidth]);\n      const yScale = d3.scaleLinear().domain([0, 100]).range([chartHeight, 0]);\n\n      // 绘制坐标轴与网格线 (略)...\n\n      // 筛选已有打分的节点\n      const filteredNodes = nodes.filter((d) => d[xAxisMetric] !== undefined && d[yAxisMetric] !== undefined);\n\n      // 只显示被修改后的连线\n      const evaluationLinks = links.filter((link) => {\n        const sourceNode = nodes.find((n) => n.id === link.source);\n        const targetNode = nodes.find((n) => n.id === link.target);\n        return sourceNode && targetNode && targetNode.isModified;\n      });\n\n      // 连线\n      evaluationLinks.forEach((link) => {\n        const source = nodes.find((n) => n.id === link.source);\n        const target = nodes.find((n) => n.id === link.target);\n        // 画线\n      });\n\n      // 画节点\n      const nodeGroups = g\n        .selectAll('.node-group')\n        .data(filteredNodes)\n        .enter()\n        .append('g')\n        .attr('class', 'node-group')\n        .attr('transform', (d) => `translate(${xScale(d[xAxisMetric])}, ${yScale(d[yAxisMetric])})`)\n        .style('cursor', 'pointer')\n        .on('mouseenter', handleNodeHover)\n        .on('mouseleave', handleNodeLeave)\n        .on('click', (event, d) => handleNodeClick(d))\n        // 拖拽逻辑\n        .call(\n          d3\n            .drag()\n            .on('start', function (event, d) {\n              if (isGenerating || isEvaluating) return;\n              d3.select(this).raise();\n            })\n            .on('drag', function (event, d) {\n              if (isGenerating || isEvaluating) return;\n              const [xx, yy] = d3.pointer(event, g.node());\n              // 实时更新UI\n              d3.select(this).attr('transform', `translate(${xx}, ${yy})`);\n            })\n            .on('end', (event, d) => {\n              if (isGenerating || isEvaluating) return;\n              // 计算新的坐标值\n              const [xx, yy] = d3.pointer(event, g.node());\n              const newXMetricValue = xScale.invert(xx);\n              const newYMetricValue = yScale.invert(yy);\n              const oldXMetricValue = d[xAxisMetric];\n              const oldYMetricValue = d[yAxisMetric];\n              const deltaX = newXMetricValue - oldXMetricValue;\n              const deltaY = newYMetricValue - oldYMetricValue;\n\n              // 日志输出 (略)...\n\n              let modifications = [];\n              // 根据拖拽差值大小，确定要提高/降低哪个指标\n              if (Math.abs(deltaX) > 5) {\n                modifications.push({\n                  metric: xAxisMetric,\n                  direction: deltaX > 0 ? 'increase' : 'decrease',\n                });\n              }\n              if (Math.abs(deltaY) > 5) {\n                modifications.push({\n                  metric: yAxisMetric,\n                  direction: deltaY > 0 ? 'increase' : 'decrease',\n                });\n              }\n\n              // 复原UI (拖拽结束后位置回到原处)\n              d3.select(this).attr(\n                'transform',\n                `translate(${xScale(d[xAxisMetric])}, ${yScale(d[yAxisMetric])})`\n              );\n\n              // 如果 metrics 超过一定阈值 => 生成 ghostNode\n              if (modifications.length > 0) {\n                const ghostNodeId = generateUniqueId();\n                const ghostNode = {\n                  ...d,\n                  id: ghostNodeId,\n                  x: d.x,\n                  y: d.y,\n                  [xAxisMetric]: newXMetricValue,\n                  [yAxisMetric]: newYMetricValue,\n                  isGhost: true,\n                  isNewlyGenerated: true,\n                };\n\n                // 把 ghostNode 加入图中\n                setNodes((prev) => [...prev, ghostNode]);\n                setLinks((prev) => [...prev, { source: d.id, target: ghostNodeId }]);\n\n                // 直接在这里调用修改函数 (也可先弹窗确认)\n                modifyHypothesisBasedOnModifications(d, ghostNode, modifications);\n              }\n            })\n        );\n\n      nodeGroups\n        .append('circle')\n        .attr('r', 8)\n        .style('fill', (d) => (d.isNewlyGenerated ? '#FFD700' : colorMap[d.type]))\n        .style('opacity', (d) => (d.isGhost ? 0.5 : 1))\n        .style('stroke', (d) => {\n          if (selectedNode?.id === d.id) return '#000';\n          else if (hoveredNode?.id === d.id) return '#555';\n          else return '#fff';\n        })\n        .style('stroke-width', (d) => {\n          if (selectedNode?.id === d.id) return 4;\n          else if (hoveredNode?.id === d.id) return 3;\n          else return 2;\n        });\n    }\n  }, [\n    showTree,\n    nodes,\n    links,\n    selectedNode,\n    hoveredNode,\n    xAxisMetric,\n    yAxisMetric,\n    isGenerating,\n    isEvaluating,\n  ]);\n\n  // ========== Part 8: 右侧面板组件 ==========\n\n  // 1) 顶部切换 Tab\n  const TopNav = () => {\n    const explorationIcon = (\n      <svg /* ... */> {/* 略 */} </svg>\n    );\n    const evaluationIcon = (\n      <svg /* ... */> {/* 略 */} </svg>\n    );\n\n    const tabStyle = { /* ... */ };\n    const explorationActiveStyle = showTree\n      ? { backgroundColor: '#fff', color: '#141414' }\n      : { backgroundColor: 'transparent', color: '#A0AEC0' };\n    const evaluationActiveStyle = !showTree\n      ? { backgroundColor: '#fff', color: '#141414' }\n      : { backgroundColor: 'transparent', color: '#A0AEC0' };\n\n    return (\n      <div style={{ display: 'flex', alignItems: 'center', backgroundColor: '#0F172A', padding: '10px 20px' }}>\n        <div style={{ ...tabStyle, ...explorationActiveStyle, marginRight: '6px' }} onClick={() => setShowTree(true)}>\n          {explorationIcon}\n          Exploration View\n        </div>\n\n        <div style={{ ...tabStyle, ...evaluationActiveStyle }} onClick={() => setShowTree(false)}>\n          {evaluationIcon}\n          Evaluation View\n        </div>\n      </div>\n    );\n  };\n\n  // 2) 右侧主面板 Dashboard\n  const Dashboard = ({ node }) => {\n    if (!node) {\n      return (\n        <div\n          style={{\n            padding: '24px',\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'center',\n            height: '160px',\n            color: '#9ca3af',\n          }}\n        >\n          <p>Click on a node to view details</p>\n        </div>\n      );\n    }\n\n    return (\n      <div\n        style={{\n          border: '1px solid #E5E7EB',\n          borderRadius: '8px',\n          backgroundColor: '#FFFFFF',\n          padding: '16px',\n        }}\n      >\n        <h2 /* 标题样式略 */>\n          {node.title || 'Hypothesis Title'}\n        </h2>\n\n        {/* 标签: Complex (示例) */}\n        <div style={{ position: 'relative', marginBottom: '16px' }}>\n          {/* ... */}\n          <div\n            style={{\n              left: 9.15,\n              top: 3.83,\n              position: 'absolute',\n              color: '#A21919',\n              fontSize: 11,\n            }}\n          >\n            Complex\n          </div>\n        </div>\n\n        {/* IV/DV 卡片 */}\n        <IVDVCard node={node} />\n\n        {/* 三要素卡片 */}\n        <ThreeFactorsCard node={node} />\n\n        {/* Exploration 下提供 “Add context + Generate” */}\n        {showTree ? (\n          <ContextAndGenerateCard />\n        ) : (\n          // Evaluation 下提供 “得分对比”\n          <ScoreComparison node={node} />\n        )}\n      </div>\n    );\n  };\n\n  // 3) IV/DV 组件\n  const IVDVCard = ({ node }) => {\n    const [isAfterIVDV, setIsAfterIVDV] = useState(true);\n\n    // 开关按钮\n    const SwitchButton = () => (\n      <div /* 点击切换 isAfterIVDV */>\n        {/* ... */}\n      </div>\n    );\n\n    return (\n      <div /* 包裹卡片样式 */>\n        <SwitchButton />\n        {/* IV / DV */}\n        <div /* ... */>\n          <div /* IV 标签 */>IV: Gender, Race</div>\n          <div /* DV 标签 */>DV: Income</div>\n        </div>\n        {/* Relationship */}\n        <div /* ... */>\n          <div /* 标题 */>Relationship / Hypothesis ({isAfterIVDV ? 'After' : 'Before'})</div>\n          <div /* 内容 */>{node.content}</div>\n        </div>\n      </div>\n    );\n  };\n\n  // 4) 三要素卡片\n  const ThreeFactorsCard = ({ node }) => {\n    const [isAfterFactors, setIsAfterFactors] = useState(true);\n\n    const SwitchButton = () => (\n      <div /* 同样的切换逻辑 */>\n        {/* ... */}\n      </div>\n    );\n\n    const noveltyText = node.noveltyText || '...';\n    const feasibilityText = node.feasibilityText || '...';\n    const impactText = node.impactText || '...';\n\n    return (\n      <div /* 卡片外框 */>\n        <SwitchButton />\n        {/* 分别渲染 3 个要素 */}\n        {/* ... */}\n      </div>\n    );\n  };\n\n  // 5) Exploration 下方生成新节点卡片\n  const ContextAndGenerateCard = () => {\n    return (\n      <div /* 卡片外框 */>\n        <div /* 文本提示 */>Add context for new hypotheses (option)</div>\n        <textarea\n          rows={2}\n          value={userInput}\n          onChange={(e) => setUserInput(e.target.value)}\n          /* ... */\n        />\n        <button\n          onClick={generateChildNodes}\n          disabled={!selectedNode || isGenerating || isEvaluating || !isAnalysisSubmitted}\n          /* ... */\n        >\n          Generate New Hypotheses\n        </button>\n      </div>\n    );\n  };\n\n  // 6) Evaluation 下方得分对比\n  const ScoreComparison = ({ node }) => {\n    const hasBefore = !!node.previousState;\n    const noveltyBefore = hasBefore ? node.previousState.noveltyScore ?? 'N/A' : null;\n    const noveltyAfter = node.noveltyScore ?? 'N/A';\n    const feasibilityBefore = hasBefore ? node.previousState.feasibilityScore ?? 'N/A' : null;\n    const feasibilityAfter = node.feasibilityScore ?? 'N/A';\n    const impactBefore = hasBefore ? node.previousState.impactScore ?? 'N/A' : null;\n    const impactAfter = node.impactScore ?? 'N/A';\n    const reason = node.rankingReason ?? '(No reason provided)';\n\n    // 比较箭头\n    const getArrowDiv = (beforeVal, afterVal) => {\n      // ... 判断变化并返回不同图标\n    };\n\n    const renderMetricCard = (label, color, beforeVal, afterVal) => {\n      // ... 渲染单个分数对比框\n    };\n\n    return (\n      <div /* 网格布局 */>\n        {renderMetricCard('Novelty', '#DC2626', noveltyBefore, noveltyAfter)}\n        {renderMetricCard('Feasibility', '#D97706', feasibilityBefore, feasibilityAfter)}\n        {renderMetricCard('Impact', '#2563EB', impactBefore, impactAfter)}\n      </div>\n    );\n  };\n\n  // ========== Part 9: 最终返回（整合） ==========\n\n  return (\n    <div style={{ fontFamily: 'Arial, sans-serif', position: 'relative' }}>\n      <TopNav />\n\n      {showTree && !isAnalysisSubmitted && (\n        <div style={{ backgroundColor: '#1f2937', display: 'flex', alignItems: 'center', padding: '10px 20px' }}>\n          <form onSubmit={handleAnalysisIntentSubmit} style={{ display: 'flex', alignItems: 'center' }}>\n            <input\n              type=\"text\"\n              value={analysisIntent}\n              onChange={(e) => setAnalysisIntent(e.target.value)}\n              placeholder=\"Enter analysis intent\"\n              /* ... */\n            />\n            <button\n              type=\"submit\"\n              disabled={isGenerating || isEvaluating}\n              /* ... */\n            >\n              {isEvaluating ? 'Evaluating...' : isGenerating ? 'Generating...' : 'Submit'}\n            </button>\n            {error && (\n              <div style={{ marginLeft: '16px', color: '#dc2626', fontSize: '0.875rem' }}>\n                {error}\n              </div>\n            )}\n          </form>\n        </div>\n      )}\n\n      <div style={{ display: 'flex', padding: '20px', maxWidth: '1600px', margin: '0 auto' }}>\n        {/* 左侧图 */}\n        <div style={{ flexBasis: '60%', marginRight: '20px' }}>\n          <svg ref={svgRef} />\n        </div>\n\n        {/* 右侧 Dashboard */}\n        <div style={{ flexBasis: '40%' }}>\n          {(isGenerating || isEvaluating) && (\n            <div style={{ textAlign: 'center', marginBottom: '10px', color: '#4C84FF' }}>\n              {isGenerating ? 'Generating...' : 'Evaluating...'}\n            </div>\n          )}\n          {/* Dashboard 基于“当前悬浮或选中”的节点来渲染 */}\n          <Dashboard node={nodes.find((n) => n.id === (hoveredNode?.id || selectedNode?.id))} />\n        </div>\n      </div>\n\n      {/* 如果需要悬浮确认按钮，可以加在这里 */}\n      {pendingChange && (\n        <div /* ... 按钮区域 ... */>\n          <div style={{ marginBottom: '4px', fontSize: '0.875rem', color: '#374151' }}>\n            <strong>Confirm change?</strong>\n          </div>\n          <button\n            /* confirm */\n            onClick={() => {\n              modifyHypothesisBasedOnModifications(\n                pendingChange.originalNode,\n                pendingChange.ghostNode,\n                pendingChange.modifications\n              );\n              setPendingChange(null);\n            }}\n          >\n            Confirm\n          </button>\n\n          <button\n            /* cancel */\n            onClick={() => {\n              setNodes((prev) => prev.filter((nd) => nd.id !== pendingChange.ghostNode.id));\n              setLinks((prev) => prev.filter((lk) => lk.target !== pendingChange.ghostNode.id));\n              setPendingChange(null);\n            }}\n          >\n            Cancel\n          </button>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default TreePlotVisualization;"],"mappings":";;AAAA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAC1D,OAAO,KAAKC,EAAE,MAAM,IAAI;AACxB,OAAOC,YAAY,MAAM,qBAAqB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEhD,MAAMC,qBAAqB,GAAGA,CAAA,KAAM;EAAAC,GAAA;EAAA,IAAAC,EAAA,GAAAC,YAAA;IAAAC,GAAA,GAAAD,YAAA;EAClC;EACA,MAAM,CAACE,QAAQ,EAAEC,WAAW,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;EAChD,MAAM,CAACc,KAAK,EAAEC,QAAQ,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACgB,KAAK,EAAEC,QAAQ,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACkB,WAAW,EAAEC,cAAc,CAAC,GAAGnB,QAAQ,CAAC,IAAI,CAAC;EACpD,MAAM,CAACoB,YAAY,EAAEC,eAAe,CAAC,GAAGrB,QAAQ,CAAC,IAAI,CAAC;EACtD,MAAM,CAACsB,SAAS,EAAEC,YAAY,CAAC,GAAGvB,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACwB,cAAc,EAAEC,iBAAiB,CAAC,GAAGzB,QAAQ,CAAC,EAAE,CAAC;EACxD,MAAM,CAAC0B,mBAAmB,EAAEC,sBAAsB,CAAC,GAAG3B,QAAQ,CAAC,KAAK,CAAC;EACrE,MAAM,CAAC4B,YAAY,EAAEC,eAAe,CAAC,GAAG7B,QAAQ,CAAC,KAAK,CAAC;EACvD,MAAM,CAAC8B,YAAY,EAAEC,eAAe,CAAC,GAAG/B,QAAQ,CAAC,KAAK,CAAC;EACvD,MAAM,CAACgC,KAAK,EAAEC,QAAQ,CAAC,GAAGjC,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACkC,cAAc,EAAEC,iBAAiB,CAAC,GAAGnC,QAAQ,CAAC,EAAE,CAAC;EACxD;EACA,MAAM,CAACoC,aAAa,EAAEC,gBAAgB,CAAC,GAAGrC,QAAQ,CAAC,IAAI,CAAC;;EAExD;EACA,MAAM,CAACsC,WAAW,EAAEC,cAAc,CAAC,GAAGvC,QAAQ,CAAC,kBAAkB,CAAC;EAClE,MAAM,CAACwC,WAAW,EAAEC,cAAc,CAAC,GAAGzC,QAAQ,CAAC,cAAc,CAAC;;EAE9D;EACA,MAAM0C,YAAY,GAAGxC,MAAM,CAAC,CAAC,CAAC;EAC9B,MAAMyC,gBAAgB,GAAGA,CAAA,KAAM;IAC7BD,YAAY,CAACE,OAAO,IAAI,CAAC;IACzB,OAAO,QAAQF,YAAY,CAACE,OAAO,EAAE;EACvC,CAAC;;EAED;EACA,MAAMC,MAAM,GAAG3C,MAAM,CAAC,IAAI,CAAC;;EAE3B;EACA,MAAM4C,QAAQ,GAAG;IACfC,IAAI,EAAE,SAAS;IACfC,MAAM,EAAE,SAAS;IACjBC,OAAO,EAAE;EACX,CAAC;;EAED;;EAEA;EACA,MAAMC,kBAAkB,GAAG,MAAOC,UAAU,IAAK;IAC/CpB,eAAe,CAAC,IAAI,CAAC;IACrBE,QAAQ,CAAC,IAAI,CAAC;IAEd,IAAI;MACF,MAAMmB,MAAM,GAAG;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAEC,IAAI,CAACC,SAAS,CAACH,UAAU,CAAC;AAC5B;AACA,gBAAgBE,IAAI,CAACC,SAAS,CAAClD,YAAY,CAAC;AAC5C;AACA,qDAAqD;MAE/C,MAAMmD,MAAM,GAAGC,OAAO,CAACC,GAAG,CAACC,wBAAwB;MACnD,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,4CAA4C,EAAE;QACzEC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE,kBAAkB;UAClCC,aAAa,EAAE,UAAUR,MAAM;QACjC,CAAC;QACDS,IAAI,EAAEX,IAAI,CAACC,SAAS,CAAC;UACnBW,KAAK,EAAE,QAAQ;UACfC,QAAQ,EAAE,CACR;YAAEC,IAAI,EAAE,QAAQ;YAAEC,OAAO,EAAE;UAA4B,CAAC,EACxD;YAAED,IAAI,EAAE,MAAM;YAAEC,OAAO,EAAEhB;UAAO,CAAC,CAClC;UACDiB,UAAU,EAAE;QACd,CAAC;MACH,CAAC,CAAC;MAEF,IAAI,CAACV,QAAQ,CAACW,EAAE,EAAE;QAChB,MAAMC,SAAS,GAAG,MAAMZ,QAAQ,CAACa,IAAI,CAAC,CAAC;QACvC,MAAM,IAAIC,KAAK,CAACF,SAAS,CAACvC,KAAK,CAAC0C,OAAO,CAAC;MAC1C;MAEA,MAAMC,IAAI,GAAG,MAAMhB,QAAQ,CAACa,IAAI,CAAC,CAAC;MAClC,MAAMI,cAAc,GAAGD,IAAI,CAACE,OAAO,CAAC,CAAC,CAAC,CAACH,OAAO,CAACN,OAAO,CAACU,IAAI,CAAC,CAAC;;MAE7D;MACA,IAAIC,mBAAmB;MACvB,IAAI;QACF,MAAMC,SAAS,GAAGJ,cAAc,CAACK,KAAK,CAAC,SAAS,CAAC;QACjD,IAAID,SAAS,EAAE;UACbD,mBAAmB,GAAG1B,IAAI,CAAC6B,KAAK,CAACF,SAAS,CAAC,CAAC,CAAC,CAAC;QAChD,CAAC,MAAM;UACLD,mBAAmB,GAAG1B,IAAI,CAAC6B,KAAK,CAACN,cAAc,CAAC;QAClD;MACF,CAAC,CAAC,OAAOO,UAAU,EAAE;QACnB,MAAM,IAAIV,KAAK,CAAC,uEAAuE,CAAC;MAC1F;;MAEA;MACA,IAAIM,mBAAmB,CAACK,MAAM,KAAKjC,UAAU,CAACiC,MAAM,EAAE;QACpD,MAAM,IAAIX,KAAK,CACb,wDAAwDtB,UAAU,CAACiC,MAAM,aAAaL,mBAAmB,CAACK,MAAM,GAClH,CAAC;MACH;;MAEA;MACA,MAAMC,WAAW,GAAGA,CAACC,IAAI,EAAEC,KAAK,KAAK;QACnC,MAAMC,QAAQ,GAAG,EAAE;QACnB,MAAMC,QAAQ,GAAG,EAAE;QACnB,MAAMC,UAAU,GAAGF,QAAQ,GAAGC,QAAQ;QACtC;QACA,MAAME,KAAK,GAAGH,QAAQ,GAAI,CAACF,IAAI,GAAG,CAAC,IAAII,UAAU,IAAKH,KAAK,GAAG,CAAC,CAAC;QAChE,OAAOK,IAAI,CAACC,KAAK,CAACF,KAAK,CAAC;MAC1B,CAAC;;MAED;MACA5E,QAAQ,CAAE+E,SAAS,IACjBA,SAAS,CAACC,GAAG,CAAEC,IAAI,IAAK;QACtB,MAAMC,QAAQ,GAAGlB,mBAAmB,CAACmB,IAAI,CAAEC,CAAC,IAAKA,CAAC,CAACC,EAAE,KAAKJ,IAAI,CAACI,EAAE,CAAC;QAClE,IAAIH,QAAQ,EAAE;UACZ,MAAMI,eAAe,GAAGlD,UAAU,CAACiC,MAAM;UACzC,MAAMkB,YAAY,GAAGjB,WAAW,CAACY,QAAQ,CAACM,YAAY,EAAEF,eAAe,CAAC;UACxE,MAAMG,gBAAgB,GAAGnB,WAAW,CAACY,QAAQ,CAACQ,gBAAgB,EAAEJ,eAAe,CAAC;UAChF,MAAMK,WAAW,GAAGrB,WAAW,CAACY,QAAQ,CAACU,WAAW,EAAEN,eAAe,CAAC;UAEtE,OAAO;YACL,GAAGL,IAAI;YACPM,YAAY;YACZE,gBAAgB;YAChBE,WAAW;YACXE,aAAa,EAAEX,QAAQ,CAACY;UAC1B,CAAC;QACH;QACA,OAAOb,IAAI;MACb,CAAC,CACH,CAAC;IACH,CAAC,CAAC,OAAOc,GAAG,EAAE;MACZC,OAAO,CAAC/E,KAAK,CAAC,8BAA8B,EAAE8E,GAAG,CAAC;MAClD7E,QAAQ,CAAC6E,GAAG,CAACpC,OAAO,CAAC;IACvB,CAAC,SAAS;MACR3C,eAAe,CAAC,KAAK,CAAC;IACxB;EACF,CAAC;;EAED;;EAEA;EACA,MAAMiF,0BAA0B,GAAG,MAAOC,CAAC,IAAK;IAC9CA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,IAAI,CAAC1F,cAAc,CAACsD,IAAI,CAAC,CAAC,EAAE;IAE5BjD,eAAe,CAAC,IAAI,CAAC;IACrBI,QAAQ,CAAC,IAAI,CAAC;IAEd,IAAI;MACF,MAAMmB,MAAM,GAAG;AACrB;AACA,mBAAmB5B,cAAc;AACjC;AACA,QAAQ6B,IAAI,CAACC,SAAS,CAAClD,YAAY,CAAC;AACpC;AACA,qDAAqD;MAE/C,MAAMmD,MAAM,GAAGC,OAAO,CAACC,GAAG,CAACC,wBAAwB;MACnD,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,4CAA4C,EAAE;QACzEC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE,kBAAkB;UAClCC,aAAa,EAAE,UAAUR,MAAM;QACjC,CAAC;QACDS,IAAI,EAAEX,IAAI,CAACC,SAAS,CAAC;UACnBW,KAAK,EAAE,QAAQ;UACfC,QAAQ,EAAE,CACR;YAAEC,IAAI,EAAE,QAAQ;YAAEC,OAAO,EAAE;UAA4B,CAAC,EACxD;YAAED,IAAI,EAAE,MAAM;YAAEC,OAAO,EAAEhB;UAAO,CAAC,CAClC;UACDiB,UAAU,EAAE;QACd,CAAC;MACH,CAAC,CAAC;MAEF,IAAI,CAACV,QAAQ,CAACW,EAAE,EAAE;QAChB,MAAMC,SAAS,GAAG,MAAMZ,QAAQ,CAACa,IAAI,CAAC,CAAC;QACvC,MAAM,IAAIC,KAAK,CAACF,SAAS,CAACvC,KAAK,CAAC0C,OAAO,CAAC;MAC1C;MAEA,MAAMC,IAAI,GAAG,MAAMhB,QAAQ,CAACa,IAAI,CAAC,CAAC;MAClC,MAAMI,cAAc,GAAGD,IAAI,CAACE,OAAO,CAAC,CAAC,CAAC,CAACH,OAAO,CAACN,OAAO,CAACU,IAAI,CAAC,CAAC;;MAE7D;MACA,IAAIqC,eAAe;MACnB,IAAI;QACF,MAAMnC,SAAS,GAAGJ,cAAc,CAACK,KAAK,CAAC,SAAS,CAAC;QACjD,IAAID,SAAS,EAAE;UACbmC,eAAe,GAAG9D,IAAI,CAAC6B,KAAK,CAACF,SAAS,CAAC,CAAC,CAAC,CAAC;QAC5C,CAAC,MAAM;UACLmC,eAAe,GAAG9D,IAAI,CAAC6B,KAAK,CAACN,cAAc,CAAC;QAC9C;MACF,CAAC,CAAC,OAAOO,UAAU,EAAE;QACnB,MAAM,IAAIV,KAAK,CAAC,6DAA6D,CAAC;MAChF;MAEA,MAAMtB,UAAU,GAAGgE,eAAe,CAACC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC;MAC9C,MAAMC,gBAAgB,GAAGlE,UAAU,CAAC4C,GAAG,CAAEuB,GAAG,IAAK;QAC/C,MAAMlB,EAAE,GAAGzD,gBAAgB,CAAC,CAAC;QAC7B,OAAO;UAAEyD,EAAE;UAAE,GAAGkB;QAAI,CAAC;MACvB,CAAC,CAAC;;MAEF;MACA,MAAMC,qBAAqB,GAAG,CAAC,GAAGrF,cAAc,EAAE,GAAGmF,gBAAgB,CAAC;MACtElF,iBAAiB,CAACoF,qBAAqB,CAAC;;MAExC;MACA,MAAMC,QAAQ,GAAG;QACfpB,EAAE,EAAE,MAAM;QACVqB,KAAK,EAAE,CAAC;QACRC,KAAK,EAAElG,cAAc;QACrB4C,OAAO,EAAE5C,cAAc;QACvBmG,IAAI,EAAE,MAAM;QACZC,CAAC,EAAE,CAAC;QACJC,CAAC,EAAE;MACL,CAAC;;MAED;MACA,MAAMC,YAAY,GAAG,GAAG;MACxB,MAAMC,UAAU,GAAG,CAAC5E,UAAU,CAACiC,MAAM,GAAG,CAAC,IAAI0C,YAAY;MACzD,MAAME,MAAM,GAAGR,QAAQ,CAACI,CAAC,GAAGG,UAAU,GAAG,CAAC;MAE1C,MAAME,UAAU,GAAGZ,gBAAgB,CAACtB,GAAG,CAAC,CAACuB,GAAG,EAAEY,CAAC,MAAM;QACnD9B,EAAE,EAAEkB,GAAG,CAAClB,EAAE;QACVqB,KAAK,EAAE,CAAC;QACRC,KAAK,EAAEJ,GAAG,CAACI,KAAK,CAAC5C,IAAI,CAAC,CAAC;QACvBV,OAAO,EAAEkD,GAAG,CAAClD,OAAO,CAACU,IAAI,CAAC,CAAC;QAC3B6C,IAAI,EAAE,SAAS;QACfC,CAAC,EAAEI,MAAM,GAAGE,CAAC,GAAGJ,YAAY;QAC5BD,CAAC,EAAEL,QAAQ,CAACK,CAAC,GAAG;MAClB,CAAC,CAAC,CAAC;;MAEH;MACA,MAAMM,QAAQ,GAAG,CAACX,QAAQ,EAAE,GAAGS,UAAU,CAAC;MAC1C,MAAMG,QAAQ,GAAGH,UAAU,CAAClC,GAAG,CAAEsC,EAAE,KAAM;QAAEC,MAAM,EAAEd,QAAQ,CAACpB,EAAE;QAAEmC,MAAM,EAAEF,EAAE,CAACjC;MAAG,CAAC,CAAC,CAAC;MACjFrF,QAAQ,CAACoH,QAAQ,CAAC;MAClBlH,QAAQ,CAACmH,QAAQ,CAAC;MAElB3G,iBAAiB,CAAC,EAAE,CAAC;MACrBE,sBAAsB,CAAC,IAAI,CAAC;;MAE5B;MACA,MAAMuB,kBAAkB,CAACqE,qBAAqB,CAAC;MAC/C1F,eAAe,CAAC,KAAK,CAAC;IACxB,CAAC,CAAC,OAAOiF,GAAG,EAAE;MACZC,OAAO,CAAC/E,KAAK,CAAC,sCAAsC,EAAE8E,GAAG,CAAC;MAC1D7E,QAAQ,CAAC6E,GAAG,CAACpC,OAAO,CAAC;MACrB7C,eAAe,CAAC,KAAK,CAAC;IACxB;EACF,CAAC;;EAED;;EAEA;EACA,MAAM2G,kBAAkB,GAAG,MAAAA,CAAA,KAAY;IACrC,IAAI,CAACpH,YAAY,EAAE;IACnBS,eAAe,CAAC,IAAI,CAAC;IACrBI,QAAQ,CAAC,IAAI,CAAC;IAEd,IAAI;MACF,MAAMmB,MAAM,GAAG;AACrB;AACA,gBAAgBhC,YAAY,CAACgD,OAAO;AACpC;AACA,QAAQf,IAAI,CAACC,SAAS,CAAClD,YAAY,CAAC;AACpC;AACA,sBAAsBkB,SAAS;AAC/B;AACA,qDAAqD;MAE/C,MAAMiC,MAAM,GAAGC,OAAO,CAACC,GAAG,CAACC,wBAAwB;MACnD,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,4CAA4C,EAAE;QACzEC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE,kBAAkB;UAClCC,aAAa,EAAE,UAAUR,MAAM;QACjC,CAAC;QACDS,IAAI,EAAEX,IAAI,CAACC,SAAS,CAAC;UACnBW,KAAK,EAAE,QAAQ;UACfC,QAAQ,EAAE,CACR;YAAEC,IAAI,EAAE,QAAQ;YAAEC,OAAO,EAAE;UAA4B,CAAC,EACxD;YAAED,IAAI,EAAE,MAAM;YAAEC,OAAO,EAAEhB;UAAO,CAAC,CAClC;UACDiB,UAAU,EAAE;QACd,CAAC;MACH,CAAC,CAAC;MAEF,IAAI,CAACV,QAAQ,CAACW,EAAE,EAAE;QAChB,MAAMC,SAAS,GAAG,MAAMZ,QAAQ,CAACa,IAAI,CAAC,CAAC;QACvC,MAAM,IAAIC,KAAK,CAACF,SAAS,CAACvC,KAAK,CAAC0C,OAAO,CAAC;MAC1C;MAEA,MAAMC,IAAI,GAAG,MAAMhB,QAAQ,CAACa,IAAI,CAAC,CAAC;MAClC,MAAMI,cAAc,GAAGD,IAAI,CAACE,OAAO,CAAC,CAAC,CAAC,CAACH,OAAO,CAACN,OAAO,CAACU,IAAI,CAAC,CAAC;;MAE7D;MACA,IAAIqC,eAAe;MACnB,IAAI;QACF,MAAMnC,SAAS,GAAGJ,cAAc,CAACK,KAAK,CAAC,SAAS,CAAC;QACjD,IAAID,SAAS,EAAE;UACbmC,eAAe,GAAG9D,IAAI,CAAC6B,KAAK,CAACF,SAAS,CAAC,CAAC,CAAC,CAAC;QAC5C,CAAC,MAAM;UACLmC,eAAe,GAAG9D,IAAI,CAAC6B,KAAK,CAACN,cAAc,CAAC;QAC9C;MACF,CAAC,CAAC,OAAOO,UAAU,EAAE;QACnB,MAAM,IAAIV,KAAK,CAAC,6DAA6D,CAAC;MAChF;MAEA,MAAMtB,UAAU,GAAGgE,eAAe,CAACC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC;MAC9C,MAAMqB,mBAAmB,GAAGtF,UAAU,CAAC4C,GAAG,CAAEuB,GAAG,IAAK;QAClD,MAAMlB,EAAE,GAAGzD,gBAAgB,CAAC,CAAC;QAC7B,OAAO;UAAEyD,EAAE;UAAE,GAAGkB;QAAI,CAAC;MACvB,CAAC,CAAC;;MAEF;MACA,MAAMC,qBAAqB,GAAG,CAAC,GAAGrF,cAAc,EAAE,GAAGuG,mBAAmB,CAAC;MACzEtG,iBAAiB,CAACoF,qBAAqB,CAAC;;MAExC;MACA,MAAMO,YAAY,GAAG,GAAG;MACxB,MAAMC,UAAU,GAAG,CAAC5E,UAAU,CAACiC,MAAM,GAAG,CAAC,IAAI0C,YAAY;MACzD,MAAME,MAAM,GAAG5G,YAAY,CAACwG,CAAC,GAAGG,UAAU,GAAG,CAAC;;MAE9C;MACA,MAAMI,QAAQ,GAAGM,mBAAmB,CAAC1C,GAAG,CAAC,CAACuB,GAAG,EAAEY,CAAC,MAAM;QACpD9B,EAAE,EAAEkB,GAAG,CAAClB,EAAE;QACVqB,KAAK,EAAErG,YAAY,CAACqG,KAAK,GAAG,CAAC;QAC7BC,KAAK,EAAEJ,GAAG,CAACI,KAAK,CAAC5C,IAAI,CAAC,CAAC;QACvBV,OAAO,EAAEkD,GAAG,CAAClD,OAAO,CAACU,IAAI,CAAC,CAAC;QAC3B6C,IAAI,EAAE,SAAS;QACfC,CAAC,EAAEI,MAAM,GAAGE,CAAC,GAAGJ,YAAY,GAAGlC,IAAI,CAAC8C,MAAM,CAAC,CAAC,GAAG,EAAE,GAAG,EAAE;QACtDb,CAAC,EAAEzG,YAAY,CAACyG,CAAC,GAAG,GAAG,GAAGjC,IAAI,CAAC8C,MAAM,CAAC,CAAC,GAAG,EAAE,GAAG;MACjD,CAAC,CAAC,CAAC;;MAEH;MACA,MAAMN,QAAQ,GAAGD,QAAQ,CAACpC,GAAG,CAAEsC,EAAE,KAAM;QAAEC,MAAM,EAAElH,YAAY,CAACgF,EAAE;QAAEmC,MAAM,EAAEF,EAAE,CAACjC;MAAG,CAAC,CAAC,CAAC;MACnFrF,QAAQ,CAAE4H,IAAI,IAAK,CAAC,GAAGA,IAAI,EAAE,GAAGR,QAAQ,CAAC,CAAC;MAC1ClH,QAAQ,CAAE0H,IAAI,IAAK,CAAC,GAAGA,IAAI,EAAE,GAAGP,QAAQ,CAAC,CAAC;;MAE1C;MACA,MAAMlF,kBAAkB,CAACqE,qBAAqB,CAAC;MAE/C1F,eAAe,CAAC,KAAK,CAAC;MACtBN,YAAY,CAAC,EAAE,CAAC;IAClB,CAAC,CAAC,OAAOuF,GAAG,EAAE;MACZC,OAAO,CAAC/E,KAAK,CAAC,8BAA8B,EAAE8E,GAAG,CAAC;MAClD7E,QAAQ,CAAC6E,GAAG,CAACpC,OAAO,CAAC;MACrB7C,eAAe,CAAC,KAAK,CAAC;IACxB;EACF,CAAC;;EAED;;EAEA;EACA,MAAM+G,oCAAoC,GAAG,MAAAA,CAAOC,YAAY,EAAEC,SAAS,EAAEC,aAAa,KAAK;IAC7F9G,QAAQ,CAAC,IAAI,CAAC;IAEd,IAAI;MACFJ,eAAe,CAAC,IAAI,CAAC;MAErB,MAAMmH,yBAAyB,GAAGD,aAAa,CAAChD,GAAG,CAAEkD,GAAG,IAAK;QAC3D,MAAMC,UAAU,GACdD,GAAG,CAACE,MAAM,KAAK,cAAc,GACzB,SAAS,GACTF,GAAG,CAACE,MAAM,KAAK,kBAAkB,GACjC,aAAa,GACb,QAAQ;QACd,MAAMC,SAAS,GAAGH,GAAG,CAACG,SAAS,KAAK,UAAU,GAAG,UAAU,GAAG,UAAU;QACxE,OAAO,GAAGA,SAAS,QAAQF,UAAU,EAAE;MACzC,CAAC,CAAC;MAEF,MAAMG,iBAAiB,GAAGL,yBAAyB,CAACM,IAAI,CAAC,OAAO,CAAC;MAEjE,MAAMlG,MAAM,GAAG,oDAAoDiG,iBAAiB;AAC1F;AACA,uBAAuBR,YAAY,CAACzE,OAAO;AAC3C;AACA,gBAAgBf,IAAI,CAACC,SAAS,CAAClD,YAAY,CAAC;AAC5C;AACA,sEAAsE;MAEhE,MAAMmD,MAAM,GAAGC,OAAO,CAACC,GAAG,CAACC,wBAAwB;MACnD,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,4CAA4C,EAAE;QACzEC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE,kBAAkB;UAClCC,aAAa,EAAE,UAAUR,MAAM;QACjC,CAAC;QACDS,IAAI,EAAEX,IAAI,CAACC,SAAS,CAAC;UACnBW,KAAK,EAAE,QAAQ;UACfC,QAAQ,EAAE,CACR;YAAEC,IAAI,EAAE,QAAQ;YAAEC,OAAO,EAAE;UAA4B,CAAC,EACxD;YAAED,IAAI,EAAE,MAAM;YAAEC,OAAO,EAAEhB;UAAO,CAAC,CAClC;UACDiB,UAAU,EAAE;QACd,CAAC;MACH,CAAC,CAAC;MAEF,IAAI,CAACV,QAAQ,CAACW,EAAE,EAAE;QAChB,MAAMC,SAAS,GAAG,MAAMZ,QAAQ,CAACa,IAAI,CAAC,CAAC;QACvC,MAAM,IAAIC,KAAK,CAACF,SAAS,CAACvC,KAAK,CAAC0C,OAAO,CAAC;MAC1C;MAEA,MAAMC,IAAI,GAAG,MAAMhB,QAAQ,CAACa,IAAI,CAAC,CAAC;MAClC,MAAMI,cAAc,GAAGD,IAAI,CAACE,OAAO,CAAC,CAAC,CAAC,CAACH,OAAO,CAACN,OAAO,CAACU,IAAI,CAAC,CAAC;;MAE7D;MACAgE,SAAS,CAAC1E,OAAO,GAAGQ,cAAc;MAClCkE,SAAS,CAACS,UAAU,GAAG,IAAI;MAC3BT,SAAS,CAACU,aAAa,GAAGX,YAAY;MACtCC,SAAS,CAACW,OAAO,GAAG,KAAK;MAEzB,MAAMC,aAAa,GAAG;QACpBtD,EAAE,EAAE0C,SAAS,CAAC1C,EAAE;QAChBsB,KAAK,EAAEoB,SAAS,CAACpB,KAAK;QACtBtD,OAAO,EAAEQ;MACX,CAAC;MACDzC,iBAAiB,CAAEwH,QAAQ,IAAK,CAAC,GAAGA,QAAQ,EAAED,aAAa,CAAC,CAAC;MAE7D3I,QAAQ,CAAE+E,SAAS,IAAKA,SAAS,CAACC,GAAG,CAAE6D,CAAC,IAAMA,CAAC,CAACxD,EAAE,KAAK0C,SAAS,CAAC1C,EAAE,GAAG0C,SAAS,GAAGc,CAAE,CAAC,CAAC;MACtF/H,eAAe,CAAC,KAAK,CAAC;MACtBE,eAAe,CAAC,IAAI,CAAC;;MAErB;MACA,MAAMmB,kBAAkB,CAAC,CAAC,GAAGhB,cAAc,EAAEwH,aAAa,CAAC,CAAC;IAC9D,CAAC,CAAC,OAAO5C,GAAG,EAAE;MACZC,OAAO,CAAC/E,KAAK,CAAC,6BAA6B,EAAE8E,GAAG,CAAC;MACjD7E,QAAQ,CAAC6E,GAAG,CAACpC,OAAO,CAAC;MACrB7C,eAAe,CAAC,KAAK,CAAC;IACxB,CAAC,SAAS;MACRE,eAAe,CAAC,KAAK,CAAC;IACxB;EACF,CAAC;;EAED;;EAEA;EACA,MAAM8H,eAAe,GAAI7D,IAAI,IAAK;IAChC3E,eAAe,CAAEsH,IAAI,IAAM,CAAAA,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEvC,EAAE,MAAKJ,IAAI,CAACI,EAAE,GAAG,IAAI,GAAGJ,IAAK,CAAC;EACjE,CAAC;;EAED;EACA,MAAM8D,eAAe,GAAGA,CAACC,KAAK,EAAEC,CAAC,KAAK;IACpC7I,cAAc,CAAC6I,CAAC,CAAC;IACjB7J,EAAE,CAAC8J,MAAM,CAACF,KAAK,CAACG,aAAa,CAAC,CAACC,KAAK,CAAC,CAAC;EACxC,CAAC;;EAED;EACA,MAAMC,eAAe,GAAGA,CAAA,KAAM;IAC5BjJ,cAAc,CAAC,IAAI,CAAC;EACtB,CAAC;;EAED;;EAEA;EACAlB,SAAS,CAAC,MAAM;IACd,IAAI,CAAC4C,MAAM,CAACD,OAAO,EAAE;IAErB,MAAMyH,KAAK,GAAG,GAAG;IACjB,MAAMC,MAAM,GAAG,GAAG;;IAElB;IACAnK,EAAE,CAAC8J,MAAM,CAACpH,MAAM,CAACD,OAAO,CAAC,CAAC2H,SAAS,CAAC,GAAG,CAAC,CAACC,MAAM,CAAC,CAAC;IAEjD,IAAI5J,QAAQ,EAAE;MACZ;MACA,MAAM6J,GAAG,GAAGtK,EAAE,CAAC8J,MAAM,CAACpH,MAAM,CAACD,OAAO,CAAC,CAAC8H,IAAI,CAAC,OAAO,EAAEL,KAAK,CAAC,CAACK,IAAI,CAAC,QAAQ,EAAEJ,MAAM,CAAC;;MAEjF;MACAG,GAAG,CACAE,MAAM,CAAC,MAAM,CAAC,CACdD,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC,CACZA,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC,CACZA,IAAI,CAAC,OAAO,EAAEL,KAAK,GAAG,CAAC,CAAC,CACxBK,IAAI,CAAC,QAAQ,EAAEJ,MAAM,GAAG,CAAC,CAAC,CAC1BI,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC,CACbA,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC,CACbE,KAAK,CAAC,MAAM,EAAE,MAAM,CAAC,CACrBA,KAAK,CAAC,QAAQ,EAAE,SAAS,CAAC,CAC1BA,KAAK,CAAC,cAAc,EAAE,CAAC,CAAC,CACxBA,KAAK,CAAC,QAAQ,EAAE,wCAAwC,CAAC;;MAE5D;MACAH,GAAG,CACAE,MAAM,CAAC,MAAM,CAAC,CACdD,IAAI,CAAC,GAAG,EAAE,EAAE,CAAC,CACbA,IAAI,CAAC,GAAG,EAAE,EAAE,CAAC,CACbE,KAAK,CAAC,WAAW,EAAE,MAAM,CAAC,CAC1BA,KAAK,CAAC,aAAa,EAAE,GAAG,CAAC,CACzBA,KAAK,CAAC,MAAM,EAAE,SAAS,CAAC,CACxBC,IAAI,CAAC,mBAAmB,CAAC;;MAE5B;MACA,MAAMC,CAAC,GAAGL,GAAG,CAACE,MAAM,CAAC,GAAG,CAAC,CAACD,IAAI,CAAC,WAAW,EAAE,qBAAqB,CAAC;;MAElE;MACA1J,KAAK,CAAC+J,OAAO,CAAEC,IAAI,IAAK;QACtB,MAAM1C,MAAM,GAAGxH,KAAK,CAACoF,IAAI,CAAE0D,CAAC,IAAKA,CAAC,CAACxD,EAAE,KAAK4E,IAAI,CAAC1C,MAAM,CAAC;QACtD,MAAMC,MAAM,GAAGzH,KAAK,CAACoF,IAAI,CAAE0D,CAAC,IAAKA,CAAC,CAACxD,EAAE,KAAK4E,IAAI,CAACzC,MAAM,CAAC;QACtD,IAAID,MAAM,IAAIC,MAAM,EAAE;UACpBuC,CAAC,CAACH,MAAM,CAAC,MAAM,CAAC,CACbD,IAAI,CACH,GAAG,EACH,KAAKpC,MAAM,CAACV,CAAC,IAAIU,MAAM,CAACT,CAAC,MAAMS,MAAM,CAACV,CAAC,IAAI,CAACU,MAAM,CAACT,CAAC,GAAGU,MAAM,CAACV,CAAC,IAAI,CAAC;AAClF,mBAAmBU,MAAM,CAACX,CAAC,IAAI,CAACU,MAAM,CAACT,CAAC,GAAGU,MAAM,CAACV,CAAC,IAAI,CAAC;AACxD,mBAAmBU,MAAM,CAACX,CAAC,IAAIW,MAAM,CAACV,CAAC,EAC3B,CAAC,CACA+C,KAAK,CAAC,MAAM,EAAE,MAAM,CAAC,CACrBA,KAAK,CAAC,QAAQ,EAAE,MAAM,CAAC,CACvBA,KAAK,CAAC,cAAc,EAAE,CAAC,CAAC;QAC7B;MACF,CAAC,CAAC;;MAEF;MACA,MAAMK,UAAU,GAAGH,CAAC,CACjBP,SAAS,CAAC,OAAO,CAAC,CAClB5F,IAAI,CAAC7D,KAAK,CAAC,CACXoK,KAAK,CAAC,CAAC,CACPP,MAAM,CAAC,GAAG,CAAC,CACXD,IAAI,CAAC,OAAO,EAAE,MAAM,CAAC,CACrBA,IAAI,CAAC,WAAW,EAAGV,CAAC,IAAK,aAAaA,CAAC,CAACpC,CAAC,IAAIoC,CAAC,CAACnC,CAAC,GAAG,CAAC;MAEvDoD,UAAU,CACPN,MAAM,CAAC,MAAM,CAAC,CACdD,IAAI,CAAC,IAAI,EAAE,EAAE,CAAC,CACdA,IAAI,CAAC,aAAa,EAAE,QAAQ,CAAC,CAC7BG,IAAI,CAAEb,CAAC,IAAKA,CAAC,CAACtC,KAAK,CAAC,CACpBgD,IAAI,CAAC,gBAAgB,EAAE,MAAM,CAAC;MAEjCO,UAAU,CACPN,MAAM,CAAC,QAAQ,CAAC,CAChBD,IAAI,CAAC,GAAG,EAAE,EAAE,CAAC,CACbE,KAAK,CAAC,MAAM,EAAGZ,CAAC,IAAMA,CAAC,CAACmB,gBAAgB,GAAG,SAAS,GAAGrI,QAAQ,CAACkH,CAAC,CAACrC,IAAI,CAAE,CAAC,CACzEiD,KAAK,CAAC,SAAS,EAAGZ,CAAC,IAAMA,CAAC,CAACP,OAAO,GAAG,GAAG,GAAG,CAAE,CAAC,CAC9CmB,KAAK,CAAC,QAAQ,EAAGZ,CAAC,IAAK;QACtB,IAAI,CAAA5I,YAAY,aAAZA,YAAY,uBAAZA,YAAY,CAAEgF,EAAE,MAAK4D,CAAC,CAAC5D,EAAE,EAAE,OAAO,MAAM,CAAC,KACxC,IAAI,CAAAlF,WAAW,aAAXA,WAAW,uBAAXA,WAAW,CAAEkF,EAAE,MAAK4D,CAAC,CAAC5D,EAAE,EAAE,OAAO,MAAM,CAAC,KAC5C,OAAO,MAAM;MACpB,CAAC,CAAC,CACDwE,KAAK,CAAC,cAAc,EAAGZ,CAAC,IAAK;QAC5B,IAAI,CAAA5I,YAAY,aAAZA,YAAY,uBAAZA,YAAY,CAAEgF,EAAE,MAAK4D,CAAC,CAAC5D,EAAE,EAAE,OAAO,CAAC,CAAC,KACnC,IAAI,CAAAlF,WAAW,aAAXA,WAAW,uBAAXA,WAAW,CAAEkF,EAAE,MAAK4D,CAAC,CAAC5D,EAAE,EAAE,OAAO,CAAC,CAAC,KACvC,OAAO,CAAC;MACf,CAAC,CAAC,CACDwE,KAAK,CAAC,QAAQ,EAAE,SAAS,CAAC,CAC1BQ,EAAE,CAAC,YAAY,EAAEtB,eAAe,CAAC,CACjCsB,EAAE,CAAC,YAAY,EAAEhB,eAAe,CAAC,CACjCgB,EAAE,CAAC,OAAO,EAAE,CAACrB,KAAK,EAAEC,CAAC,KAAKH,eAAe,CAACG,CAAC,CAAC,CAAC;;MAEhD;MACA,MAAMqB,OAAO,GAAGZ,GAAG,CAACE,MAAM,CAAC,GAAG,CAAC,CAACD,IAAI,CAAC,WAAW,EAAE,iBAAiBJ,MAAM,GAAG,EAAE,GAAG,CAAC;MAClF;IACF,CAAC,MAAM;MACL;MACA,MAAMG,GAAG,GAAGtK,EAAE,CAAC8J,MAAM,CAACpH,MAAM,CAACD,OAAO,CAAC,CAAC8H,IAAI,CAAC,OAAO,EAAEL,KAAK,CAAC,CAACK,IAAI,CAAC,QAAQ,EAAEJ,MAAM,CAAC;;MAEjF;MACAG,GAAG,CACAE,MAAM,CAAC,MAAM,CAAC,CACdD,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC,CACZA,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC,CACZA,IAAI,CAAC,OAAO,EAAEL,KAAK,GAAG,CAAC,CAAC,CACxBK,IAAI,CAAC,QAAQ,EAAEJ,MAAM,GAAG,CAAC,CAAC,CAC1BI,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC,CACbA,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC,CACbE,KAAK,CAAC,MAAM,EAAE,MAAM,CAAC,CACrBA,KAAK,CAAC,QAAQ,EAAE,SAAS,CAAC,CAC1BA,KAAK,CAAC,cAAc,EAAE,CAAC,CAAC,CACxBA,KAAK,CAAC,QAAQ,EAAE,wCAAwC,CAAC;;MAE5D;MACAH,GAAG,CACAE,MAAM,CAAC,MAAM,CAAC,CACdD,IAAI,CAAC,GAAG,EAAE,EAAE,CAAC,CACbA,IAAI,CAAC,GAAG,EAAE,EAAE,CAAC,CACbE,KAAK,CAAC,WAAW,EAAE,MAAM,CAAC,CAC1BA,KAAK,CAAC,aAAa,EAAE,GAAG,CAAC,CACzBA,KAAK,CAAC,MAAM,EAAE,SAAS,CAAC,CACxBC,IAAI,CAAC,mBAAmB,CAAC;MAE5BJ,GAAG,CACAE,MAAM,CAAC,MAAM,CAAC,CACdD,IAAI,CAAC,GAAG,EAAE,EAAE,CAAC,CACbA,IAAI,CAAC,GAAG,EAAE,EAAE,CAAC,CACbE,KAAK,CAAC,WAAW,EAAE,QAAQ,CAAC,CAC5BA,KAAK,CAAC,aAAa,EAAE,IAAI,CAAC,CAC1BA,KAAK,CAAC,MAAM,EAAE,SAAS,CAAC,CACxBC,IAAI,CAAC,kBAAkB,CAAC;;MAE3B;;MAEA;MACA,MAAMS,MAAM,GAAG;QAAEC,GAAG,EAAE,GAAG;QAAEC,KAAK,EAAE,EAAE;QAAEC,MAAM,EAAE,EAAE;QAAEC,IAAI,EAAE;MAAG,CAAC;MAC5D,MAAMC,UAAU,GAAGtB,KAAK,GAAGiB,MAAM,CAACI,IAAI,GAAGJ,MAAM,CAACE,KAAK;MACrD,MAAMI,WAAW,GAAGtB,MAAM,GAAGgB,MAAM,CAACC,GAAG,GAAGD,MAAM,CAACG,MAAM;MACvD,MAAMX,CAAC,GAAGL,GAAG,CAACE,MAAM,CAAC,GAAG,CAAC,CAACD,IAAI,CAAC,WAAW,EAAE,aAAaY,MAAM,CAACI,IAAI,KAAKJ,MAAM,CAACC,GAAG,GAAG,CAAC;MAEvF,MAAMM,MAAM,GAAG1L,EAAE,CAAC2L,WAAW,CAAC,CAAC,CAACC,MAAM,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAACC,KAAK,CAAC,CAAC,CAAC,EAAEL,UAAU,CAAC,CAAC;MACvE,MAAMM,MAAM,GAAG9L,EAAE,CAAC2L,WAAW,CAAC,CAAC,CAACC,MAAM,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAACC,KAAK,CAAC,CAACJ,WAAW,EAAE,CAAC,CAAC,CAAC;;MAExE;;MAEA;MACA,MAAMM,aAAa,GAAGpL,KAAK,CAACqL,MAAM,CAAEnC,CAAC,IAAKA,CAAC,CAAC1H,WAAW,CAAC,KAAK8J,SAAS,IAAIpC,CAAC,CAACxH,WAAW,CAAC,KAAK4J,SAAS,CAAC;;MAEvG;MACA,MAAMC,eAAe,GAAGrL,KAAK,CAACmL,MAAM,CAAEnB,IAAI,IAAK;QAC7C,MAAMsB,UAAU,GAAGxL,KAAK,CAACoF,IAAI,CAAE0D,CAAC,IAAKA,CAAC,CAACxD,EAAE,KAAK4E,IAAI,CAAC1C,MAAM,CAAC;QAC1D,MAAMiE,UAAU,GAAGzL,KAAK,CAACoF,IAAI,CAAE0D,CAAC,IAAKA,CAAC,CAACxD,EAAE,KAAK4E,IAAI,CAACzC,MAAM,CAAC;QAC1D,OAAO+D,UAAU,IAAIC,UAAU,IAAIA,UAAU,CAAChD,UAAU;MAC1D,CAAC,CAAC;;MAEF;MACA8C,eAAe,CAACtB,OAAO,CAAEC,IAAI,IAAK;QAChC,MAAM1C,MAAM,GAAGxH,KAAK,CAACoF,IAAI,CAAE0D,CAAC,IAAKA,CAAC,CAACxD,EAAE,KAAK4E,IAAI,CAAC1C,MAAM,CAAC;QACtD,MAAMC,MAAM,GAAGzH,KAAK,CAACoF,IAAI,CAAE0D,CAAC,IAAKA,CAAC,CAACxD,EAAE,KAAK4E,IAAI,CAACzC,MAAM,CAAC;QACtD;MACF,CAAC,CAAC;;MAEF;MACA,MAAM0C,UAAU,GAAGH,CAAC,CACjBP,SAAS,CAAC,aAAa,CAAC,CACxB5F,IAAI,CAACuH,aAAa,CAAC,CACnBhB,KAAK,CAAC,CAAC,CACPP,MAAM,CAAC,GAAG,CAAC,CACXD,IAAI,CAAC,OAAO,EAAE,YAAY,CAAC,CAC3BA,IAAI,CAAC,WAAW,EAAGV,CAAC,IAAK,aAAa6B,MAAM,CAAC7B,CAAC,CAAC1H,WAAW,CAAC,CAAC,KAAK2J,MAAM,CAACjC,CAAC,CAACxH,WAAW,CAAC,CAAC,GAAG,CAAC,CAC3FoI,KAAK,CAAC,QAAQ,EAAE,SAAS,CAAC,CAC1BQ,EAAE,CAAC,YAAY,EAAEtB,eAAe,CAAC,CACjCsB,EAAE,CAAC,YAAY,EAAEhB,eAAe,CAAC,CACjCgB,EAAE,CAAC,OAAO,EAAE,CAACrB,KAAK,EAAEC,CAAC,KAAKH,eAAe,CAACG,CAAC,CAAC;MAC7C;MAAA,CACCwC,IAAI,CACHrM,EAAE,CACCsM,IAAI,CAAC,CAAC,CACNrB,EAAE,CAAC,OAAO,EAAE,UAAUrB,KAAK,EAAEC,CAAC,EAAE;QAC/B,IAAIpI,YAAY,IAAIE,YAAY,EAAE;QAClC3B,EAAE,CAAC8J,MAAM,CAAC,IAAI,CAAC,CAACE,KAAK,CAAC,CAAC;MACzB,CAAC,CAAC,CACDiB,EAAE,CAAC,MAAM,EAAE,UAAUrB,KAAK,EAAEC,CAAC,EAAE;QAC9B,IAAIpI,YAAY,IAAIE,YAAY,EAAE;QAClC,MAAM,CAAC4K,EAAE,EAAEC,EAAE,CAAC,GAAGxM,EAAE,CAACyM,OAAO,CAAC7C,KAAK,EAAEe,CAAC,CAAC9E,IAAI,CAAC,CAAC,CAAC;QAC5C;QACA7F,EAAE,CAAC8J,MAAM,CAAC,IAAI,CAAC,CAACS,IAAI,CAAC,WAAW,EAAE,aAAagC,EAAE,KAAKC,EAAE,GAAG,CAAC;MAC9D,CAAC,CAAC,CACDvB,EAAE,CAAC,KAAK,EAAE,CAACrB,KAAK,EAAEC,CAAC,KAAK;QACvB,IAAIpI,YAAY,IAAIE,YAAY,EAAE;QAClC;QACA,MAAM,CAAC4K,EAAE,EAAEC,EAAE,CAAC,GAAGxM,EAAE,CAACyM,OAAO,CAAC7C,KAAK,EAAEe,CAAC,CAAC9E,IAAI,CAAC,CAAC,CAAC;QAC5C,MAAM6G,eAAe,GAAGhB,MAAM,CAACiB,MAAM,CAACJ,EAAE,CAAC;QACzC,MAAMK,eAAe,GAAGd,MAAM,CAACa,MAAM,CAACH,EAAE,CAAC;QACzC,MAAMK,eAAe,GAAGhD,CAAC,CAAC1H,WAAW,CAAC;QACtC,MAAM2K,eAAe,GAAGjD,CAAC,CAACxH,WAAW,CAAC;QACtC,MAAM0K,MAAM,GAAGL,eAAe,GAAGG,eAAe;QAChD,MAAMG,MAAM,GAAGJ,eAAe,GAAGE,eAAe;;QAEhD;;QAEA,IAAIlE,aAAa,GAAG,EAAE;QACtB;QACA,IAAInD,IAAI,CAACwH,GAAG,CAACF,MAAM,CAAC,GAAG,CAAC,EAAE;UACxBnE,aAAa,CAACsE,IAAI,CAAC;YACjBlE,MAAM,EAAE7G,WAAW;YACnB8G,SAAS,EAAE8D,MAAM,GAAG,CAAC,GAAG,UAAU,GAAG;UACvC,CAAC,CAAC;QACJ;QACA,IAAItH,IAAI,CAACwH,GAAG,CAACD,MAAM,CAAC,GAAG,CAAC,EAAE;UACxBpE,aAAa,CAACsE,IAAI,CAAC;YACjBlE,MAAM,EAAE3G,WAAW;YACnB4G,SAAS,EAAE+D,MAAM,GAAG,CAAC,GAAG,UAAU,GAAG;UACvC,CAAC,CAAC;QACJ;;QAEA;QACAhN,EAAE,CAAC8J,MAAM,CAAC,IAAI,CAAC,CAACS,IAAI,CAClB,WAAW,EACX,aAAamB,MAAM,CAAC7B,CAAC,CAAC1H,WAAW,CAAC,CAAC,KAAK2J,MAAM,CAACjC,CAAC,CAACxH,WAAW,CAAC,CAAC,GAChE,CAAC;;QAED;QACA,IAAIuG,aAAa,CAAC3D,MAAM,GAAG,CAAC,EAAE;UAC5B,MAAMkI,WAAW,GAAG3K,gBAAgB,CAAC,CAAC;UACtC,MAAMmG,SAAS,GAAG;YAChB,GAAGkB,CAAC;YACJ5D,EAAE,EAAEkH,WAAW;YACf1F,CAAC,EAAEoC,CAAC,CAACpC,CAAC;YACNC,CAAC,EAAEmC,CAAC,CAACnC,CAAC;YACN,CAACvF,WAAW,GAAGuK,eAAe;YAC9B,CAACrK,WAAW,GAAGuK,eAAe;YAC9BtD,OAAO,EAAE,IAAI;YACb0B,gBAAgB,EAAE;UACpB,CAAC;;UAED;UACApK,QAAQ,CAAE4H,IAAI,IAAK,CAAC,GAAGA,IAAI,EAAEG,SAAS,CAAC,CAAC;UACxC7H,QAAQ,CAAE0H,IAAI,IAAK,CAAC,GAAGA,IAAI,EAAE;YAAEL,MAAM,EAAE0B,CAAC,CAAC5D,EAAE;YAAEmC,MAAM,EAAE+E;UAAY,CAAC,CAAC,CAAC;;UAEpE;UACA1E,oCAAoC,CAACoB,CAAC,EAAElB,SAAS,EAAEC,aAAa,CAAC;QACnE;MACF,CAAC,CACL,CAAC;MAEHkC,UAAU,CACPN,MAAM,CAAC,QAAQ,CAAC,CAChBD,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC,CACZE,KAAK,CAAC,MAAM,EAAGZ,CAAC,IAAMA,CAAC,CAACmB,gBAAgB,GAAG,SAAS,GAAGrI,QAAQ,CAACkH,CAAC,CAACrC,IAAI,CAAE,CAAC,CACzEiD,KAAK,CAAC,SAAS,EAAGZ,CAAC,IAAMA,CAAC,CAACP,OAAO,GAAG,GAAG,GAAG,CAAE,CAAC,CAC9CmB,KAAK,CAAC,QAAQ,EAAGZ,CAAC,IAAK;QACtB,IAAI,CAAA5I,YAAY,aAAZA,YAAY,uBAAZA,YAAY,CAAEgF,EAAE,MAAK4D,CAAC,CAAC5D,EAAE,EAAE,OAAO,MAAM,CAAC,KACxC,IAAI,CAAAlF,WAAW,aAAXA,WAAW,uBAAXA,WAAW,CAAEkF,EAAE,MAAK4D,CAAC,CAAC5D,EAAE,EAAE,OAAO,MAAM,CAAC,KAC5C,OAAO,MAAM;MACpB,CAAC,CAAC,CACDwE,KAAK,CAAC,cAAc,EAAGZ,CAAC,IAAK;QAC5B,IAAI,CAAA5I,YAAY,aAAZA,YAAY,uBAAZA,YAAY,CAAEgF,EAAE,MAAK4D,CAAC,CAAC5D,EAAE,EAAE,OAAO,CAAC,CAAC,KACnC,IAAI,CAAAlF,WAAW,aAAXA,WAAW,uBAAXA,WAAW,CAAEkF,EAAE,MAAK4D,CAAC,CAAC5D,EAAE,EAAE,OAAO,CAAC,CAAC,KACvC,OAAO,CAAC;MACf,CAAC,CAAC;IACN;EACF,CAAC,EAAE,CACDxF,QAAQ,EACRE,KAAK,EACLE,KAAK,EACLI,YAAY,EACZF,WAAW,EACXoB,WAAW,EACXE,WAAW,EACXZ,YAAY,EACZE,YAAY,CACb,CAAC;;EAEF;;EAEA;EACA,MAAMyL,MAAM,GAAGA,CAAA,KAAM;IACnB,MAAMC,eAAe,gBACnBlN,OAAA;MAAAmN,QAAA,GAAe,GAAC,EAAS,GAAC;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAChC;IACD,MAAMC,cAAc,gBAClBxN,OAAA;MAAAmN,QAAA,GAAe,GAAC,EAAS,GAAC;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAChC;IAED,MAAME,QAAQ,GAAG,CAAE,UAAW;IAC9B,MAAMC,sBAAsB,GAAGpN,QAAQ,GACnC;MAAEqN,eAAe,EAAE,MAAM;MAAEC,KAAK,EAAE;IAAU,CAAC,GAC7C;MAAED,eAAe,EAAE,aAAa;MAAEC,KAAK,EAAE;IAAU,CAAC;IACxD,MAAMC,qBAAqB,GAAG,CAACvN,QAAQ,GACnC;MAAEqN,eAAe,EAAE,MAAM;MAAEC,KAAK,EAAE;IAAU,CAAC,GAC7C;MAAED,eAAe,EAAE,aAAa;MAAEC,KAAK,EAAE;IAAU,CAAC;IAExD,oBACE5N,OAAA;MAAKsK,KAAK,EAAE;QAAEwD,OAAO,EAAE,MAAM;QAAEC,UAAU,EAAE,QAAQ;QAAEJ,eAAe,EAAE,SAAS;QAAEK,OAAO,EAAE;MAAY,CAAE;MAAAb,QAAA,gBACtGnN,OAAA;QAAKsK,KAAK,EAAE;UAAE,GAAGmD,QAAQ;UAAE,GAAGC,sBAAsB;UAAEO,WAAW,EAAE;QAAM,CAAE;QAACC,OAAO,EAAEA,CAAA,KAAM3N,WAAW,CAAC,IAAI,CAAE;QAAA4M,QAAA,GAC1GD,eAAe,EAAC,kBAEnB;MAAA;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eAENvN,OAAA;QAAKsK,KAAK,EAAE;UAAE,GAAGmD,QAAQ;UAAE,GAAGI;QAAsB,CAAE;QAACK,OAAO,EAAEA,CAAA,KAAM3N,WAAW,CAAC,KAAK,CAAE;QAAA4M,QAAA,GACtFK,cAAc,EAAC,iBAElB;MAAA;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAEV,CAAC;;EAED;EACA,MAAMY,SAAS,GAAGA,CAAC;IAAEzI;EAAK,CAAC,KAAK;IAC9B,IAAI,CAACA,IAAI,EAAE;MACT,oBACE1F,OAAA;QACEsK,KAAK,EAAE;UACL0D,OAAO,EAAE,MAAM;UACfF,OAAO,EAAE,MAAM;UACfC,UAAU,EAAE,QAAQ;UACpBK,cAAc,EAAE,QAAQ;UACxBpE,MAAM,EAAE,OAAO;UACf4D,KAAK,EAAE;QACT,CAAE;QAAAT,QAAA,eAEFnN,OAAA;UAAAmN,QAAA,EAAG;QAA+B;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACnC,CAAC;IAEV;IAEA,oBACEvN,OAAA;MACEsK,KAAK,EAAE;QACL+D,MAAM,EAAE,mBAAmB;QAC3BC,YAAY,EAAE,KAAK;QACnBX,eAAe,EAAE,SAAS;QAC1BK,OAAO,EAAE;MACX,CAAE;MAAAb,QAAA,gBAEFnN,OAAA;QAAAmN,QAAA,EACGzH,IAAI,CAAC0B,KAAK,IAAI;MAAkB;QAAAgG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC/B,CAAC,eAGLvN,OAAA;QAAKsK,KAAK,EAAE;UAAEiE,QAAQ,EAAE,UAAU;UAAEC,YAAY,EAAE;QAAO,CAAE;QAAArB,QAAA,eAEzDnN,OAAA;UACEsK,KAAK,EAAE;YACLc,IAAI,EAAE,IAAI;YACVH,GAAG,EAAE,IAAI;YACTsD,QAAQ,EAAE,UAAU;YACpBX,KAAK,EAAE,SAAS;YAChBa,QAAQ,EAAE;UACZ,CAAE;UAAAtB,QAAA,EACH;QAED;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC,eAGNvN,OAAA,CAAC0O,QAAQ;QAAChJ,IAAI,EAAEA;MAAK;QAAA0H,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAGxBvN,OAAA,CAAC2O,gBAAgB;QAACjJ,IAAI,EAAEA;MAAK;QAAA0H,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,EAG/BjN,QAAQ,gBACPN,OAAA,CAAC4O,sBAAsB;QAAAxB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;MAAA;MAE1B;MACAvN,OAAA,CAAC6O,eAAe;QAACnJ,IAAI,EAAEA;MAAK;QAAA0H,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAC/B;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC;EAEV,CAAC;;EAED;EACA,MAAMmB,QAAQ,GAAGA,CAAC;IAAEhJ;EAAK,CAAC,KAAK;IAAAvF,EAAA;IAC7B,MAAM,CAAC2O,WAAW,EAAEC,cAAc,CAAC,GAAGrP,QAAQ,CAAC,IAAI,CAAC;;IAEpD;IACA,MAAMsP,YAAY,GAAGA,CAAA,kBACnBhP,OAAA;MAAAoN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEK,CACN;IAED,oBACEvN,OAAA;MAAAmN,QAAA,gBACEnN,OAAA,CAACgP,YAAY;QAAA5B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAEhBvN,OAAA;QAAAmN,QAAA,gBACEnN,OAAA;UAAAmN,QAAA,EAAiB;QAAgB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACvCvN,OAAA;UAAAmN,QAAA,EAAiB;QAAU;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC9B,CAAC,eAENvN,OAAA;QAAAmN,QAAA,gBACEnN,OAAA;UAAAmN,QAAA,GAAc,6BAA2B,EAAC2B,WAAW,GAAG,OAAO,GAAG,QAAQ,EAAC,GAAC;QAAA;UAAA1B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eAClFvN,OAAA;UAAAmN,QAAA,EAAezH,IAAI,CAAC5B;QAAO;UAAAsJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC/B,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAEV,CAAC;;EAED;EAAApN,EAAA,CA3BMuO,QAAQ;EA4Bd,MAAMC,gBAAgB,GAAGA,CAAC;IAAEjJ;EAAK,CAAC,KAAK;IAAArF,GAAA;IACrC,MAAM,CAAC4O,cAAc,EAAEC,iBAAiB,CAAC,GAAGxP,QAAQ,CAAC,IAAI,CAAC;IAE1D,MAAMsP,YAAY,GAAGA,CAAA,kBACnBhP,OAAA;MAAAoN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEK,CACN;IAED,MAAM4B,WAAW,GAAGzJ,IAAI,CAACyJ,WAAW,IAAI,KAAK;IAC7C,MAAMC,eAAe,GAAG1J,IAAI,CAAC0J,eAAe,IAAI,KAAK;IACrD,MAAMC,UAAU,GAAG3J,IAAI,CAAC2J,UAAU,IAAI,KAAK;IAE3C,oBACErP,OAAA;MAAAmN,QAAA,eACEnN,OAAA,CAACgP,YAAY;QAAA5B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAGb,CAAC;EAEV,CAAC;;EAED;EAAAlN,GAAA,CAtBMsO,gBAAgB;EAuBtB,MAAMC,sBAAsB,GAAGA,CAAA,KAAM;IACnC,oBACE5O,OAAA;MAAAmN,QAAA,gBACEnN,OAAA;QAAAmN,QAAA,EAAgB;MAAuC;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eAC7DvN,OAAA;QACEsP,IAAI,EAAE,CAAE;QACRC,KAAK,EAAEvO,SAAU;QACjBwO,QAAQ,EAAG7I,CAAC,IAAK1F,YAAY,CAAC0F,CAAC,CAACsB,MAAM,CAACsH,KAAK;QAC5C;MAAA;QAAAnC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD,CAAC,eACFvN,OAAA;QACEkO,OAAO,EAAEhG,kBAAmB;QAC5BuH,QAAQ,EAAE,CAAC3O,YAAY,IAAIQ,YAAY,IAAIE,YAAY,IAAI,CAACJ;QAC5D;QAAA+L,QAAA,EACD;MAED;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC;EAEV,CAAC;;EAED;EACA,MAAMsB,eAAe,GAAGA,CAAC;IAAEnJ;EAAK,CAAC,KAAK;IAAA,IAAAgK,qBAAA,EAAAC,kBAAA,EAAAC,qBAAA,EAAAC,qBAAA,EAAAC,qBAAA,EAAAC,iBAAA,EAAAC,mBAAA;IACpC,MAAMC,SAAS,GAAG,CAAC,CAACvK,IAAI,CAACwD,aAAa;IACtC,MAAMgH,aAAa,GAAGD,SAAS,IAAAP,qBAAA,GAAGhK,IAAI,CAACwD,aAAa,CAAClD,YAAY,cAAA0J,qBAAA,cAAAA,qBAAA,GAAI,KAAK,GAAG,IAAI;IACjF,MAAMS,YAAY,IAAAR,kBAAA,GAAGjK,IAAI,CAACM,YAAY,cAAA2J,kBAAA,cAAAA,kBAAA,GAAI,KAAK;IAC/C,MAAMS,iBAAiB,GAAGH,SAAS,IAAAL,qBAAA,GAAGlK,IAAI,CAACwD,aAAa,CAAChD,gBAAgB,cAAA0J,qBAAA,cAAAA,qBAAA,GAAI,KAAK,GAAG,IAAI;IACzF,MAAMS,gBAAgB,IAAAR,qBAAA,GAAGnK,IAAI,CAACQ,gBAAgB,cAAA2J,qBAAA,cAAAA,qBAAA,GAAI,KAAK;IACvD,MAAMS,YAAY,GAAGL,SAAS,IAAAH,qBAAA,GAAGpK,IAAI,CAACwD,aAAa,CAAC9C,WAAW,cAAA0J,qBAAA,cAAAA,qBAAA,GAAI,KAAK,GAAG,IAAI;IAC/E,MAAMS,WAAW,IAAAR,iBAAA,GAAGrK,IAAI,CAACU,WAAW,cAAA2J,iBAAA,cAAAA,iBAAA,GAAI,KAAK;IAC7C,MAAMS,MAAM,IAAAR,mBAAA,GAAGtK,IAAI,CAACY,aAAa,cAAA0J,mBAAA,cAAAA,mBAAA,GAAI,sBAAsB;;IAE3D;IACA,MAAMS,WAAW,GAAGA,CAACC,SAAS,EAAEC,QAAQ,KAAK;MAC3C;IAAA,CACD;IAED,MAAMC,gBAAgB,GAAGA,CAACC,KAAK,EAAEjD,KAAK,EAAE8C,SAAS,EAAEC,QAAQ,KAAK;MAC9D;IAAA,CACD;IAED,oBACE3Q,OAAA;MAAAmN,QAAA,GACGyD,gBAAgB,CAAC,SAAS,EAAE,SAAS,EAAEV,aAAa,EAAEC,YAAY,CAAC,EACnES,gBAAgB,CAAC,aAAa,EAAE,SAAS,EAAER,iBAAiB,EAAEC,gBAAgB,CAAC,EAC/EO,gBAAgB,CAAC,QAAQ,EAAE,SAAS,EAAEN,YAAY,EAAEC,WAAW,CAAC;IAAA;MAAAnD,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9D,CAAC;EAEV,CAAC;;EAED;;EAEA,oBACEvN,OAAA;IAAKsK,KAAK,EAAE;MAAEwG,UAAU,EAAE,mBAAmB;MAAEvC,QAAQ,EAAE;IAAW,CAAE;IAAApB,QAAA,gBACpEnN,OAAA,CAACiN,MAAM;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EAETjN,QAAQ,IAAI,CAACc,mBAAmB,iBAC/BpB,OAAA;MAAKsK,KAAK,EAAE;QAAEqD,eAAe,EAAE,SAAS;QAAEG,OAAO,EAAE,MAAM;QAAEC,UAAU,EAAE,QAAQ;QAAEC,OAAO,EAAE;MAAY,CAAE;MAAAb,QAAA,eACtGnN,OAAA;QAAM+Q,QAAQ,EAAErK,0BAA2B;QAAC4D,KAAK,EAAE;UAAEwD,OAAO,EAAE,MAAM;UAAEC,UAAU,EAAE;QAAS,CAAE;QAAAZ,QAAA,gBAC3FnN,OAAA;UACEqH,IAAI,EAAC,MAAM;UACXkI,KAAK,EAAErO,cAAe;UACtBsO,QAAQ,EAAG7I,CAAC,IAAKxF,iBAAiB,CAACwF,CAAC,CAACsB,MAAM,CAACsH,KAAK,CAAE;UACnDyB,WAAW,EAAC;UACZ;QAAA;UAAA5D,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACD,CAAC,eACFvN,OAAA;UACEqH,IAAI,EAAC,QAAQ;UACboI,QAAQ,EAAEnO,YAAY,IAAIE;UAC1B;UAAA2L,QAAA,EAEC3L,YAAY,GAAG,eAAe,GAAGF,YAAY,GAAG,eAAe,GAAG;QAAQ;UAAA8L,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACrE,CAAC,EACR7L,KAAK,iBACJ1B,OAAA;UAAKsK,KAAK,EAAE;YAAE2G,UAAU,EAAE,MAAM;YAAErD,KAAK,EAAE,SAAS;YAAEa,QAAQ,EAAE;UAAW,CAAE;UAAAtB,QAAA,EACxEzL;QAAK;UAAA0L,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CACN;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACG;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ,CACN,eAEDvN,OAAA;MAAKsK,KAAK,EAAE;QAAEwD,OAAO,EAAE,MAAM;QAAEE,OAAO,EAAE,MAAM;QAAEkD,QAAQ,EAAE,QAAQ;QAAElG,MAAM,EAAE;MAAS,CAAE;MAAAmC,QAAA,gBAErFnN,OAAA;QAAKsK,KAAK,EAAE;UAAE6G,SAAS,EAAE,KAAK;UAAElD,WAAW,EAAE;QAAO,CAAE;QAAAd,QAAA,eACpDnN,OAAA;UAAKoR,GAAG,EAAE7O;QAAO;UAAA6K,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACjB,CAAC,eAGNvN,OAAA;QAAKsK,KAAK,EAAE;UAAE6G,SAAS,EAAE;QAAM,CAAE;QAAAhE,QAAA,GAC9B,CAAC7L,YAAY,IAAIE,YAAY,kBAC5BxB,OAAA;UAAKsK,KAAK,EAAE;YAAE+G,SAAS,EAAE,QAAQ;YAAE7C,YAAY,EAAE,MAAM;YAAEZ,KAAK,EAAE;UAAU,CAAE;UAAAT,QAAA,EACzE7L,YAAY,GAAG,eAAe,GAAG;QAAe;UAAA8L,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC9C,CACN,eAEDvN,OAAA,CAACmO,SAAS;UAACzI,IAAI,EAAElF,KAAK,CAACoF,IAAI,CAAE0D,CAAC,IAAKA,CAAC,CAACxD,EAAE,MAAM,CAAAlF,WAAW,aAAXA,WAAW,uBAAXA,WAAW,CAAEkF,EAAE,MAAIhF,YAAY,aAAZA,YAAY,uBAAZA,YAAY,CAAEgF,EAAE,EAAC;QAAE;UAAAsH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACnF,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,EAGLzL,aAAa,iBACZ9B,OAAA;MAAAmN,QAAA,gBACEnN,OAAA;QAAKsK,KAAK,EAAE;UAAEkE,YAAY,EAAE,KAAK;UAAEC,QAAQ,EAAE,UAAU;UAAEb,KAAK,EAAE;QAAU,CAAE;QAAAT,QAAA,eAC1EnN,OAAA;UAAAmN,QAAA,EAAQ;QAAe;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC7B,CAAC,eACNvN,OAAA;QACE;QACAkO,OAAO,EAAEA,CAAA,KAAM;UACb5F,oCAAoC,CAClCxG,aAAa,CAACyG,YAAY,EAC1BzG,aAAa,CAAC0G,SAAS,EACvB1G,aAAa,CAAC2G,aAChB,CAAC;UACD1G,gBAAgB,CAAC,IAAI,CAAC;QACxB,CAAE;QAAAoL,QAAA,EACH;MAED;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAETvN,OAAA;QACE;QACAkO,OAAO,EAAEA,CAAA,KAAM;UACbzN,QAAQ,CAAE4H,IAAI,IAAKA,IAAI,CAACwD,MAAM,CAAE9D,EAAE,IAAKA,EAAE,CAACjC,EAAE,KAAKhE,aAAa,CAAC0G,SAAS,CAAC1C,EAAE,CAAC,CAAC;UAC7EnF,QAAQ,CAAE0H,IAAI,IAAKA,IAAI,CAACwD,MAAM,CAAEyF,EAAE,IAAKA,EAAE,CAACrJ,MAAM,KAAKnG,aAAa,CAAC0G,SAAS,CAAC1C,EAAE,CAAC,CAAC;UACjF/D,gBAAgB,CAAC,IAAI,CAAC;QACxB,CAAE;QAAAoL,QAAA,EACH;MAED;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACrN,GAAA,CArgCID,qBAAqB;AAAAsR,EAAA,GAArBtR,qBAAqB;AAugC3B,eAAeA,qBAAqB;AAAC,IAAAsR,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}