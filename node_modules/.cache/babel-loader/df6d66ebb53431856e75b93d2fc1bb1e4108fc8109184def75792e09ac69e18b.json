{"ast":null,"code":"var _jsxFileName = \"/Users/jasonding/Desktop/Robot2025/src/components/Showcase.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$(),\n  _s4 = $RefreshSig$(),\n  _s5 = $RefreshSig$();\nimport React, { useState, useEffect, useRef, useCallback, useMemo } from 'react';\n\n/** 生成随机 ID 的小工具函数，用于给新添加的事件分配稳定的 event.id */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction generateUniqueId() {\n  return Math.random().toString(36).substr(2, 9);\n}\n\n/** \n * Helper function to generate a curved path (cubic Bezier curve example)\n */\nfunction generateCurvePath(x1, y1, x2, y2) {\n  const cx = (x1 + x2) / 2;\n  return `M ${x1},${y1} C ${cx},${y1} ${cx},${y2} ${x2},${y2}`;\n}\n\n/**\n * Modal Component for adding new events\n * - 通过下拉菜单选择要添加到哪条时间线\n */\nfunction AddEventModal({\n  isOpen,\n  onClose,\n  onSubmit,\n  timelineOptions = []\n}) {\n  _s();\n  const [date, setDate] = useState('');\n  const [title, setTitle] = useState('');\n  const [detail, setDetail] = useState('');\n  const [selectedTimeline, setSelectedTimeline] = useState(0);\n\n  // 只在 \"modal 打开\" 时执行一次选中第一个时间线（如果存在）\n  useEffect(() => {\n    if (isOpen && timelineOptions.length > 0) {\n      console.log('[AddEventModal] Modal is open. Default to first timeline:', timelineOptions[0]);\n      setSelectedTimeline(timelineOptions[0].index);\n    }\n  }, [isOpen]); // 注意：只依赖 isOpen，避免重复\n\n  if (!isOpen) return null;\n  const handleSubmit = e => {\n    e.preventDefault();\n    console.log(\"AddEventModal handleSubmit: selectedTimeline =\", selectedTimeline);\n    if (date && title) {\n      // 把选择的 timelineIndex + 其余字段传回父组件\n      onSubmit({\n        timelineIndex: selectedTimeline,\n        date,\n        title,\n        detail\n      });\n      onClose();\n      // 重置表单\n      setDate('');\n      setTitle('');\n      setDetail('');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      position: 'fixed',\n      top: 0,\n      left: 0,\n      right: 0,\n      bottom: 0,\n      backgroundColor: 'rgba(0, 0, 0, 0.5)',\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      zIndex: 1000\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        backgroundColor: 'white',\n        padding: '20px',\n        borderRadius: '8px',\n        width: '400px',\n        boxShadow: '0 4px 8px rgba(0,0,0,0.2)'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        style: {\n          marginTop: 0\n        },\n        children: \"Add New Event\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [timelineOptions.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginBottom: '15px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            style: {\n              display: 'block',\n              marginBottom: '5px'\n            },\n            children: \"Select Timeline:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: selectedTimeline,\n            onChange: e => setSelectedTimeline(parseInt(e.target.value)),\n            style: {\n              width: '100%',\n              padding: '8px',\n              borderRadius: '4px',\n              border: '1px solid #ddd'\n            },\n            children: timelineOptions.map((option, idx) => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: option.index,\n              children: option.title\n            }, idx, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginBottom: '15px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            style: {\n              display: 'block',\n              marginBottom: '5px'\n            },\n            children: \"Date (YYYY-MM-DD):\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"date\",\n            value: date,\n            onChange: e => setDate(e.target.value),\n            style: {\n              width: '100%',\n              padding: '8px',\n              borderRadius: '4px',\n              border: '1px solid #ddd'\n            },\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginBottom: '15px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            style: {\n              display: 'block',\n              marginBottom: '5px'\n            },\n            children: \"Title:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: title,\n            onChange: e => setTitle(e.target.value),\n            style: {\n              width: '100%',\n              padding: '8px',\n              borderRadius: '4px',\n              border: '1px solid #ddd'\n            },\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginBottom: '15px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            style: {\n              display: 'block',\n              marginBottom: '5px'\n            },\n            children: \"Details:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            value: detail,\n            onChange: e => setDetail(e.target.value),\n            style: {\n              width: '100%',\n              padding: '8px',\n              borderRadius: '4px',\n              border: '1px solid #ddd',\n              minHeight: '100px'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            justifyContent: 'flex-end',\n            gap: '10px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: onClose,\n            style: {\n              padding: '8px 16px',\n              border: '1px solid #ddd',\n              borderRadius: '4px',\n              backgroundColor: '#f1f1f1',\n              cursor: 'pointer'\n            },\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            style: {\n              padding: '8px 16px',\n              border: 'none',\n              borderRadius: '4px',\n              backgroundColor: '#007BFF',\n              color: 'white',\n              cursor: 'pointer'\n            },\n            children: \"Add Event\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n}\n\n/**\n * ConnectionLine 组件：绘制正式的红色连接线，\n * hover 时加粗并增加 glow 效果，点击时弹出确认后删除该连接。\n */\n_s(AddEventModal, \"0s+0ktVgB6OJ6Wbe5rTfqA5loF8=\");\n_c = AddEventModal;\nfunction ConnectionLine({\n  fromPos,\n  toPos,\n  reason,\n  onDelete\n}) {\n  _s2();\n  const [hovered, setHovered] = useState(false);\n  const strokeColor = hovered ? 'rgba(220,20,60,0.9)' : 'rgba(255,0,0,0.4)';\n  const strokeWidth = hovered ? 3 : 2;\n\n  // 生成贝塞尔曲线\n  const pathData = generateCurvePath(fromPos.x, fromPos.y, toPos.x, toPos.y);\n  return /*#__PURE__*/_jsxDEV(\"g\", {\n    onMouseEnter: () => setHovered(true),\n    onMouseLeave: () => setHovered(false),\n    onClick: e => {\n      e.stopPropagation();\n      if (window.confirm('Delete this connection?')) {\n        onDelete();\n      }\n    },\n    style: {\n      cursor: 'pointer'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"path\", {\n      d: pathData,\n      stroke: strokeColor,\n      strokeWidth: strokeWidth,\n      fill: \"none\",\n      style: {\n        pointerEvents: 'all',\n        filter: hovered ? 'drop-shadow(0 0 3px rgba(255,0,0,0.3))' : 'none'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n      x: (fromPos.x + toPos.x) / 2,\n      y: (fromPos.y + toPos.y) / 2 - 5,\n      fill: strokeColor,\n      fontSize: hovered ? 14 : 12,\n      fontWeight: hovered ? 'bold' : 'normal',\n      textAnchor: \"middle\",\n      style: {\n        pointerEvents: 'none',\n        filter: hovered ? 'drop-shadow(0 1px 2px rgba(255,255,255,0.8))' : 'none'\n      },\n      children: reason\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 190,\n    columnNumber: 5\n  }, this);\n}\n\n/** \n * 生成一个上下交错的偏移数组。\n * count=1 => [0]\n * count=2 => [-40, 40]\n * count=3 => [-80, 0, 80]\n * gap 用于控制卡片间的垂直间距\n */\n_s2(ConnectionLine, \"V8YbV+gTZxGliGj1g0fftBlvsq4=\");\n_c2 = ConnectionLine;\nfunction getOffsets(count, gap = 80) {\n  const offsets = [];\n  const half = Math.floor(count / 2);\n  for (let i = 0; i < count; i++) {\n    offsets.push((i - half) * gap);\n  }\n  // 偶数个让它们对称\n  if (count % 2 === 0) {\n    offsets.forEach((val, idx) => {\n      offsets[idx] = val + gap / 2;\n    });\n  }\n  return offsets;\n}\n\n/**\n * 全局悬浮弹框组件：接收当前 hoveredEvent（包含 rect、title、detail 等信息），在页面最顶层显示\n */\nfunction GlobalTooltip({\n  hoveredEvent\n}) {\n  if (!hoveredEvent) return null;\n  const {\n    rect,\n    title,\n    detail\n  } = hoveredEvent;\n  if (!rect) return null;\n\n  // 让弹框中心对准卡片的中点，并稍微往下移动\n  const left = rect.left + rect.width / 2 - 100; // 让宽度 200 px 居中\n  const top = rect.bottom + 8; // 往下 8px\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      position: 'fixed',\n      top,\n      left,\n      width: '200px',\n      backgroundColor: '#fff',\n      border: '1px solid #ddd',\n      borderRadius: '6px',\n      boxShadow: '0 4px 8px rgba(0,0,0,0.15)',\n      padding: '8px',\n      fontSize: '12px',\n      zIndex: 9999,\n      pointerEvents: 'none'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        fontWeight: 'bold',\n        marginBottom: '4px'\n      },\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: detail\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 264,\n    columnNumber: 5\n  }, this);\n}\n\n/**\n * EventGroup 组件：\n * - 同一组（<= 3 个月间隔）的事件在同一个纵向位置 groupTop\n * - 每个事件卡片上下错落排布\n * - Hover 时在全局显示弹出框\n */\n_c3 = GlobalTooltip;\nfunction EventGroup({\n  events,\n  registerPosition,\n  onEventClick,\n  onDelete,\n  scrollPos,\n  groupTop,\n  setHoveredEvent\n}) {\n  _s3();\n  const sortedEvents = [...events].sort((a, b) => new Date(a.date) - new Date(b.date));\n  const cardRefs = useRef([]);\n\n  // 这里可调 gap 来增加/减少组内事件间的垂直距离\n  const offsets = getOffsets(sortedEvents.length, 80);\n\n  /**\n   * 在这里我们只在以下变量改变时才调用：  \n   * - sortedEvents本身（事件数据变动）  \n   * - registerPosition引用变动（一般不会变，因为用useCallback了）  \n   * - scrollPos变动（页面滚动）  \n   */\n  useEffect(() => {\n    sortedEvents.forEach((ev, i) => {\n      if (cardRefs.current[i]) {\n        const rect = cardRefs.current[i].getBoundingClientRect();\n        const centerPos = {\n          x: rect.left + rect.width / 2,\n          y: rect.top + rect.height / 2\n        };\n        // 调用父级的 registerPosition\n        registerPosition(ev.id, centerPos);\n      }\n    });\n  }, [sortedEvents, registerPosition, scrollPos]);\n\n  // Hover 时调用 setHoveredEvent\n  const handleMouseEnter = (ev, i) => {\n    if (!ev.detail) return;\n    const rect = cardRefs.current[i].getBoundingClientRect();\n    setHoveredEvent({\n      rect,\n      title: ev.title,\n      detail: ev.detail\n    });\n  };\n  const handleMouseLeave = () => {\n    setHoveredEvent(null);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      position: 'absolute',\n      top: groupTop,\n      left: 0,\n      width: '280px',\n      zIndex: 500\n    },\n    children: sortedEvents.map((ev, i) => {\n      const offsetTop = offsets[i];\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: el => cardRefs.current[i] = el,\n        style: {\n          position: 'absolute',\n          left: '10px',\n          top: offsetTop + 'px',\n          width: '180px',\n          height: '60px',\n          padding: '10px',\n          border: '2px solid #ddd',\n          borderRadius: '8px',\n          backgroundColor: '#fff',\n          boxShadow: '0 2px 4px rgba(0,0,0,0.08)',\n          cursor: 'pointer',\n          transition: 'all 0.2s ease'\n        },\n        onClick: () => onEventClick(ev.id),\n        onMouseEnter: () => handleMouseEnter(ev, i),\n        onMouseLeave: handleMouseLeave,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            fontWeight: 'bold',\n            marginBottom: '4px',\n            fontSize: '14px',\n            color: '#007BFF'\n          },\n          children: ev.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 368,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            fontSize: '13px',\n            marginBottom: '6px',\n            color: '#555'\n          },\n          children: ev.date\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 377,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: e => {\n            e.stopPropagation();\n            onDelete(ev.id);\n          },\n          style: {\n            position: 'absolute',\n            top: '6px',\n            right: '6px',\n            background: 'transparent',\n            border: 'none',\n            color: 'rgba(0,0,255,0.6)',\n            fontSize: '14px',\n            cursor: 'pointer',\n            transition: 'color 0.2s ease'\n          },\n          children: \"\\xD7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 386,\n          columnNumber: 13\n        }, this)]\n      }, ev.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 346,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 334,\n    columnNumber: 5\n  }, this);\n}\n\n/**\n * Timeline 组件：一条时间轴 + 标题 + 事件分组\n */\n_s3(EventGroup, \"nyqydayDKU2pC+rTCyb4pjAG0+4=\");\n_c4 = EventGroup;\nfunction Timeline({\n  timelineIndex,\n  wave,\n  registerPosition,\n  onEventClick,\n  onDeleteEvent,\n  scrollPos,\n  setHoveredEvent\n}) {\n  const timelineHeight = 1600;\n\n  // 根据 wave.events 里最早的日期，确定本时间轴的起点\n  const timestamps = wave.events.map(e => new Date(e.date).getTime());\n  const firstEventTime = timestamps.length > 0 ? Math.min(...timestamps) : Date.now();\n  const firstEventDate = new Date(firstEventTime);\n  const timelineStart = new Date(firstEventDate.getFullYear(), 0, 1).getTime();\n\n  // 这里定义时间跨度，比如 8 年\n  const eightYearsInMs = 8 * 365.25 * 24 * 60 * 60 * 1000;\n  const timelineEndTime = timelineStart + eightYearsInMs;\n  const safeTimeSpan = timelineEndTime - timelineStart;\n\n  // 按日期排序\n  const sortedEvents = [...wave.events].sort((a, b) => new Date(a.date) - new Date(b.date));\n\n  // 将事件按照“相距 <= 3 个月”分组\n  const THREE_MONTHS_MS = 3 * 30 * 24 * 60 * 60 * 1000;\n  const eventGroups = [];\n  let currentGroup = [];\n  sortedEvents.forEach((ev, index) => {\n    if (index === 0) {\n      currentGroup.push(ev);\n    } else {\n      const prevTime = new Date(sortedEvents[index - 1].date).getTime();\n      const currTime = new Date(ev.date).getTime();\n      if (currTime - prevTime <= THREE_MONTHS_MS) {\n        currentGroup.push(ev);\n      } else {\n        eventGroups.push([...currentGroup]);\n        currentGroup = [ev];\n      }\n    }\n  });\n  if (currentGroup.length > 0) {\n    eventGroups.push(currentGroup);\n  }\n\n  // 防止分组重叠\n  let lastUsedPos = 0;\n  const groupPositions = [];\n  const groupSpacing = 20;\n  function estimateGroupHeight(group) {\n    const n = group.length;\n    return 80 * (n - 1) + 60;\n  }\n  eventGroups.forEach(group => {\n    const firstEv = group[0];\n    const currentTime = new Date(firstEv.date).getTime();\n    const ratio = (currentTime - timelineStart) / safeTimeSpan;\n    const naivePos = ratio * timelineHeight;\n    const groupHeight = estimateGroupHeight(group);\n    const finalPos = Math.max(naivePos, lastUsedPos + groupSpacing);\n    groupPositions.push(finalPos);\n    lastUsedPos = finalPos + groupHeight;\n  });\n\n  // 为各时间线指定图标映射\n  const iconMap = {\n    'PC': '🖥',\n    'Internet': '🌐',\n    'Smartphones': '📱',\n    'EVs': '🚗',\n    'GenAI': '💡',\n    'Robot': '🤖'\n  };\n  // 如果 wave.icon 存在则用 wave.icon，否则看 title 是否能匹配到 iconMap，否则默认 💻\n  const icon = iconMap[wave.title] || '💻';\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      flex: '1',\n      margin: '0 20px',\n      position: 'relative',\n      padding: '15px',\n      backgroundColor: 'rgba(255,255,255,0.7)',\n      borderRadius: '8px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        alignItems: 'center',\n        marginBottom: '2px',\n        borderBottom: '1px solid #eee',\n        paddingBottom: '2px'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        style: {\n          fontSize: '18px',\n          margin: 0,\n          color: '#2c3e50',\n          fontWeight: '600',\n          display: 'flex',\n          alignItems: 'center'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            marginRight: '8px'\n          },\n          children: icon\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 521,\n          columnNumber: 11\n        }, this), wave.title]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 513,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 506,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        fontSize: '14px',\n        color: '#666',\n        marginBottom: '70px',\n        textAlign: 'center',\n        fontStyle: 'italic'\n      },\n      children: wave.period\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 525,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: 'relative',\n        width: '2px',\n        backgroundColor: '#bbb',\n        height: timelineHeight + 'px',\n        marginLeft: '0',\n        marginTop: '-70px',\n        borderRadius: '1px'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          position: 'absolute',\n          top: '0',\n          left: '-10px',\n          right: '-10px'\n        },\n        children: eventGroups.map((group, idx) => {\n          const finalPos = groupPositions[idx];\n          return /*#__PURE__*/_jsxDEV(EventGroup, {\n            events: group,\n            registerPosition: registerPosition,\n            onEventClick: onEventClick,\n            onDelete: id => onDeleteEvent(id),\n            scrollPos: scrollPos,\n            groupTop: finalPos,\n            setHoveredEvent: setHoveredEvent\n          }, idx, false, {\n            fileName: _jsxFileName,\n            lineNumber: 549,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 545,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 536,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 497,\n    columnNumber: 5\n  }, this);\n}\n\n/**\n * ConnectionsLayer 组件：渲染所有正式连接以及正在建立的临时连接\n */\n_c5 = Timeline;\nfunction ConnectionsLayer({\n  connections,\n  eventPositions,\n  containerRef,\n  pendingConnection,\n  pendingConnectionEnd,\n  onDeleteConnection\n}) {\n  const containerRect = containerRef.current ? containerRef.current.getBoundingClientRect() : {\n    left: 0,\n    top: 0\n  };\n  return /*#__PURE__*/_jsxDEV(\"svg\", {\n    style: {\n      position: 'absolute',\n      top: 0,\n      left: 0,\n      width: '100%',\n      height: '100%',\n      zIndex: 1,\n      pointerEvents: 'none'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"defs\", {\n      children: /*#__PURE__*/_jsxDEV(\"marker\", {\n        id: \"arrowhead\",\n        markerWidth: \"10\",\n        markerHeight: \"7\",\n        refX: \"10\",\n        refY: \"3.5\",\n        orient: \"auto\",\n        children: /*#__PURE__*/_jsxDEV(\"polygon\", {\n          points: \"0 0, 10 3.5, 0 7\",\n          fill: \"red\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 596,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 595,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 594,\n      columnNumber: 7\n    }, this), connections.map((conn, index) => {\n      const fromPos = eventPositions[conn.from];\n      const toPos = eventPositions[conn.to];\n      if (!fromPos || !toPos) return null;\n      const adjustedFrom = {\n        x: fromPos.x - containerRect.left,\n        y: fromPos.y - containerRect.top\n      };\n      const adjustedTo = {\n        x: toPos.x - containerRect.left,\n        y: toPos.y - containerRect.top\n      };\n      return /*#__PURE__*/_jsxDEV(ConnectionLine, {\n        fromPos: adjustedFrom,\n        toPos: adjustedTo,\n        reason: conn.reason,\n        onDelete: () => onDeleteConnection(index)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 608,\n        columnNumber: 11\n      }, this);\n    }), pendingConnection && pendingConnectionEnd && eventPositions[pendingConnection.startEventId] && (() => {\n      const startPosGlobal = eventPositions[pendingConnection.startEventId];\n      const startPos = {\n        x: startPosGlobal.x - containerRect.left,\n        y: startPosGlobal.y - containerRect.top\n      };\n      return /*#__PURE__*/_jsxDEV(\"line\", {\n        x1: startPos.x,\n        y1: startPos.y,\n        x2: pendingConnectionEnd.x,\n        y2: pendingConnectionEnd.y,\n        stroke: \"red\",\n        strokeWidth: \"3\",\n        markerEnd: \"url(#arrowhead)\",\n        style: {\n          pointerEvents: 'none'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 629,\n        columnNumber: 13\n      }, this);\n    })()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 583,\n    columnNumber: 5\n  }, this);\n}\n\n/**\n * ConnectionReasonModal - Modal for entering connection reason\n */\n_c6 = ConnectionsLayer;\nfunction ConnectionReasonModal({\n  isOpen,\n  onClose,\n  onSubmit\n}) {\n  _s4();\n  const [reason, setReason] = useState('Manual connection');\n  if (!isOpen) return null;\n  const handleSubmit = e => {\n    e.preventDefault();\n    onSubmit(reason || 'Manual connection');\n    onClose();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      position: 'fixed',\n      top: 0,\n      left: 0,\n      right: 0,\n      bottom: 0,\n      backgroundColor: 'rgba(0, 0, 0, 0.5)',\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      zIndex: 1000\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        backgroundColor: 'white',\n        padding: '20px',\n        borderRadius: '8px',\n        width: '400px',\n        boxShadow: '0 4px 8px rgba(0,0,0,0.2)'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        style: {\n          marginTop: 0\n        },\n        children: \"Connection Reason\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 679,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginBottom: '15px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            style: {\n              display: 'block',\n              marginBottom: '5px'\n            },\n            children: \"Reason for connection:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 682,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: reason,\n            onChange: e => setReason(e.target.value),\n            style: {\n              width: '100%',\n              padding: '8px',\n              borderRadius: '4px',\n              border: '1px solid #ddd'\n            },\n            autoFocus: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 683,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 681,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            justifyContent: 'flex-end',\n            gap: '10px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: onClose,\n            style: {\n              padding: '8px 16px',\n              border: '1px solid #ddd',\n              borderRadius: '4px',\n              backgroundColor: '#f1f1f1',\n              cursor: 'pointer'\n            },\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 697,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            style: {\n              padding: '8px 16px',\n              border: 'none',\n              borderRadius: '4px',\n              backgroundColor: '#007BFF',\n              color: 'white',\n              cursor: 'pointer'\n            },\n            children: \"Create Connection\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 710,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 696,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 680,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 672,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 660,\n    columnNumber: 5\n  }, this);\n}\n\n/**\n * Showcase 主容器组件\n */\n_s4(ConnectionReasonModal, \"ZHQXH6Y0VcDeHTpWchZL8dxB+Q8=\");\n_c7 = ConnectionReasonModal;\nfunction Showcase() {\n  _s5();\n  // 波次 (waves) 与连接 (connections)\n  const [waves, setWaves] = useState([]);\n  const [connections, setConnections] = useState([]);\n\n  // 注册事件节点的位置信息 (eventPositions[eventId] = { x, y })\n  const [eventPositions, setEventPositions] = useState({});\n\n  /**\n   * 用 useCallback 保证 registerPosition 的引用在整个生命周期中稳定。\n   * 并且只有在位置真正发生变化时才 setState，防止无限循环。\n   */\n  const registerPosition = useCallback((id, pos) => {\n    setEventPositions(prev => {\n      const oldPos = prev[id];\n      // 如果位置没变，就不做任何更新，避免反复触发 re-render\n      if (oldPos && oldPos.x === pos.x && oldPos.y === pos.y) {\n        return prev; // 不变\n      }\n      // 否则更新\n      return {\n        ...prev,\n        [id]: pos\n      };\n    });\n  }, []);\n\n  // 用于连接事件的临时状态\n  const [pendingConnection, setPendingConnection] = useState(null); // { startEventId }\n  const [pendingConnectionEnd, setPendingConnectionEnd] = useState(null);\n\n  // 全局添加事件 Modal\n  const [showGlobalAddModal, setShowGlobalAddModal] = useState(false);\n\n  // 连接原因 Modal\n  const [showConnectionModal, setShowConnectionModal] = useState(false);\n  // 用于标记连接终点\n  const [pendingTo, setPendingTo] = useState(null);\n\n  // 全局 hover 事件：{ rect, title, detail }\n  const [hoveredEvent, setHoveredEvent] = useState(null);\n\n  // 从 /data.json 加载数据（示例）\n  useEffect(() => {\n    fetch('/data.json').then(res => res.json()).then(data => {\n      setWaves(data.waves);\n      setConnections(data.connections);\n    }).catch(error => console.error(\"Error loading data:\", error));\n  }, []);\n\n  // 点击事件时，若无 pendingConnection，则设为起点；若已有，则设为终点\n  const handleEventClick = eventId => {\n    if (!pendingConnection) {\n      setPendingConnection({\n        startEventId: eventId\n      });\n    } else {\n      if (pendingConnection.startEventId === eventId) {\n        // 如果再次点到同一个事件，取消连接\n        setPendingConnection(null);\n        setPendingConnectionEnd(null);\n        return;\n      }\n      // 否则进入「填写连接原因」阶段\n      setPendingTo(eventId);\n      setShowConnectionModal(true);\n    }\n  };\n\n  // 提交新事件\n  const handleSubmitNewEvent = eventData => {\n    console.log(\"Showcase handleSubmitNewEvent:\", eventData);\n    const newId = generateUniqueId();\n    setWaves(prev => {\n      var _newWaves$idx;\n      const newWaves = [...prev];\n      const idx = eventData.timelineIndex;\n      console.log(\"  -> will push new event into waves[\", idx, \"] which is:\", (_newWaves$idx = newWaves[idx]) === null || _newWaves$idx === void 0 ? void 0 : _newWaves$idx.title);\n      if (newWaves[idx]) {\n        newWaves[idx].events.push({\n          id: newId,\n          date: eventData.date,\n          title: eventData.title,\n          detail: eventData.detail\n        });\n      } else {\n        console.warn(\"  -> invalid timelineIndex??\");\n      }\n      return newWaves;\n    });\n  };\n\n  // 填写连接原因后，添加新连接\n  const handleSubmitConnection = reason => {\n    setConnections(prev => [...prev, {\n      from: pendingConnection.startEventId,\n      to: pendingTo,\n      reason\n    }]);\n    setPendingConnection(null);\n    setPendingConnectionEnd(null);\n    setPendingTo(null);\n  };\n\n  // 删除事件\n  const handleDeleteEvent = eventId => {\n    // 在所有 wave 中查找并删除\n    setWaves(prev => {\n      return prev.map(w => ({\n        ...w,\n        events: w.events.filter(e => e.id !== eventId)\n      }));\n    });\n    // 删除与之相关的连接\n    setConnections(prev => prev.filter(conn => conn.from !== eventId && conn.to !== eventId));\n  };\n\n  // 删除连接\n  const handleDeleteConnection = connIndex => {\n    setConnections(prev => prev.filter((_, index) => index !== connIndex));\n  };\n\n  // 跟踪滚动位置（用于在 window.scrollY 改变时重新计算坐标）\n  const [scrollPos, setScrollPos] = useState(0);\n  useEffect(() => {\n    const handleScroll = () => setScrollPos(window.scrollY);\n    window.addEventListener('scroll', handleScroll);\n    return () => window.removeEventListener('scroll', handleScroll);\n  }, []);\n\n  // 如果正在连线，则鼠标移动时更新临时连线终点\n  const containerRef = useRef(null);\n  const handleMouseMove = e => {\n    if (pendingConnection) {\n      const containerRect = containerRef.current.getBoundingClientRect();\n      setPendingConnectionEnd({\n        x: e.clientX - containerRect.left,\n        y: e.clientY - containerRect.top\n      });\n    }\n  };\n\n  // 使用 useMemo 缓存 timelineOptions，避免不必要的重复生成\n  const timelineOptions = useMemo(() => {\n    return waves.map((wave, index) => ({\n      index,\n      title: wave.title\n    }));\n  }, [waves]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: containerRef,\n    onMouseMove: handleMouseMove,\n    style: {\n      padding: '20px',\n      position: 'relative'\n    },\n    children: [/*#__PURE__*/_jsxDEV(AddEventModal, {\n      isOpen: showGlobalAddModal,\n      onClose: () => setShowGlobalAddModal(false),\n      onSubmit: handleSubmitNewEvent,\n      timelineOptions: timelineOptions\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 891,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ConnectionReasonModal, {\n      isOpen: showConnectionModal,\n      onClose: () => {\n        setShowConnectionModal(false);\n        setPendingConnection(null);\n        setPendingConnectionEnd(null);\n      },\n      onSubmit: handleSubmitConnection\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 899,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(GlobalTooltip, {\n      hoveredEvent: hoveredEvent\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 910,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      style: {\n        textAlign: 'center',\n        marginBottom: '20px'\n      },\n      children: \"Analogical Timeline of Tech Wave\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 912,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      style: {\n        textAlign: 'center'\n      },\n      children: \"History doesn't repeat itself, but it often rhymes.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 915,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setShowGlobalAddModal(true),\n      style: {\n        position: 'fixed',\n        top: '20px',\n        right: '20px',\n        width: '40px',\n        height: '40px',\n        borderRadius: '50%',\n        backgroundColor: '#007BFF',\n        border: 'none',\n        color: '#fff',\n        fontSize: '24px',\n        fontWeight: 'bold',\n        cursor: 'pointer',\n        zIndex: 1001,\n        boxShadow: '0 2px 5px rgba(0,0,0,0.3)'\n      },\n      title: \"Add Event\",\n      children: \"+\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 918,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        justifyContent: 'space-around',\n        flexWrap: 'wrap',\n        marginTop: '40px',\n        position: 'relative',\n        zIndex: 0\n      },\n      children: waves.map((wave, index) => /*#__PURE__*/_jsxDEV(Timeline, {\n        timelineIndex: index,\n        wave: wave,\n        registerPosition: registerPosition,\n        onEventClick: handleEventClick,\n        onDeleteEvent: handleDeleteEvent,\n        scrollPos: scrollPos,\n        setHoveredEvent: setHoveredEvent\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 953,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 942,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ConnectionsLayer, {\n      connections: connections,\n      eventPositions: eventPositions,\n      containerRef: containerRef,\n      pendingConnection: pendingConnection,\n      pendingConnectionEnd: pendingConnectionEnd,\n      onDeleteConnection: handleDeleteConnection\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 967,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 882,\n    columnNumber: 5\n  }, this);\n}\n_s5(Showcase, \"pD7O92kDAUy6uL/uK5Y/4+27TCU=\");\n_c8 = Showcase;\nexport default Showcase;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8;\n$RefreshReg$(_c, \"AddEventModal\");\n$RefreshReg$(_c2, \"ConnectionLine\");\n$RefreshReg$(_c3, \"GlobalTooltip\");\n$RefreshReg$(_c4, \"EventGroup\");\n$RefreshReg$(_c5, \"Timeline\");\n$RefreshReg$(_c6, \"ConnectionsLayer\");\n$RefreshReg$(_c7, \"ConnectionReasonModal\");\n$RefreshReg$(_c8, \"Showcase\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useCallback","useMemo","jsxDEV","_jsxDEV","generateUniqueId","Math","random","toString","substr","generateCurvePath","x1","y1","x2","y2","cx","AddEventModal","isOpen","onClose","onSubmit","timelineOptions","_s","date","setDate","title","setTitle","detail","setDetail","selectedTimeline","setSelectedTimeline","length","console","log","index","handleSubmit","e","preventDefault","timelineIndex","style","position","top","left","right","bottom","backgroundColor","display","alignItems","justifyContent","zIndex","children","padding","borderRadius","width","boxShadow","marginTop","fileName","_jsxFileName","lineNumber","columnNumber","marginBottom","value","onChange","parseInt","target","border","map","option","idx","type","required","minHeight","gap","onClick","cursor","color","_c","ConnectionLine","fromPos","toPos","reason","onDelete","_s2","hovered","setHovered","strokeColor","strokeWidth","pathData","x","y","onMouseEnter","onMouseLeave","stopPropagation","window","confirm","d","stroke","fill","pointerEvents","filter","fontSize","fontWeight","textAnchor","_c2","getOffsets","count","offsets","half","floor","i","push","forEach","val","GlobalTooltip","hoveredEvent","rect","_c3","EventGroup","events","registerPosition","onEventClick","scrollPos","groupTop","setHoveredEvent","_s3","sortedEvents","sort","a","b","Date","cardRefs","ev","current","getBoundingClientRect","centerPos","height","id","handleMouseEnter","handleMouseLeave","offsetTop","ref","el","transition","background","_c4","Timeline","wave","onDeleteEvent","timelineHeight","timestamps","getTime","firstEventTime","min","now","firstEventDate","timelineStart","getFullYear","eightYearsInMs","timelineEndTime","safeTimeSpan","THREE_MONTHS_MS","eventGroups","currentGroup","prevTime","currTime","lastUsedPos","groupPositions","groupSpacing","estimateGroupHeight","group","n","firstEv","currentTime","ratio","naivePos","groupHeight","finalPos","max","iconMap","icon","flex","margin","borderBottom","paddingBottom","marginRight","textAlign","fontStyle","period","marginLeft","_c5","ConnectionsLayer","connections","eventPositions","containerRef","pendingConnection","pendingConnectionEnd","onDeleteConnection","containerRect","markerWidth","markerHeight","refX","refY","orient","points","conn","from","to","adjustedFrom","adjustedTo","startEventId","startPosGlobal","startPos","markerEnd","_c6","ConnectionReasonModal","_s4","setReason","autoFocus","_c7","Showcase","_s5","waves","setWaves","setConnections","setEventPositions","pos","prev","oldPos","setPendingConnection","setPendingConnectionEnd","showGlobalAddModal","setShowGlobalAddModal","showConnectionModal","setShowConnectionModal","pendingTo","setPendingTo","fetch","then","res","json","data","catch","error","handleEventClick","eventId","handleSubmitNewEvent","eventData","newId","_newWaves$idx","newWaves","warn","handleSubmitConnection","handleDeleteEvent","w","handleDeleteConnection","connIndex","_","setScrollPos","handleScroll","scrollY","addEventListener","removeEventListener","handleMouseMove","clientX","clientY","onMouseMove","flexWrap","_c8","$RefreshReg$"],"sources":["/Users/jasonding/Desktop/Robot2025/src/components/Showcase.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef, useCallback, useMemo } from 'react';\n\n/** 生成随机 ID 的小工具函数，用于给新添加的事件分配稳定的 event.id */\nfunction generateUniqueId() {\n  return Math.random().toString(36).substr(2, 9);\n}\n\n/** \n * Helper function to generate a curved path (cubic Bezier curve example)\n */\nfunction generateCurvePath(x1, y1, x2, y2) {\n  const cx = (x1 + x2) / 2;\n  return `M ${x1},${y1} C ${cx},${y1} ${cx},${y2} ${x2},${y2}`;\n}\n\n/**\n * Modal Component for adding new events\n * - 通过下拉菜单选择要添加到哪条时间线\n */\nfunction AddEventModal({ isOpen, onClose, onSubmit, timelineOptions = [] }) {\n  const [date, setDate] = useState('');\n  const [title, setTitle] = useState('');\n  const [detail, setDetail] = useState('');\n  const [selectedTimeline, setSelectedTimeline] = useState(0);\n\n  // 只在 \"modal 打开\" 时执行一次选中第一个时间线（如果存在）\n  useEffect(() => {\n    if (isOpen && timelineOptions.length > 0) {\n      console.log('[AddEventModal] Modal is open. Default to first timeline:', timelineOptions[0]);\n      setSelectedTimeline(timelineOptions[0].index);\n    }\n  }, [isOpen]); // 注意：只依赖 isOpen，避免重复\n\n  if (!isOpen) return null;\n  \n  const handleSubmit = (e) => {\n    e.preventDefault();\n    console.log(\"AddEventModal handleSubmit: selectedTimeline =\", selectedTimeline);\n    if (date && title) {\n      // 把选择的 timelineIndex + 其余字段传回父组件\n      onSubmit({\n        timelineIndex: selectedTimeline,\n        date,\n        title,\n        detail,\n      });\n      onClose();\n      // 重置表单\n      setDate('');\n      setTitle('');\n      setDetail('');\n    }\n  };\n  \n  return (\n    <div style={{\n      position: 'fixed',\n      top: 0,\n      left: 0,\n      right: 0,\n      bottom: 0,\n      backgroundColor: 'rgba(0, 0, 0, 0.5)',\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      zIndex: 1000,\n    }}>\n      <div style={{\n        backgroundColor: 'white',\n        padding: '20px',\n        borderRadius: '8px',\n        width: '400px',\n        boxShadow: '0 4px 8px rgba(0,0,0,0.2)',\n      }}>\n        <h3 style={{ marginTop: 0 }}>Add New Event</h3>\n        <form onSubmit={handleSubmit}>\n          {/* 下拉菜单，选择目标时间线 */}\n          {timelineOptions.length > 0 && (\n            <div style={{ marginBottom: '15px' }}>\n              <label style={{ display: 'block', marginBottom: '5px' }}>Select Timeline:</label>\n              <select \n                value={selectedTimeline}\n                onChange={(e) => setSelectedTimeline(parseInt(e.target.value))}\n                style={{ \n                  width: '100%', \n                  padding: '8px', \n                  borderRadius: '4px',\n                  border: '1px solid #ddd'\n                }}\n              >\n                {timelineOptions.map((option, idx) => (\n                  <option key={idx} value={option.index}>\n                    {option.title}\n                  </option>\n                ))}\n              </select>\n            </div>\n          )}\n          <div style={{ marginBottom: '15px' }}>\n            <label style={{ display: 'block', marginBottom: '5px' }}>Date (YYYY-MM-DD):</label>\n            <input \n              type=\"date\" \n              value={date} \n              onChange={(e) => setDate(e.target.value)}\n              style={{ \n                width: '100%', \n                padding: '8px', \n                borderRadius: '4px',\n                border: '1px solid #ddd'\n              }}\n              required\n            />\n          </div>\n          <div style={{ marginBottom: '15px' }}>\n            <label style={{ display: 'block', marginBottom: '5px' }}>Title:</label>\n            <input \n              type=\"text\" \n              value={title} \n              onChange={(e) => setTitle(e.target.value)}\n              style={{ \n                width: '100%', \n                padding: '8px', \n                borderRadius: '4px',\n                border: '1px solid #ddd'\n              }}\n              required\n            />\n          </div>\n          <div style={{ marginBottom: '15px' }}>\n            <label style={{ display: 'block', marginBottom: '5px' }}>Details:</label>\n            <textarea \n              value={detail} \n              onChange={(e) => setDetail(e.target.value)}\n              style={{ \n                width: '100%', \n                padding: '8px', \n                borderRadius: '4px',\n                border: '1px solid #ddd',\n                minHeight: '100px'\n              }}\n            />\n          </div>\n          <div style={{ display: 'flex', justifyContent: 'flex-end', gap: '10px' }}>\n            <button \n              type=\"button\" \n              onClick={onClose}\n              style={{\n                padding: '8px 16px',\n                border: '1px solid #ddd',\n                borderRadius: '4px',\n                backgroundColor: '#f1f1f1',\n                cursor: 'pointer'\n              }}\n            >\n              Cancel\n            </button>\n            <button \n              type=\"submit\"\n              style={{\n                padding: '8px 16px',\n                border: 'none',\n                borderRadius: '4px',\n                backgroundColor: '#007BFF',\n                color: 'white',\n                cursor: 'pointer'\n              }}\n            >\n              Add Event\n            </button>\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n}\n\n/**\n * ConnectionLine 组件：绘制正式的红色连接线，\n * hover 时加粗并增加 glow 效果，点击时弹出确认后删除该连接。\n */\nfunction ConnectionLine({ fromPos, toPos, reason, onDelete }) {\n  const [hovered, setHovered] = useState(false);\n  const strokeColor = hovered ? 'rgba(220,20,60,0.9)' : 'rgba(255,0,0,0.4)';\n  const strokeWidth = hovered ? 3 : 2;\n\n  // 生成贝塞尔曲线\n  const pathData = generateCurvePath(fromPos.x, fromPos.y, toPos.x, toPos.y);\n\n  return (\n    <g\n      onMouseEnter={() => setHovered(true)}\n      onMouseLeave={() => setHovered(false)}\n      onClick={(e) => {\n        e.stopPropagation();\n        if (window.confirm('Delete this connection?')) {\n          onDelete();\n        }\n      }}\n      style={{ cursor: 'pointer' }}\n    >\n      <path \n        d={pathData} \n        stroke={strokeColor} \n        strokeWidth={strokeWidth} \n        fill=\"none\" \n        style={{ \n          pointerEvents: 'all',\n          filter: hovered ? 'drop-shadow(0 0 3px rgba(255,0,0,0.3))' : 'none',\n        }} \n      />\n      <text\n        x={(fromPos.x + toPos.x) / 2}\n        y={(fromPos.y + toPos.y) / 2 - 5}\n        fill={strokeColor}\n        fontSize={hovered ? 14 : 12}\n        fontWeight={hovered ? 'bold' : 'normal'}\n        textAnchor=\"middle\"\n        style={{ \n          pointerEvents: 'none',\n          filter: hovered ? 'drop-shadow(0 1px 2px rgba(255,255,255,0.8))' : 'none',\n        }}\n      >\n        {reason}\n      </text>\n    </g>\n  );\n}\n\n/** \n * 生成一个上下交错的偏移数组。\n * count=1 => [0]\n * count=2 => [-40, 40]\n * count=3 => [-80, 0, 80]\n * gap 用于控制卡片间的垂直间距\n */\nfunction getOffsets(count, gap = 80) {\n  const offsets = [];\n  const half = Math.floor(count / 2);\n  for (let i = 0; i < count; i++) {\n    offsets.push((i - half) * gap);\n  }\n  // 偶数个让它们对称\n  if (count % 2 === 0) {\n    offsets.forEach((val, idx) => {\n      offsets[idx] = val + gap / 2;\n    });\n  }\n  return offsets;\n}\n\n/**\n * 全局悬浮弹框组件：接收当前 hoveredEvent（包含 rect、title、detail 等信息），在页面最顶层显示\n */\nfunction GlobalTooltip({ hoveredEvent }) {\n  if (!hoveredEvent) return null;\n  const { rect, title, detail } = hoveredEvent;\n  if (!rect) return null;\n\n  // 让弹框中心对准卡片的中点，并稍微往下移动\n  const left = rect.left + (rect.width / 2) - 100; // 让宽度 200 px 居中\n  const top = rect.bottom + 8; // 往下 8px\n\n  return (\n    <div \n      style={{\n        position: 'fixed',\n        top,\n        left,\n        width: '200px',\n        backgroundColor: '#fff',\n        border: '1px solid #ddd',\n        borderRadius: '6px',\n        boxShadow: '0 4px 8px rgba(0,0,0,0.15)',\n        padding: '8px',\n        fontSize: '12px',\n        zIndex: 9999,\n        pointerEvents: 'none',\n      }}\n    >\n      <div style={{ fontWeight: 'bold', marginBottom: '4px' }}>{title}</div>\n      <div>{detail}</div>\n    </div>\n  );\n}\n\n/**\n * EventGroup 组件：\n * - 同一组（<= 3 个月间隔）的事件在同一个纵向位置 groupTop\n * - 每个事件卡片上下错落排布\n * - Hover 时在全局显示弹出框\n */\nfunction EventGroup({ events, registerPosition, onEventClick, onDelete, scrollPos, groupTop, setHoveredEvent }) {\n  const sortedEvents = [...events].sort((a, b) => new Date(a.date) - new Date(b.date));\n  const cardRefs = useRef([]);\n  \n  // 这里可调 gap 来增加/减少组内事件间的垂直距离\n  const offsets = getOffsets(sortedEvents.length, 80);\n\n  /**\n   * 在这里我们只在以下变量改变时才调用：  \n   * - sortedEvents本身（事件数据变动）  \n   * - registerPosition引用变动（一般不会变，因为用useCallback了）  \n   * - scrollPos变动（页面滚动）  \n   */\n  useEffect(() => {\n    sortedEvents.forEach((ev, i) => {\n      if (cardRefs.current[i]) {\n        const rect = cardRefs.current[i].getBoundingClientRect();\n        const centerPos = {\n          x: rect.left + rect.width / 2,\n          y: rect.top + rect.height / 2,\n        };\n        // 调用父级的 registerPosition\n        registerPosition(ev.id, centerPos);\n      }\n    });\n  }, [sortedEvents, registerPosition, scrollPos]);\n\n  // Hover 时调用 setHoveredEvent\n  const handleMouseEnter = (ev, i) => {\n    if (!ev.detail) return;\n    const rect = cardRefs.current[i].getBoundingClientRect();\n    setHoveredEvent({\n      rect,\n      title: ev.title,\n      detail: ev.detail\n    });\n  };\n  const handleMouseLeave = () => {\n    setHoveredEvent(null);\n  };\n\n  return (\n    <div\n      style={{\n        position: 'absolute',\n        top: groupTop,\n        left: 0,\n        width: '280px',\n        zIndex: 500,\n      }}\n    >\n      {sortedEvents.map((ev, i) => {\n        const offsetTop = offsets[i];\n        return (\n          <div\n            key={ev.id}\n            ref={(el) => (cardRefs.current[i] = el)}\n            style={{\n              position: 'absolute',\n              left: '10px', \n              top: offsetTop + 'px',\n              width: '180px',\n              height: '60px',\n              padding: '10px',\n              border: '2px solid #ddd',\n              borderRadius: '8px',\n              backgroundColor: '#fff',\n              boxShadow: '0 2px 4px rgba(0,0,0,0.08)',\n              cursor: 'pointer',\n              transition: 'all 0.2s ease',\n            }}\n            onClick={() => onEventClick(ev.id)}\n            onMouseEnter={() => handleMouseEnter(ev, i)}\n            onMouseLeave={handleMouseLeave}\n          >\n            {/* 标题 */}\n            <div style={{ \n              fontWeight: 'bold', \n              marginBottom: '4px',\n              fontSize: '14px',\n              color: '#007BFF',\n            }}>\n              {ev.title}\n            </div>\n            {/* 日期 */}\n            <div style={{ \n              fontSize: '13px', \n              marginBottom: '6px', \n              color: '#555' \n            }}>\n              {ev.date}\n            </div>\n\n            {/* 删除按钮：颜色改为蓝色 */}\n            <button\n              onClick={(e) => {\n                e.stopPropagation();\n                onDelete(ev.id);\n              }}\n              style={{\n                position: 'absolute',\n                top: '6px',\n                right: '6px',\n                background: 'transparent',\n                border: 'none',\n                color: 'rgba(0,0,255,0.6)',\n                fontSize: '14px',\n                cursor: 'pointer',\n                transition: 'color 0.2s ease',\n              }}\n            >\n              ×\n            </button>\n          </div>\n        );\n      })}\n    </div>\n  );\n}\n\n/**\n * Timeline 组件：一条时间轴 + 标题 + 事件分组\n */\nfunction Timeline({\n  timelineIndex,\n  wave,\n  registerPosition,\n  onEventClick,\n  onDeleteEvent,\n  scrollPos,\n  setHoveredEvent,\n}) {\n  const timelineHeight = 1600;\n\n  // 根据 wave.events 里最早的日期，确定本时间轴的起点\n  const timestamps = wave.events.map((e) => new Date(e.date).getTime());\n  const firstEventTime = timestamps.length > 0 ? Math.min(...timestamps) : Date.now();\n  const firstEventDate = new Date(firstEventTime);\n  const timelineStart = new Date(firstEventDate.getFullYear(), 0, 1).getTime();\n\n  // 这里定义时间跨度，比如 8 年\n  const eightYearsInMs = 8 * 365.25 * 24 * 60 * 60 * 1000;\n  const timelineEndTime = timelineStart + eightYearsInMs;\n  const safeTimeSpan = timelineEndTime - timelineStart;\n\n  // 按日期排序\n  const sortedEvents = [...wave.events].sort((a, b) => new Date(a.date) - new Date(b.date));\n\n  // 将事件按照“相距 <= 3 个月”分组\n  const THREE_MONTHS_MS = 3 * 30 * 24 * 60 * 60 * 1000;\n  const eventGroups = [];\n  let currentGroup = [];\n\n  sortedEvents.forEach((ev, index) => {\n    if (index === 0) {\n      currentGroup.push(ev);\n    } else {\n      const prevTime = new Date(sortedEvents[index - 1].date).getTime();\n      const currTime = new Date(ev.date).getTime();\n      if (currTime - prevTime <= THREE_MONTHS_MS) {\n        currentGroup.push(ev);\n      } else {\n        eventGroups.push([...currentGroup]);\n        currentGroup = [ev];\n      }\n    }\n  });\n  if (currentGroup.length > 0) {\n    eventGroups.push(currentGroup);\n  }\n\n  // 防止分组重叠\n  let lastUsedPos = 0;\n  const groupPositions = [];\n  const groupSpacing = 20;\n\n  function estimateGroupHeight(group) {\n    const n = group.length;\n    return 80 * (n - 1) + 60;\n  }\n\n  eventGroups.forEach((group) => {\n    const firstEv = group[0];\n    const currentTime = new Date(firstEv.date).getTime();\n    const ratio = (currentTime - timelineStart) / safeTimeSpan;\n    const naivePos = ratio * timelineHeight;\n    const groupHeight = estimateGroupHeight(group);\n    const finalPos = Math.max(naivePos, lastUsedPos + groupSpacing);\n    groupPositions.push(finalPos);\n    lastUsedPos = finalPos + groupHeight;\n  });\n\n  // 为各时间线指定图标映射\n  const iconMap = {\n    'PC': '🖥',\n    'Internet': '🌐',\n    'Smartphones': '📱',\n    'EVs': '🚗',\n    'GenAI': '💡',\n    'Robot': '🤖',\n  };\n  // 如果 wave.icon 存在则用 wave.icon，否则看 title 是否能匹配到 iconMap，否则默认 💻\n  const icon = iconMap[wave.title] || '💻';\n\n  return (\n    <div style={{ \n      flex: '1', \n      margin: '0 20px', \n      position: 'relative',\n      padding: '15px',\n      backgroundColor: 'rgba(255,255,255,0.7)',\n      borderRadius: '8px',\n    }}>\n      {/* 时间线顶部标题 + 图标 */}\n      <div style={{ \n        display: 'flex', \n        alignItems: 'center', \n        marginBottom: '2px',\n        borderBottom: '1px solid #eee',\n        paddingBottom: '2px',\n      }}>\n        <h2 style={{ \n          fontSize: '18px', \n          margin: 0,\n          color: '#2c3e50',\n          fontWeight: '600',\n          display: 'flex',\n          alignItems: 'center'\n        }}>\n          <span style={{ marginRight: '8px' }}>{icon}</span>\n          {wave.title}\n        </h2>\n      </div>\n      <div style={{ \n        fontSize: '14px', \n        color: '#666', \n        marginBottom: '70px', \n        textAlign: 'center',\n        fontStyle: 'italic',\n      }}>\n        {wave.period}\n      </div>\n\n      {/* 纵向的主轴 */}\n      <div style={{ \n        position: 'relative', \n        width: '2px', \n        backgroundColor: '#bbb', \n        height: timelineHeight + 'px', \n        marginLeft: '0', \n        marginTop: '-70px',\n        borderRadius: '1px' \n      }}>\n        <div style={{ position: 'absolute', top: '0', left: '-10px', right: '-10px' }}>\n          {eventGroups.map((group, idx) => {\n            const finalPos = groupPositions[idx];\n            return (\n              <EventGroup\n                key={idx}\n                events={group}\n                registerPosition={registerPosition}\n                onEventClick={onEventClick}\n                onDelete={(id) => onDeleteEvent(id)}\n                scrollPos={scrollPos}\n                groupTop={finalPos}\n                setHoveredEvent={setHoveredEvent}\n              />\n            );\n          })}\n        </div>\n      </div>\n    </div>\n  );\n}\n\n/**\n * ConnectionsLayer 组件：渲染所有正式连接以及正在建立的临时连接\n */\nfunction ConnectionsLayer({\n  connections,\n  eventPositions,\n  containerRef,\n  pendingConnection,\n  pendingConnectionEnd,\n  onDeleteConnection,\n}) {\n  const containerRect = containerRef.current\n    ? containerRef.current.getBoundingClientRect()\n    : { left: 0, top: 0 };\n\n  return (\n    <svg\n      style={{\n        position: 'absolute',\n        top: 0,\n        left: 0,\n        width: '100%',\n        height: '100%',\n        zIndex: 1,\n        pointerEvents: 'none',\n      }}\n    >\n      <defs>\n        <marker id=\"arrowhead\" markerWidth=\"10\" markerHeight=\"7\" refX=\"10\" refY=\"3.5\" orient=\"auto\">\n          <polygon points=\"0 0, 10 3.5, 0 7\" fill=\"red\" />\n        </marker>\n      </defs>\n      {connections.map((conn, index) => {\n        const fromPos = eventPositions[conn.from];\n        const toPos = eventPositions[conn.to];\n        if (!fromPos || !toPos) return null;\n\n        const adjustedFrom = { x: fromPos.x - containerRect.left, y: fromPos.y - containerRect.top };\n        const adjustedTo = { x: toPos.x - containerRect.left, y: toPos.y - containerRect.top };\n\n        return (\n          <ConnectionLine\n            key={index}\n            fromPos={adjustedFrom}\n            toPos={adjustedTo}\n            reason={conn.reason}\n            onDelete={() => onDeleteConnection(index)}\n          />\n        );\n      })}\n\n      {/* 如果正在连线，则画一条“临时线”跟随鼠标 */}\n      {pendingConnection &&\n        pendingConnectionEnd &&\n        eventPositions[pendingConnection.startEventId] &&\n        (() => {\n          const startPosGlobal = eventPositions[pendingConnection.startEventId];\n          const startPos = {\n            x: startPosGlobal.x - containerRect.left,\n            y: startPosGlobal.y - containerRect.top,\n          };\n          return (\n            <line\n              x1={startPos.x}\n              y1={startPos.y}\n              x2={pendingConnectionEnd.x}\n              y2={pendingConnectionEnd.y}\n              stroke=\"red\"\n              strokeWidth=\"3\"\n              markerEnd=\"url(#arrowhead)\"\n              style={{ pointerEvents: 'none' }}\n            />\n          );\n        })()}\n    </svg>\n  );\n}\n\n/**\n * ConnectionReasonModal - Modal for entering connection reason\n */\nfunction ConnectionReasonModal({ isOpen, onClose, onSubmit }) {\n  const [reason, setReason] = useState('Manual connection');\n  \n  if (!isOpen) return null;\n  \n  const handleSubmit = (e) => {\n    e.preventDefault();\n    onSubmit(reason || 'Manual connection');\n    onClose();\n  };\n  \n  return (\n    <div style={{\n      position: 'fixed',\n      top: 0,\n      left: 0,\n      right: 0,\n      bottom: 0,\n      backgroundColor: 'rgba(0, 0, 0, 0.5)',\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      zIndex: 1000,\n    }}>\n      <div style={{\n        backgroundColor: 'white',\n        padding: '20px',\n        borderRadius: '8px',\n        width: '400px',\n        boxShadow: '0 4px 8px rgba(0,0,0,0.2)',\n      }}>\n        <h3 style={{ marginTop: 0 }}>Connection Reason</h3>\n        <form onSubmit={handleSubmit}>\n          <div style={{ marginBottom: '15px' }}>\n            <label style={{ display: 'block', marginBottom: '5px' }}>Reason for connection:</label>\n            <input \n              type=\"text\" \n              value={reason} \n              onChange={(e) => setReason(e.target.value)}\n              style={{ \n                width: '100%', \n                padding: '8px', \n                borderRadius: '4px',\n                border: '1px solid #ddd'\n              }}\n              autoFocus\n            />\n          </div>\n          <div style={{ display: 'flex', justifyContent: 'flex-end', gap: '10px' }}>\n            <button \n              type=\"button\" \n              onClick={onClose}\n              style={{\n                padding: '8px 16px',\n                border: '1px solid #ddd',\n                borderRadius: '4px',\n                backgroundColor: '#f1f1f1',\n                cursor: 'pointer'\n              }}\n            >\n              Cancel\n            </button>\n            <button \n              type=\"submit\"\n              style={{\n                padding: '8px 16px',\n                border: 'none',\n                borderRadius: '4px',\n                backgroundColor: '#007BFF',\n                color: 'white',\n                cursor: 'pointer'\n              }}\n            >\n              Create Connection\n            </button>\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n}\n\n/**\n * Showcase 主容器组件\n */\nfunction Showcase() {\n  // 波次 (waves) 与连接 (connections)\n  const [waves, setWaves] = useState([]);\n  const [connections, setConnections] = useState([]);\n  \n  // 注册事件节点的位置信息 (eventPositions[eventId] = { x, y })\n  const [eventPositions, setEventPositions] = useState({});\n\n  /**\n   * 用 useCallback 保证 registerPosition 的引用在整个生命周期中稳定。\n   * 并且只有在位置真正发生变化时才 setState，防止无限循环。\n   */\n  const registerPosition = useCallback((id, pos) => {\n    setEventPositions((prev) => {\n      const oldPos = prev[id];\n      // 如果位置没变，就不做任何更新，避免反复触发 re-render\n      if (oldPos && oldPos.x === pos.x && oldPos.y === pos.y) {\n        return prev; // 不变\n      }\n      // 否则更新\n      return { ...prev, [id]: pos };\n    });\n  }, []);\n\n  // 用于连接事件的临时状态\n  const [pendingConnection, setPendingConnection] = useState(null); // { startEventId }\n  const [pendingConnectionEnd, setPendingConnectionEnd] = useState(null);\n  \n  // 全局添加事件 Modal\n  const [showGlobalAddModal, setShowGlobalAddModal] = useState(false);\n\n  // 连接原因 Modal\n  const [showConnectionModal, setShowConnectionModal] = useState(false);\n  // 用于标记连接终点\n  const [pendingTo, setPendingTo] = useState(null);\n\n  // 全局 hover 事件：{ rect, title, detail }\n  const [hoveredEvent, setHoveredEvent] = useState(null);\n\n  // 从 /data.json 加载数据（示例）\n  useEffect(() => {\n    fetch('/data.json')\n      .then((res) => res.json())\n      .then((data) => {\n        setWaves(data.waves);\n        setConnections(data.connections);\n      })\n      .catch((error) => console.error(\"Error loading data:\", error));\n  }, []);\n\n  // 点击事件时，若无 pendingConnection，则设为起点；若已有，则设为终点\n  const handleEventClick = (eventId) => {\n    if (!pendingConnection) {\n      setPendingConnection({ startEventId: eventId });\n    } else {\n      if (pendingConnection.startEventId === eventId) {\n        // 如果再次点到同一个事件，取消连接\n        setPendingConnection(null);\n        setPendingConnectionEnd(null);\n        return;\n      }\n      // 否则进入「填写连接原因」阶段\n      setPendingTo(eventId);\n      setShowConnectionModal(true);\n    }\n  };\n\n  // 提交新事件\n  const handleSubmitNewEvent = (eventData) => {\n    console.log(\"Showcase handleSubmitNewEvent:\", eventData);\n    const newId = generateUniqueId();\n    setWaves((prev) => {\n      const newWaves = [...prev];\n      const idx = eventData.timelineIndex;\n      console.log(\"  -> will push new event into waves[\", idx, \"] which is:\", newWaves[idx]?.title);\n      if (newWaves[idx]) {\n        newWaves[idx].events.push({ \n          id: newId,\n          date: eventData.date,\n          title: eventData.title,\n          detail: eventData.detail \n        });\n      } else {\n        console.warn(\"  -> invalid timelineIndex??\");\n      }\n      return newWaves;\n    });\n  };\n\n  // 填写连接原因后，添加新连接\n  const handleSubmitConnection = (reason) => {\n    setConnections((prev) => [\n      ...prev,\n      { from: pendingConnection.startEventId, to: pendingTo, reason },\n    ]);\n    setPendingConnection(null);\n    setPendingConnectionEnd(null);\n    setPendingTo(null);\n  };\n\n  // 删除事件\n  const handleDeleteEvent = (eventId) => {\n    // 在所有 wave 中查找并删除\n    setWaves((prev) => {\n      return prev.map(w => ({\n        ...w,\n        events: w.events.filter(e => e.id !== eventId)\n      }));\n    });\n    // 删除与之相关的连接\n    setConnections((prev) =>\n      prev.filter((conn) => conn.from !== eventId && conn.to !== eventId)\n    );\n  };\n\n  // 删除连接\n  const handleDeleteConnection = (connIndex) => {\n    setConnections((prev) => prev.filter((_, index) => index !== connIndex));\n  };\n\n  // 跟踪滚动位置（用于在 window.scrollY 改变时重新计算坐标）\n  const [scrollPos, setScrollPos] = useState(0);\n  useEffect(() => {\n    const handleScroll = () => setScrollPos(window.scrollY);\n    window.addEventListener('scroll', handleScroll);\n    return () => window.removeEventListener('scroll', handleScroll);\n  }, []);\n\n  // 如果正在连线，则鼠标移动时更新临时连线终点\n  const containerRef = useRef(null);\n  const handleMouseMove = (e) => {\n    if (pendingConnection) {\n      const containerRect = containerRef.current.getBoundingClientRect();\n      setPendingConnectionEnd({\n        x: e.clientX - containerRect.left,\n        y: e.clientY - containerRect.top,\n      });\n    }\n  };\n\n  // 使用 useMemo 缓存 timelineOptions，避免不必要的重复生成\n  const timelineOptions = useMemo(() => {\n    return waves.map((wave, index) => ({\n      index,\n      title: wave.title,\n    }));\n  }, [waves]);\n\n  return (\n    <div \n      ref={containerRef} \n      onMouseMove={handleMouseMove} \n      style={{ \n        padding: '20px', \n        position: 'relative'\n      }}\n    >\n      {/* 全局添加事件 Modal */}\n      <AddEventModal \n        isOpen={showGlobalAddModal} \n        onClose={() => setShowGlobalAddModal(false)} \n        onSubmit={handleSubmitNewEvent} \n        timelineOptions={timelineOptions}\n      />\n      \n      {/* 填写连接原因 Modal */}\n      <ConnectionReasonModal \n        isOpen={showConnectionModal}\n        onClose={() => {\n          setShowConnectionModal(false);\n          setPendingConnection(null);\n          setPendingConnectionEnd(null);\n        }}\n        onSubmit={handleSubmitConnection}\n      />\n\n      {/* 全局 Hover 弹框 */}\n      <GlobalTooltip hoveredEvent={hoveredEvent} />\n\n      <h1 style={{ textAlign: 'center', marginBottom: '20px' }}>\n        Analogical Timeline of Tech Wave\n      </h1>\n      <h2 style={{ textAlign: 'center'}}>History doesn't repeat itself, but it often rhymes.</h2>\n\n      {/* 右上角 全局添加事件按钮（改为蓝色） */}\n      <button\n        onClick={() => setShowGlobalAddModal(true)}\n        style={{\n          position: 'fixed',\n          top: '20px',\n          right: '20px',\n          width: '40px',\n          height: '40px',\n          borderRadius: '50%',\n          backgroundColor: '#007BFF',\n          border: 'none',\n          color: '#fff',\n          fontSize: '24px',\n          fontWeight: 'bold',\n          cursor: 'pointer',\n          zIndex: 1001,\n          boxShadow: '0 2px 5px rgba(0,0,0,0.3)',\n        }}\n        title=\"Add Event\"\n      >\n        +\n      </button>\n\n      {/* 多个 wave 并排显示 */}\n      <div \n        style={{ \n          display: 'flex', \n          justifyContent: 'space-around', \n          flexWrap: 'wrap', \n          marginTop: '40px', \n          position: 'relative',\n          zIndex: 0,\n        }}\n      >\n        {waves.map((wave, index) => (\n          <Timeline\n            key={index}\n            timelineIndex={index}\n            wave={wave}\n            registerPosition={registerPosition}\n            onEventClick={handleEventClick}\n            onDeleteEvent={handleDeleteEvent}\n            scrollPos={scrollPos}\n            setHoveredEvent={setHoveredEvent}\n          />\n        ))}\n      </div>\n\n      {/* 画所有连接的 SVG 层 */}\n      <ConnectionsLayer\n        connections={connections}\n        eventPositions={eventPositions}\n        containerRef={containerRef}\n        pendingConnection={pendingConnection}\n        pendingConnectionEnd={pendingConnectionEnd}\n        onDeleteConnection={handleDeleteConnection}\n      />\n    </div>\n  );\n}\n\nexport default Showcase;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}