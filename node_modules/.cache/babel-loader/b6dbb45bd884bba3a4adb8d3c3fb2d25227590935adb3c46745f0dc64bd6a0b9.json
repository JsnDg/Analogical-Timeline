{"ast":null,"code":"var _jsxFileName = \"/Users/jasonding/Desktop/Robot2025/src/components/Showcase.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\n\n/**\n * 单个事件节点组件\n * 增加了蓝色节点的 ref 用于计算正确位置，并将蓝色节点与日期、标题组合在一起，\n * 同时监听 scrollPos 更新位置信息。\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction EventItem({\n  event,\n  eventId,\n  registerPosition,\n  onEventClick,\n  scrollPos\n}) {\n  _s();\n  const itemRef = useRef(null);\n  const blueDotRef = useRef(null);\n  const [hover, setHover] = useState(false);\n  const tooltipStyle = {\n    position: 'absolute',\n    top: '-60px',\n    left: '50%',\n    transform: 'translateX(-50%)',\n    padding: '8px 12px',\n    backgroundColor: '#fff',\n    border: '1px solid #ccc',\n    borderRadius: '8px',\n    whiteSpace: 'nowrap',\n    zIndex: 10,\n    boxShadow: '0 2px 8px rgba(0,0,0,0.15)',\n    minWidth: '220px'\n  };\n  useEffect(() => {\n    if (blueDotRef.current) {\n      const rect = blueDotRef.current.getBoundingClientRect();\n      const pos = {\n        x: rect.left + rect.width / 2,\n        y: rect.top + rect.height / 2\n      };\n      registerPosition(eventId, pos);\n    }\n  }, [blueDotRef, registerPosition, eventId, scrollPos]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: itemRef,\n    style: {\n      display: 'flex',\n      alignItems: 'center',\n      marginBottom: '20px',\n      cursor: 'pointer',\n      position: 'relative',\n      padding: '4px 8px'\n    },\n    onMouseEnter: () => setHover(true),\n    onMouseLeave: () => setHover(false),\n    onClick: () => onEventClick && onEventClick(eventId),\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      ref: blueDotRef,\n      style: {\n        width: '16px',\n        height: '16px',\n        borderRadius: '50%',\n        backgroundColor: '#007BFF',\n        marginRight: '8px',\n        flexShrink: 0\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          border: '2px solid #ddd',\n          borderRadius: '20px',\n          padding: '8px 14px',\n          background: '#fff',\n          fontSize: '15px',\n          minWidth: '120px',\n          textAlign: 'center',\n          marginBottom: '4px',\n          boxShadow: '0 2px 4px rgba(0,0,0,0.1)'\n        },\n        children: event.date\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          fontSize: '14px',\n          color: '#333',\n          textAlign: 'left',\n          fontWeight: 'bold'\n        },\n        children: event.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), hover && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: tooltipStyle,\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        style: {\n          display: 'block',\n          marginBottom: '6px'\n        },\n        children: event.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          fontSize: '13px',\n          color: '#333'\n        },\n        children: event.detail\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n\n/**\n * 单条浪潮的时间线组件\n * 通过 scrollPos 传递保证每次滚动时子组件能重新计算节点位置\n */\n_s(EventItem, \"cr7o0zMnNWHP6Yc2XDKOdN7ME9k=\");\n_c = EventItem;\nfunction Timeline({\n  wave,\n  waveIndex,\n  registerPosition,\n  onEventClick,\n  scrollPos\n}) {\n  // 延长时间线20%\n  const timelineHeight = 576;\n  const timestamps = wave.events.map(e => new Date(e.date).getTime());\n  const earliestTime = Math.min(...timestamps);\n  const latestTime = Math.max(...timestamps);\n  const totalTimeSpan = latestTime - earliestTime;\n  const safeTimeSpan = totalTimeSpan === 0 ? 1 : totalTimeSpan;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      flex: '1',\n      margin: '0 20px',\n      position: 'relative'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      style: {\n        fontSize: '16px',\n        marginBottom: '5px',\n        textAlign: 'center'\n      },\n      children: wave.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        fontSize: '14px',\n        color: '#666',\n        marginBottom: '20px',\n        textAlign: 'center'\n      },\n      children: wave.period\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: 'relative',\n        width: '2px',\n        backgroundColor: '#bbb',\n        height: timelineHeight + 'px',\n        marginLeft: '0',\n        borderRadius: '1px'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          position: 'absolute',\n          top: '0',\n          left: '-10px',\n          right: '-10px'\n        },\n        children: wave.events.map((event, index) => {\n          const currentTime = new Date(event.date).getTime();\n          const offset = currentTime - earliestTime;\n          const ratio = offset / safeTimeSpan;\n          const pos = ratio * timelineHeight;\n          const eventId = `${waveIndex}-${index}`;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              position: 'absolute',\n              top: pos + 'px',\n              width: '220px'\n            },\n            children: /*#__PURE__*/_jsxDEV(EventItem, {\n              event: event,\n              eventId: eventId,\n              registerPosition: registerPosition,\n              onEventClick: onEventClick,\n              scrollPos: scrollPos\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 17\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 109,\n    columnNumber: 5\n  }, this);\n}\n\n/**\n * 连接线组件：通过 SVG 绘制所有红色连接线，并根据容器偏移进行调整\n */\n_c2 = Timeline;\nfunction ConnectionsLayer({\n  connections,\n  eventPositions,\n  containerRef\n}) {\n  const containerRect = containerRef.current ? containerRef.current.getBoundingClientRect() : {\n    left: 0,\n    top: 0\n  };\n  return /*#__PURE__*/_jsxDEV(\"svg\", {\n    style: {\n      position: 'absolute',\n      top: 0,\n      left: 0,\n      pointerEvents: 'none',\n      width: '100%',\n      height: '100%'\n    },\n    children: connections.map((conn, index) => {\n      const fromPos = eventPositions[conn.from];\n      const toPos = eventPositions[conn.to];\n      if (!fromPos || !toPos) return null;\n      const adjustedFrom = {\n        x: fromPos.x - containerRect.left,\n        y: fromPos.y - containerRect.top\n      };\n      const adjustedTo = {\n        x: toPos.x - containerRect.left,\n        y: toPos.y - containerRect.top\n      };\n      const midX = (adjustedFrom.x + adjustedTo.x) / 2;\n      const midY = (adjustedFrom.y + adjustedTo.y) / 2;\n      return /*#__PURE__*/_jsxDEV(\"g\", {\n        children: [/*#__PURE__*/_jsxDEV(\"line\", {\n          x1: adjustedFrom.x,\n          y1: adjustedFrom.y,\n          x2: adjustedTo.x,\n          y2: adjustedTo.y,\n          stroke: \"#f00\",\n          strokeWidth: \"2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n          x: midX,\n          y: midY - 5,\n          fill: \"#f00\",\n          fontSize: \"12\",\n          textAnchor: \"middle\",\n          children: conn.reason\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 163,\n    columnNumber: 5\n  }, this);\n}\n\n/**\n * 主容器组件：包含所有浪潮时间线与连接线\n * - 添加了 containerRef 用于计算相对偏移\n * - 通过 scrollPos 状态监听滚动更新，从而实时刷新各节点位置，确保连接线始终准确对齐\n * - 同时支持手动连接两个事件\n */\n_c3 = ConnectionsLayer;\nfunction Showcase() {\n  _s2();\n  const waves = [{\n    title: '个人电脑',\n    period: '(1979-1983)',\n    events: [{\n      date: '1979-08-12',\n      title: 'VisiCalc 发布',\n      detail: '首款电子表格软件 VisiCalc 面向 Apple II 推出。'\n    }, {\n      date: '1980-08-25',\n      title: 'IBM PC 立项',\n      detail: 'IBM 决定组建个人电脑部门，启动“Project Chess”。'\n    }, {\n      date: '1981-08-12',\n      title: 'IBM PC 发布',\n      detail: 'IBM 5150 机型问世，搭载 Intel 8088 CPU 和 MS-DOS。'\n    }, {\n      date: '1982-02-16',\n      title: 'Compaq 创立',\n      detail: '康柏公司成立，专注于生产 IBM PC 兼容机。'\n    }, {\n      date: '1983-05-30',\n      title: 'Apple Lisa 推出',\n      detail: 'Apple 发布 Apple Lisa，标志着图形用户界面的发展。'\n    }]\n  }, {\n    title: '互联网',\n    period: '(1994-2000)',\n    events: [{\n      date: '1994-04-04',\n      title: 'Netscape 创立',\n      detail: 'Mosaic 团队成员创立 Netscape，专注浏览器研发。'\n    }, {\n      date: '1995-07-05',\n      title: 'Amazon 上线',\n      detail: '杰夫·贝索斯创立的电商网站 Amazon.com 开始运营。'\n    }, {\n      date: '1996-07-04',\n      title: 'Hotmail 推出',\n      detail: '免费网络邮件服务 Hotmail 上线，迅速风靡全球。'\n    }, {\n      date: '1997-03-02',\n      title: 'AOL 收购 CompuServe',\n      detail: 'AOL 以 1.2 亿美元收购 CompuServe 网络业务。'\n    }, {\n      date: '1999-01-15',\n      title: 'Google 搜索上线',\n      detail: 'Google 推出搜索引擎，革新了互联网信息检索方式。'\n    }, {\n      date: '2000-06-26',\n      title: 'Dot-com 泡沫顶峰',\n      detail: '互联网公司大量上市，市场繁荣到达顶峰。'\n    }]\n  }, {\n    title: '智能手机',\n    period: '(2007-2012)',\n    events: [{\n      date: '2007-01-09',\n      title: 'iPhone 发布',\n      detail: '苹果首款 iPhone 在 Macworld 大会上正式发布。'\n    }, {\n      date: '2007-06-29',\n      title: 'iPhone 开售',\n      detail: '初代 iPhone 在美国上市，引发消费者排队抢购。'\n    }, {\n      date: '2008-09-23',\n      title: 'Android 1.0 发布',\n      detail: '搭载 Android 系统的 HTC Dream 上市。'\n    }, {\n      date: '2009-03-17',\n      title: 'iPhone OS 3.0 公布',\n      detail: '苹果发布 iPhone OS 3.0，新增推送通知等功能。'\n    }, {\n      date: '2010-10-04',\n      title: 'Samsung Galaxy S 系列',\n      detail: '三星发布 Galaxy S 系列，标志着安卓阵营的崛起。'\n    }, {\n      date: '2012-09-05',\n      title: 'iPhone 5 发布',\n      detail: '苹果发布 iPhone 5，采用全新设计和更快的处理器。'\n    }]\n  }, {\n    title: '电动车',\n    period: '(2015-2020)',\n    events: [{\n      date: '2015-01-12',\n      title: 'Chevrolet Bolt 概念车',\n      detail: '通用在北美车展发布 Bolt EV 概念车，主打平价长续航。'\n    }, {\n      date: '2016-03-31',\n      title: 'Tesla Model 3 亮相',\n      detail: '特斯拉举行 Model 3 发布会，引发大量预订。'\n    }, {\n      date: '2017-07-28',\n      title: 'Model 3 首批交付',\n      detail: '特斯拉向首批用户交付 Model 3 量产车。'\n    }, {\n      date: '2018-09-25',\n      title: 'NIO ES8 发布',\n      detail: '蔚来发布高端电动 SUV，推动国产电动车市场。'\n    }, {\n      date: '2020-01-15',\n      title: 'Tesla Model Y 推出',\n      detail: '特斯拉推出更紧凑的 Model Y，进一步拓展电动车市场。'\n    }]\n  }, {\n    title: '生成式 AI',\n    period: '(2019-2023)',\n    events: [{\n      date: '2019-02-14',\n      title: 'OpenAI GPT-2 公布',\n      detail: 'OpenAI 宣布 GPT-2 模型，但仅限“受限发布”。'\n    }, {\n      date: '2020-05-28',\n      title: 'GPT-3 论文发表',\n      detail: '“Language Models are Few-Shot Learners” 论文上载至 arXiv。'\n    }, {\n      date: '2021-08-10',\n      title: 'DALL·E 展示',\n      detail: 'OpenAI 展示 DALL·E，展示了 AI 生成图像的能力。'\n    }, {\n      date: '2022-03-15',\n      title: 'GPT-3.5 发布',\n      detail: 'OpenAI 发布 GPT-3.5 text-davinci-002 API。'\n    }, {\n      date: '2022-11-30',\n      title: 'ChatGPT 上线',\n      detail: 'OpenAI 推出对话式 AI ChatGPT，用户量激增。'\n    }, {\n      date: '2023-06-12',\n      title: '生成式 AI 全面爆发',\n      detail: '各大科技公司纷纷推出生成式 AI 应用，加速产业变革。'\n    }]\n  }];\n\n  // 存储各事件的位置信息（键为 eventId，值为 { x, y }）\n  const [eventPositions, setEventPositions] = useState({});\n  const registerPosition = (id, pos) => {\n    setEventPositions(prev => ({\n      ...prev,\n      [id]: pos\n    }));\n  };\n\n  // 初始连接关系\n  const [connections, setConnections] = useState([{\n    from: '0-2',\n    to: '1-0',\n    reason: '推动网络化办公'\n  }, {\n    from: '0-4',\n    to: '1-4',\n    reason: '用户体验革新'\n  }, {\n    from: '1-5',\n    to: '2-5',\n    reason: '信息获取方式转变'\n  }, {\n    from: '1-3',\n    to: '2-2',\n    reason: '技术互补'\n  }, {\n    from: '2-4',\n    to: '3-4',\n    reason: '智能化互联'\n  }, {\n    from: '1-4',\n    to: '4-0',\n    reason: '大数据启发'\n  }, {\n    from: '2-5',\n    to: '4-5',\n    reason: '移动端需求激增'\n  }, {\n    from: '3-3',\n    to: '4-2',\n    reason: '智能驾驶发展'\n  },\n  // 新增红色连接\n  {\n    from: '0-1',\n    to: '1-1',\n    reason: '初期网络试验'\n  }, {\n    from: '1-2',\n    to: '2-3',\n    reason: '手机技术推动'\n  }, {\n    from: '3-1',\n    to: '4-3',\n    reason: '智能变革'\n  }]);\n\n  // 用于存储用户手动选择的事件（最多一个待选事件）\n  const [selectedEvents, setSelectedEvents] = useState([]);\n  const handleEventClick = eventId => {\n    if (selectedEvents.length === 0) {\n      setSelectedEvents([eventId]);\n    } else if (selectedEvents.length === 1) {\n      if (selectedEvents[0] === eventId) {\n        setSelectedEvents([]);\n        return;\n      }\n      const reason = window.prompt(\"请输入连接理由\", \"手动连接\") || \"手动连接\";\n      const newConnection = {\n        from: selectedEvents[0],\n        to: eventId,\n        reason\n      };\n      setConnections(prev => [...prev, newConnection]);\n      setSelectedEvents([]);\n    }\n  };\n\n  // containerRef 用于获取主容器的位置信息\n  const containerRef = useRef(null);\n  // scrollPos 用于监听滚动更新，触发事件位置重计算\n  const [scrollPos, setScrollPos] = useState(0);\n  useEffect(() => {\n    const handleScroll = () => {\n      setScrollPos(window.scrollY);\n    };\n    window.addEventListener('scroll', handleScroll);\n    return () => {\n      window.removeEventListener('scroll', handleScroll);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: containerRef,\n    style: {\n      padding: '20px',\n      position: 'relative'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      style: {\n        textAlign: 'center',\n        marginBottom: '40px'\n      },\n      children: \"How to do the right things in tech wave\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 436,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        justifyContent: 'space-around',\n        flexWrap: 'wrap',\n        marginTop: '40px'\n      },\n      children: waves.map((wave, index) => /*#__PURE__*/_jsxDEV(Timeline, {\n        wave: wave,\n        waveIndex: index,\n        registerPosition: registerPosition,\n        onEventClick: handleEventClick,\n        scrollPos: scrollPos\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 448,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 439,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ConnectionsLayer, {\n      connections: connections,\n      eventPositions: eventPositions,\n      containerRef: containerRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 459,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 435,\n    columnNumber: 5\n  }, this);\n}\n_s2(Showcase, \"XVOiThxVwsgVTAxjqIRWfxb1Ji8=\");\n_c4 = Showcase;\nexport default Showcase;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"EventItem\");\n$RefreshReg$(_c2, \"Timeline\");\n$RefreshReg$(_c3, \"ConnectionsLayer\");\n$RefreshReg$(_c4, \"Showcase\");","map":{"version":3,"names":["React","useState","useEffect","useRef","jsxDEV","_jsxDEV","EventItem","event","eventId","registerPosition","onEventClick","scrollPos","_s","itemRef","blueDotRef","hover","setHover","tooltipStyle","position","top","left","transform","padding","backgroundColor","border","borderRadius","whiteSpace","zIndex","boxShadow","minWidth","current","rect","getBoundingClientRect","pos","x","width","y","height","ref","style","display","alignItems","marginBottom","cursor","onMouseEnter","onMouseLeave","onClick","children","marginRight","flexShrink","fileName","_jsxFileName","lineNumber","columnNumber","background","fontSize","textAlign","date","color","fontWeight","title","detail","_c","Timeline","wave","waveIndex","timelineHeight","timestamps","events","map","e","Date","getTime","earliestTime","Math","min","latestTime","max","totalTimeSpan","safeTimeSpan","flex","margin","period","marginLeft","right","index","currentTime","offset","ratio","_c2","ConnectionsLayer","connections","eventPositions","containerRef","containerRect","pointerEvents","conn","fromPos","from","toPos","to","adjustedFrom","adjustedTo","midX","midY","x1","y1","x2","y2","stroke","strokeWidth","fill","textAnchor","reason","_c3","Showcase","_s2","waves","setEventPositions","id","prev","setConnections","selectedEvents","setSelectedEvents","handleEventClick","length","window","prompt","newConnection","setScrollPos","handleScroll","scrollY","addEventListener","removeEventListener","justifyContent","flexWrap","marginTop","_c4","$RefreshReg$"],"sources":["/Users/jasonding/Desktop/Robot2025/src/components/Showcase.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\n\n/**\n * 单个事件节点组件\n * 增加了蓝色节点的 ref 用于计算正确位置，并将蓝色节点与日期、标题组合在一起，\n * 同时监听 scrollPos 更新位置信息。\n */\nfunction EventItem({ event, eventId, registerPosition, onEventClick, scrollPos }) {\n  const itemRef = useRef(null);\n  const blueDotRef = useRef(null);\n  const [hover, setHover] = useState(false);\n\n  const tooltipStyle = {\n    position: 'absolute',\n    top: '-60px',\n    left: '50%',\n    transform: 'translateX(-50%)',\n    padding: '8px 12px',\n    backgroundColor: '#fff',\n    border: '1px solid #ccc',\n    borderRadius: '8px',\n    whiteSpace: 'nowrap',\n    zIndex: 10,\n    boxShadow: '0 2px 8px rgba(0,0,0,0.15)',\n    minWidth: '220px',\n  };\n\n  useEffect(() => {\n    if (blueDotRef.current) {\n      const rect = blueDotRef.current.getBoundingClientRect();\n      const pos = { x: rect.left + rect.width / 2, y: rect.top + rect.height / 2 };\n      registerPosition(eventId, pos);\n    }\n  }, [blueDotRef, registerPosition, eventId, scrollPos]);\n\n  return (\n    <div\n      ref={itemRef}\n      style={{\n        display: 'flex',\n        alignItems: 'center',\n        marginBottom: '20px',\n        cursor: 'pointer',\n        position: 'relative',\n        padding: '4px 8px',\n      }}\n      onMouseEnter={() => setHover(true)}\n      onMouseLeave={() => setHover(false)}\n      onClick={() => onEventClick && onEventClick(eventId)}\n    >\n      {/* 蓝色节点 */}\n      <div\n        ref={blueDotRef}\n        style={{\n          width: '16px',\n          height: '16px',\n          borderRadius: '50%',\n          backgroundColor: '#007BFF',\n          marginRight: '8px',\n          flexShrink: 0,\n        }}\n      />\n      {/* 日期与标题部分 */}\n      <div>\n        <div\n          style={{\n            border: '2px solid #ddd',\n            borderRadius: '20px',\n            padding: '8px 14px',\n            background: '#fff',\n            fontSize: '15px',\n            minWidth: '120px',\n            textAlign: 'center',\n            marginBottom: '4px',\n            boxShadow: '0 2px 4px rgba(0,0,0,0.1)',\n          }}\n        >\n          {event.date}\n        </div>\n        <div style={{ fontSize: '14px', color: '#333', textAlign: 'left', fontWeight: 'bold' }}>\n          {event.title}\n        </div>\n      </div>\n\n      {hover && (\n        <div style={tooltipStyle}>\n          <strong style={{ display: 'block', marginBottom: '6px' }}>{event.title}</strong>\n          <div style={{ fontSize: '13px', color: '#333' }}>{event.detail}</div>\n        </div>\n      )}\n    </div>\n  );\n}\n\n/**\n * 单条浪潮的时间线组件\n * 通过 scrollPos 传递保证每次滚动时子组件能重新计算节点位置\n */\nfunction Timeline({ wave, waveIndex, registerPosition, onEventClick, scrollPos }) {\n  // 延长时间线20%\n  const timelineHeight = 576;\n  const timestamps = wave.events.map(e => new Date(e.date).getTime());\n  const earliestTime = Math.min(...timestamps);\n  const latestTime = Math.max(...timestamps);\n  const totalTimeSpan = latestTime - earliestTime;\n  const safeTimeSpan = totalTimeSpan === 0 ? 1 : totalTimeSpan;\n\n  return (\n    <div style={{ flex: '1', margin: '0 20px', position: 'relative' }}>\n      <h2 style={{ fontSize: '16px', marginBottom: '5px', textAlign: 'center' }}>{wave.title}</h2>\n      <div style={{ fontSize: '14px', color: '#666', marginBottom: '20px', textAlign: 'center' }}>\n        {wave.period}\n      </div>\n\n      <div\n        style={{\n          position: 'relative',\n          width: '2px',\n          backgroundColor: '#bbb',\n          height: timelineHeight + 'px',\n          marginLeft: '0',\n          borderRadius: '1px',\n        }}\n      >\n        <div style={{ position: 'absolute', top: '0', left: '-10px', right: '-10px' }}>\n          {wave.events.map((event, index) => {\n            const currentTime = new Date(event.date).getTime();\n            const offset = currentTime - earliestTime;\n            const ratio = offset / safeTimeSpan;\n            const pos = ratio * timelineHeight;\n            const eventId = `${waveIndex}-${index}`;\n            return (\n              <div\n                key={index}\n                style={{\n                  position: 'absolute',\n                  top: pos + 'px',\n                  width: '220px',\n                }}\n              >\n                <EventItem\n                  event={event}\n                  eventId={eventId}\n                  registerPosition={registerPosition}\n                  onEventClick={onEventClick}\n                  scrollPos={scrollPos}\n                />\n              </div>\n            );\n          })}\n        </div>\n      </div>\n    </div>\n  );\n}\n\n/**\n * 连接线组件：通过 SVG 绘制所有红色连接线，并根据容器偏移进行调整\n */\nfunction ConnectionsLayer({ connections, eventPositions, containerRef }) {\n  const containerRect = containerRef.current ? containerRef.current.getBoundingClientRect() : { left: 0, top: 0 };\n  return (\n    <svg\n      style={{\n        position: 'absolute',\n        top: 0,\n        left: 0,\n        pointerEvents: 'none',\n        width: '100%',\n        height: '100%',\n      }}\n    >\n      {connections.map((conn, index) => {\n        const fromPos = eventPositions[conn.from];\n        const toPos = eventPositions[conn.to];\n        if (!fromPos || !toPos) return null;\n        const adjustedFrom = { x: fromPos.x - containerRect.left, y: fromPos.y - containerRect.top };\n        const adjustedTo = { x: toPos.x - containerRect.left, y: toPos.y - containerRect.top };\n        const midX = (adjustedFrom.x + adjustedTo.x) / 2;\n        const midY = (adjustedFrom.y + adjustedTo.y) / 2;\n        return (\n          <g key={index}>\n            <line\n              x1={adjustedFrom.x}\n              y1={adjustedFrom.y}\n              x2={adjustedTo.x}\n              y2={adjustedTo.y}\n              stroke=\"#f00\"\n              strokeWidth=\"2\"\n            />\n            <text x={midX} y={midY - 5} fill=\"#f00\" fontSize=\"12\" textAnchor=\"middle\">\n              {conn.reason}\n            </text>\n          </g>\n        );\n      })}\n    </svg>\n  );\n}\n\n/**\n * 主容器组件：包含所有浪潮时间线与连接线\n * - 添加了 containerRef 用于计算相对偏移\n * - 通过 scrollPos 状态监听滚动更新，从而实时刷新各节点位置，确保连接线始终准确对齐\n * - 同时支持手动连接两个事件\n */\nfunction Showcase() {\n  const waves = [\n    {\n      title: '个人电脑',\n      period: '(1979-1983)',\n      events: [\n        {\n          date: '1979-08-12',\n          title: 'VisiCalc 发布',\n          detail: '首款电子表格软件 VisiCalc 面向 Apple II 推出。',\n        },\n        {\n          date: '1980-08-25',\n          title: 'IBM PC 立项',\n          detail: 'IBM 决定组建个人电脑部门，启动“Project Chess”。',\n        },\n        {\n          date: '1981-08-12',\n          title: 'IBM PC 发布',\n          detail: 'IBM 5150 机型问世，搭载 Intel 8088 CPU 和 MS-DOS。',\n        },\n        {\n          date: '1982-02-16',\n          title: 'Compaq 创立',\n          detail: '康柏公司成立，专注于生产 IBM PC 兼容机。',\n        },\n        {\n          date: '1983-05-30',\n          title: 'Apple Lisa 推出',\n          detail: 'Apple 发布 Apple Lisa，标志着图形用户界面的发展。',\n        },\n      ],\n    },\n    {\n      title: '互联网',\n      period: '(1994-2000)',\n      events: [\n        {\n          date: '1994-04-04',\n          title: 'Netscape 创立',\n          detail: 'Mosaic 团队成员创立 Netscape，专注浏览器研发。',\n        },\n        {\n          date: '1995-07-05',\n          title: 'Amazon 上线',\n          detail: '杰夫·贝索斯创立的电商网站 Amazon.com 开始运营。',\n        },\n        {\n          date: '1996-07-04',\n          title: 'Hotmail 推出',\n          detail: '免费网络邮件服务 Hotmail 上线，迅速风靡全球。',\n        },\n        {\n          date: '1997-03-02',\n          title: 'AOL 收购 CompuServe',\n          detail: 'AOL 以 1.2 亿美元收购 CompuServe 网络业务。',\n        },\n        {\n          date: '1999-01-15',\n          title: 'Google 搜索上线',\n          detail: 'Google 推出搜索引擎，革新了互联网信息检索方式。',\n        },\n        {\n          date: '2000-06-26',\n          title: 'Dot-com 泡沫顶峰',\n          detail: '互联网公司大量上市，市场繁荣到达顶峰。',\n        },\n      ],\n    },\n    {\n      title: '智能手机',\n      period: '(2007-2012)',\n      events: [\n        {\n          date: '2007-01-09',\n          title: 'iPhone 发布',\n          detail: '苹果首款 iPhone 在 Macworld 大会上正式发布。',\n        },\n        {\n          date: '2007-06-29',\n          title: 'iPhone 开售',\n          detail: '初代 iPhone 在美国上市，引发消费者排队抢购。',\n        },\n        {\n          date: '2008-09-23',\n          title: 'Android 1.0 发布',\n          detail: '搭载 Android 系统的 HTC Dream 上市。',\n        },\n        {\n          date: '2009-03-17',\n          title: 'iPhone OS 3.0 公布',\n          detail: '苹果发布 iPhone OS 3.0，新增推送通知等功能。',\n        },\n        {\n          date: '2010-10-04',\n          title: 'Samsung Galaxy S 系列',\n          detail: '三星发布 Galaxy S 系列，标志着安卓阵营的崛起。',\n        },\n        {\n          date: '2012-09-05',\n          title: 'iPhone 5 发布',\n          detail: '苹果发布 iPhone 5，采用全新设计和更快的处理器。',\n        },\n      ],\n    },\n    {\n      title: '电动车',\n      period: '(2015-2020)',\n      events: [\n        {\n          date: '2015-01-12',\n          title: 'Chevrolet Bolt 概念车',\n          detail: '通用在北美车展发布 Bolt EV 概念车，主打平价长续航。',\n        },\n        {\n          date: '2016-03-31',\n          title: 'Tesla Model 3 亮相',\n          detail: '特斯拉举行 Model 3 发布会，引发大量预订。',\n        },\n        {\n          date: '2017-07-28',\n          title: 'Model 3 首批交付',\n          detail: '特斯拉向首批用户交付 Model 3 量产车。',\n        },\n        {\n          date: '2018-09-25',\n          title: 'NIO ES8 发布',\n          detail: '蔚来发布高端电动 SUV，推动国产电动车市场。',\n        },\n        {\n          date: '2020-01-15',\n          title: 'Tesla Model Y 推出',\n          detail: '特斯拉推出更紧凑的 Model Y，进一步拓展电动车市场。',\n        },\n      ],\n    },\n    {\n      title: '生成式 AI',\n      period: '(2019-2023)',\n      events: [\n        {\n          date: '2019-02-14',\n          title: 'OpenAI GPT-2 公布',\n          detail: 'OpenAI 宣布 GPT-2 模型，但仅限“受限发布”。',\n        },\n        {\n          date: '2020-05-28',\n          title: 'GPT-3 论文发表',\n          detail: '“Language Models are Few-Shot Learners” 论文上载至 arXiv。',\n        },\n        {\n          date: '2021-08-10',\n          title: 'DALL·E 展示',\n          detail: 'OpenAI 展示 DALL·E，展示了 AI 生成图像的能力。',\n        },\n        {\n          date: '2022-03-15',\n          title: 'GPT-3.5 发布',\n          detail: 'OpenAI 发布 GPT-3.5 text-davinci-002 API。',\n        },\n        {\n          date: '2022-11-30',\n          title: 'ChatGPT 上线',\n          detail: 'OpenAI 推出对话式 AI ChatGPT，用户量激增。',\n        },\n        {\n          date: '2023-06-12',\n          title: '生成式 AI 全面爆发',\n          detail: '各大科技公司纷纷推出生成式 AI 应用，加速产业变革。',\n        },\n      ],\n    },\n  ];\n\n  // 存储各事件的位置信息（键为 eventId，值为 { x, y }）\n  const [eventPositions, setEventPositions] = useState({});\n  const registerPosition = (id, pos) => {\n    setEventPositions(prev => ({ ...prev, [id]: pos }));\n  };\n\n  // 初始连接关系\n  const [connections, setConnections] = useState([\n    { from: '0-2', to: '1-0', reason: '推动网络化办公' },\n    { from: '0-4', to: '1-4', reason: '用户体验革新' },\n    { from: '1-5', to: '2-5', reason: '信息获取方式转变' },\n    { from: '1-3', to: '2-2', reason: '技术互补' },\n    { from: '2-4', to: '3-4', reason: '智能化互联' },\n    { from: '1-4', to: '4-0', reason: '大数据启发' },\n    { from: '2-5', to: '4-5', reason: '移动端需求激增' },\n    { from: '3-3', to: '4-2', reason: '智能驾驶发展' },\n    // 新增红色连接\n    { from: '0-1', to: '1-1', reason: '初期网络试验' },\n    { from: '1-2', to: '2-3', reason: '手机技术推动' },\n    { from: '3-1', to: '4-3', reason: '智能变革' },\n  ]);\n\n  // 用于存储用户手动选择的事件（最多一个待选事件）\n  const [selectedEvents, setSelectedEvents] = useState([]);\n\n  const handleEventClick = (eventId) => {\n    if (selectedEvents.length === 0) {\n      setSelectedEvents([eventId]);\n    } else if (selectedEvents.length === 1) {\n      if (selectedEvents[0] === eventId) {\n        setSelectedEvents([]);\n        return;\n      }\n      const reason = window.prompt(\"请输入连接理由\", \"手动连接\") || \"手动连接\";\n      const newConnection = { from: selectedEvents[0], to: eventId, reason };\n      setConnections(prev => [...prev, newConnection]);\n      setSelectedEvents([]);\n    }\n  };\n\n  // containerRef 用于获取主容器的位置信息\n  const containerRef = useRef(null);\n  // scrollPos 用于监听滚动更新，触发事件位置重计算\n  const [scrollPos, setScrollPos] = useState(0);\n\n  useEffect(() => {\n    const handleScroll = () => {\n      setScrollPos(window.scrollY);\n    };\n    window.addEventListener('scroll', handleScroll);\n    return () => { window.removeEventListener('scroll', handleScroll); };\n  }, []);\n\n  return (\n    <div ref={containerRef} style={{ padding: '20px', position: 'relative' }}>\n      <h1 style={{ textAlign: 'center', marginBottom: '40px' }}>\n        How to do the right things in tech wave\n      </h1>\n      <div\n        style={{\n          display: 'flex',\n          justifyContent: 'space-around',\n          flexWrap: 'wrap',\n          marginTop: '40px',\n        }}\n      >\n        {waves.map((wave, index) => (\n          <Timeline\n            key={index}\n            wave={wave}\n            waveIndex={index}\n            registerPosition={registerPosition}\n            onEventClick={handleEventClick}\n            scrollPos={scrollPos}\n          />\n        ))}\n      </div>\n      {/* 绘制所有连接线 */}\n      <ConnectionsLayer\n        connections={connections}\n        eventPositions={eventPositions}\n        containerRef={containerRef}\n      />\n    </div>\n  );\n}\n\nexport default Showcase;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}